{"./":{"url":"./","title":"IDOSDK","keywords":"","body":"{IDO standardization documentation} IDO SDK integration instructions IDO SDK Bluetooth library interface description IDO SDK Bridge Instructions IDO SDK Alexa description Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 17:02:21 "},"doc/IDOBluetooth.html":{"url":"doc/IDOBluetooth.html","title":"IDO Bluetooth","keywords":"","body":"Bluetooth library Functional Overview Based on the native platform Bluetooth library package, it is used to scan peripheral devices, obtain the returned device collection, display it in the list, select the device that needs to be connected, and return the device information and whether the device is in OTA mode after the connection is successful. If the connection fails, there will be an error callback . The default scanning signal filtering parameter is 80, and the automatic scanning connection timeout is 20 seconds. Methods addBleDelegate(api:) Add bluetooth proxy addDfuDelegate(api:) Add DFU upgrade (nordic) bluetoothRegister(heartPingSecond:outputToConsole:) Register, the program starts running and calls delegate agent heartPingSecond: heartbeat packet interval (ios) outputToConsole: console output log startScan(macAddress:completion:) Start searching macAddress (Android): Search based on Mac address. Returns the specified search device. If not specified, returns null. scanFilter(deviceName:deviceID:macAddress:uuid:) Search filters deviceName: only search for devices with deviceName deviceID: only search for devices with deviceID macAddress: Only search devices with macAddress uuid: Only search devices with uuid stopScan() Stop search connect(device:) Connection device: Mac address must be passed, iOS must bring uuid, it is best to use the object returned by search autoConnect(device:) Use this to reconnect the device cancelConnect(macAddress:completion:) Cancel connection getBluetoothState(completion:) Get Bluetooth status getDeviceState(device:completion:) Get device connection status writeData(data:device:type:completion:) send data data: data device: device sending data type:0 BLE data, 1 SPP data setBtPair(device:) bt pairing (android) cancelPair(device:) Unpair (android) connectSPP(btMacAddress:) Connect SPP disconnectSPP(btMacAddress:) Disconnect SPP startNordicDFU(config:) Initiate dfu upgrade Example Register Bluetooth module Swift: //Register Bluetooth library sdk.ble.addBleDelegate(api: ) sdk.ble.bluetoothRegister(heartPingSecond: 5, outputToConsole: false) sdk.ble.getBluetoothState { [weak self] stateModel in //Status monitoring } Kotlin: //Register Bluetooth library sdk.ble.addBleDelegate(IDOBleDelegate) sdk.ble.bluetoothRegister(false) sdk.ble.getBluetoothState { //Status monitoring } Agent implementation Swift: // implement proxy extension SomeClass: IDOBleDelegate { func scanResult(list: [IDODeviceModel]?) { //Scan device list print(\"scanResult list count:\\(String(describing: list?.count))\") } func bluetoothState(state: IDOBluetoothStateModel) { //Bluetooth status print(\"on bluetoothState callback: \\(String(describing: state.scanType?.rawValue))\") } func deviceState(state: IDODeviceStateModel) { // device status print(\"on deviceState callback: \\(String(describing: state.state))\") } } Kotlin: // implement proxy private val bleDelegate = object : IDOBleDelegate { override fun scanResult(list: List?) { //Scan device list } override fun bluetoothState(state: IDOBluetoothStateModel) { //Bluetooth status } override fun deviceState(state: IDODeviceStateModel) { // device status } override fun stateSPP(state: IDOSppStateModel) { } override fun writeSPPCompleteState(btMacAddress: String) { } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:09:54 "},"doc/IDOBridge.html":{"url":"doc/IDOBridge.html","title":"IDO Bridge","keywords":"","body":"bridge BridgeInterface Used to bridge the Bluetooth library and protocol library to realize Bluetooth data and status transmission Methods setupBridge(delegate:logType:) Register, the program starts running and calls Parameters: delegate: proxy logType: log level markConnectedDevice(uniqueId:otaType:isBinded:deviceName:completion:) Mark the device as connected (called when Bluetooth is connected) Parameters: uniqueId: Android (mac address of the currently connected device), iOS (mac address or uuid of the currently connected device) otaType: Set ota mode isBinded: binding status deviceName: device name markDisconnectedDevice(macAddress:uuid:completion:) Mark the device as disconnected (called when Bluetooth is disconnected) receiveDataFromBle(data:macAddress:useSPP:) Bluetooth response data general entry type data type 0:ble 1:SPP writeDataComplete() Sending Bluetooth data completed Example Register Brigde module Swift: // protocol library sdk.bridge.setupBridge(delegate: , logType: .release) Bluetooth library registration reference Agent implementation Swift: // implement proxy extension SomeClass: IDOBridgeDelegate { //Listen to SDK status notifications func listenStatusNotification(status: IDOStatusNotification) { print(\"StatusNotification: \\(status)\") NotificationCenter.default.post(name: \"onSdkStatusChanged\", object: status) } //Listen to device active notification/control events func listenDeviceNotification(model: IDODeviceNotificationModel) { print(\"DeviceNotification: \\(model)\") NotificationCenter.default.post(name: \"onSdkDeviceStateChanged\", object: model) } } Kotlin: class BleData : IDOBridgeDelegate { override fun listenStatusNotification(status: IDOStatusNotification) { println(\"listenStatusNotification $status\"); } override fun listenDeviceNotification(status: IDODeviceNotificationModel) { println(\"listenDeviceNotification $status\"); } } Bridge Bluetooth library (internal) Use the Bluetooth library provided by the SDK Swift: // implement proxy extension SomeClass: IDOBleDelegate { func scanResult(list: [IDODeviceModel]?) { //Scan result set } func deviceState(state: IDODeviceStateModel) { //Device related status } func bluetoothState(state: IDOBluetoothStateModel) { //Bluetooth related status } } Kotlin: class Blelisten : IDOBleDelegate { override fun scanResult(list: List?) { // 扫描结果集 } override fun bluetoothState(state: IDOBluetoothStateModel) { // 蓝牙相关状态 } override fun deviceState(idoDeviceStateModel: IDODeviceStateModel) { // 设备相关状态 } } Bridge Bluetooth library (external) Use Bluetooth libraries not provided by the SDK Swift: // External Bluetooth library access // 1. When a Bluetooth device is connected or disconnected, the corresponding method of the SDK needs to be called: // Mark the device as connected let uniqueId = \"mac address or uuid of the Bluetooth device\" sdk.bridge.markConnectedDevice(uniqueId: uniqueId, otaType: .none, isBinded: false, deviceName: deviceModel.name) { rs in } // Mark the device as disconnected sdk.bridge.markDisconnectedDevice(macAddress: self.deviceModel?.macAddress, uuid: self.deviceModel?.uuid) { rs in } // 2. Send data: Protocol library data -> Bluetooth device // In the bridge agent IDOBridgeDelegate, implement sending the received data through the Bluetooth library, and call the write completion after the sending is completed. extension SomeClass: IDOBridgeDelegate { //Need to send command data to Bluetooth device (!!!Important) func writeDataToBle(bleData: protocol_channel.IDOBleData) { guard let device = currentDeviceModel else { return } guard let characteristic = device.peripheral.writeCharacteristic() else { return } //Replace accordingly according to actual situation here bleMgr.write(peripheral: characteristic.0, characteristic: characteristic.1, data: bleData.data!) { err in if err != nil { print(\"Write failed: \\(err.debugDescription)\") }else { // Writing completed (!!!Important) sdk.bridge.writeDataComplete() } } } //Listen to SDK status notifications func listenStatusNotification(status: IDOStatusNotification) { print(\"StatusNotification: \\(status)\") NotificationCenter.default.post(name: \"onSdkStatusChanged\", object: status) } //Listen to device active notification/control events func listenDeviceNotification(model: IDODeviceNotificationModel) { print(\"DeviceNotification: \\(model)\") NotificationCenter.default.post(name: \"onSdkDeviceStateChanged\", object: model) } } // 3. Receive data: Bluetooth device -> protocol library SomeBleSDK: // for reference only / //Receive Bluetooth response data func receiveData(data: SomeDataClass) { if data.data != nil { //Send data to the protocol library sdk.bridge.receiveDataFromBle(data: data.data!, macAddress: data.macAddress or nil) } else { print(\"receiveData data is null\") } } Kotlin: //External Bluetooth library access //When connecting and disconnecting Bluetooth devices, the corresponding SDK methods need to be called: // Mark device connected var mac = \"xx:xx:xx:xx:xx:xx\" sdk.bridge.markConnectedDevice(mac: String, type: otaType, isBinded:boolean, deviceName: String) // Mark device disconnected sdk.bridge.markDisconnectedDevice(mac: String, type: otaType, isBinded:boolean, deviceName: String) //2. Send data: Protocol library data ->Bluetooth devices //In the bridge agent IDOBridgeDelegate, the received data is sent through the Bluetooth library, and the write is called after the transmission is completed // sdk.bridge.setupBridge(BleDataBrige(), IDOLogType.RELEASE) 全局注册 val uuid_service:String = \"00000aF0-0000-1000-8000-00805f9b34fb\" val uuid_characteristic_notify:String = \"00000aF7-0000-1000-8000-00805f9b34fb\" val uuid_characteristic_write:String = \"00000aF6-0000-1000-8000-00805f9b34fb\" class BleDataBrige : IDOBridgeDelegate { override fun listenStatusNotification(status: IDOStatusNotification) { Logutil.logMessage(\"bledata\",\"status:$status\") } override fun writeDataToBle(request: IDOBleDataRequest) { Logutil.logMessage(\"bledata\",\"writeDataToBle:${request.data}\") //This callback is that SDK will call back the instructions that need to be sent //Through Bluetooth service, as shown above, obtain bluetoothGatt, characteristic, and then write data bluetoothGatt.writeCharacteristic(characteristic) sdk.bridge.writeDataComplete() } override fun listenDeviceNotification(status: IDODeviceNotificationModel) { Logutil.logMessage(\"bledata\",\"listenDeviceNotification:${status}\") } private fun getCharacteristic( gatt: BluetoothGatt?, serviceId: UUID, characteristicId: UUID ): BluetoothGattCharacteristic? { if (gatt == null) { return null } val service = gatt.getService(serviceId) ?: // DebugLog.p(\"service is nullllll\"); return null return service.getCharacteristic(characteristicId) } } } //3. Receive data: Bluetooth device ->Protocol library After Bluetooth receives the data, it passes it to SDK, which will parse and return the corresponding request callback result sdk.bridge.receiveDataFromBle(data,bleDevice?.mac,false) demo:// Received Bluetooth response data func receiveData(data: ByteArray) { sdk.bridge.receiveDataFromBle(data,bleDevice?.mac,false) } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/IDOAlexa.html":{"url":"doc/IDOAlexa.html","title":"IDO Alexa","keywords":"","body":"Alexa Functional Overview It can only be used by devices that support Alexa. Before use, make sure that the corresponding ClientID and ProductID are configured in the Alexa official backend. Attributes isLogin Are you logged in? method onLoginStateChanged(handle:) Monitor login status changes setupAlexa(delegate:clientId:) configure alexa Parameters: delegate : proxy clientId: ID generated by Alexa background authorizeRequest(productId:handle:completion:) Alexa CBL Authorization Parameters: productId: product ID registered in Alexa backend handle: callback verificationUri and pairCode that need to be opened for Alexa authentication completion: authorization result Returns: Cancellable instance logout() sign out Example Configure Alexa module Swift: // Configure Alexa sdk.alexa.setupAlexa(delegate: , clientId: clientId) // implement proxy extension SomeClass: IDOAlexaDelegate { /// Get health data func getHealthValue(valueType: IDOGetValueType) -> Int { return 0 } /// Get heart rate func getHrValue(dataType: Int, timeType: Int) -> Int { return 0 } /// Function control /// /// funType 0 turns off the phone search function func functionControl(funType: Int) {} } Kotlin: // Configure Alexa alexa.setupAlexa(this, \"clientId from alexa developer account\"/*only for test*/) // implement proxy private val delegate = object:IDOAlexaDelegate{ /// Get health data override fun getHealthValue(valueType: IDOGetValueType): Int { return 0 } /// Get heart rate override fun getHrValue(dataType: Int, timeType: Int): Int { return 0 } // Function control // // funType 0 turns off the phone search function override fun functionControl(funType: Int) { TODO(\"Not yet implemented\") } } Monitor login status Swift: // Listen for login sdk.alexa.onLoginStateChanged { [weak self] state in switch state { case .logging: // logging in... case .logined: // Has logged case .logout: // Not logged in } } Kotlin: // Listen for login alexa.onLoginStateChanged { when(it){ IDOAlexaLoginState.LOGGING -> {// logging in...} IDOAlexaLoginState.LOGINED -> {// Has logged} IDOAlexaLoginState.LOGOUT -> {// Not logged in} } } Login (based on CBL) Swift: // Log in let canceler = sdk.alexa.authorizeRequest(productId: \"ProductId\") { [weak self] verificationUri, pairCode in // pairCode Your verification code, which needs to be displayed to the user during the user login process and used for verification // verificationUri needs to jump to the login page (html) } completion: { [weak self] rs in if case .successful = rs { // login successful } else { // Login failed } } //Cancel login midway canceler.cancel() Kotlin: // Log in val canceler = alexa.authorizeRequest(\"ProductId\", { verificationUri, pairCode -> // pairCode Your verification code, which needs to be displayed to the user during the user login process and used for verification // verificationUri needs to jump to the login page (html) //for example val dialog = AlertDialog.Builder(this@AlexaActivity).setTitle(getString(R.string.alexa_dialog_title)) .setMessage(getString(R.string.alexa_dialog_msg).format(pairCode)) .setPositiveButton(R.string.alexa_dialog_copy) { dialog, which -> val cm = getSystemService(Context.CLIPBOARD_SERVICE) as ClipboardManager val mClipData = ClipData.newPlainText(\"Label\", pairCode) cm.setPrimaryClip(mClipData) val intent = Intent(Intent.ACTION_VIEW) intent.data = Uri.parse(verificationUri) startActivity(intent) dialog.dismiss() }.setNegativeButton(R.string.alexa_dialog_cancel, { dialog, which -> dialog.dismiss() }).show() }, { rs -> //login result }) if (rs == IDOAlexaAuthorizeResult.SUCCESSFUL) { // login successful } else { // Login failed } }) //Cancel login midway canceler.cancel() quit Swift: // sign out sdk.alexa.logout() Kotlin: // sign out sdk.alexa.logout() Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:05:39 "},"doc/IDOSDK.html":{"url":"doc/IDOSDK.html","title":"IDOSDK Interface","keywords":"","body":"IDO smart bracelet SDK Functional Overview Suitable for iOS/Android devices and supports IDO bracelets to implement Bluetooth connection control framework library Quick integration Integrate using Cocoapods Add the following content to the Podfile: source 'https://github.com/idoosmart/IDOSmartSpec.git' platform:ios, '9.0' target 'your_target_name1' do pod 'IDOSDK-full', '~> 4.0.15' end target 'your_target_name2' do pod 'IDOSDK-lite', '~> 4.0.15' end Then execute the pod install command in the project root directory to integrate. To use CocoaPods, please refer to: CocoaPods Guides Initialize SDK Initialize Flutter import Flutter import FlutterPluginRegistrant class AppDelegate: UIResponder, UIApplicationDelegate { private var flutterEngine: FlutterEngine? func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool { self.initFlutterEngine() ... return true } } extension AppDelegate { private func initFlutterEngine() { self.flutterEngine = FlutterEngine(name: \"io.flutter\", project: nil) self.flutterEngine?.run(withEntrypoint: nil) if let engine = flutterEngine { GeneratedPluginRegistrant.register(with: engine) print(\"flutterEngine finished\") } else { print(\"engine is null\") assert(false, \"engine is null\") } } } Register SDK The SDK is divided into three modules: Protocol library, Bluetooth library and Alexa library. Registration is required before use. import protocol_channel // Register sdk func registerSDK() { //ble sdk.ble.addBleDelegate(api: self) sdk.ble.bluetoothRegister(heartPingSecond: 5, outputToConsole: false) sdk.ble.getBluetoothState { [weak self] stateModel in self?.bleState = stateModel self?.funcPage?.bleState = stateModel } // protocol library sdk.bridge.setupBridge(delegate: self, logType: .release) // alexa sdk.alexa.setupAlexa(delegate: self, clientId: clientId) } Using SDK The API of the SDK can be called by the globally defined constant sdk import protocol_channel func someMethod() { /// Device Information sdk.device.xx /// Menu sdk.funcTable.xx /// Command sdk.cmd.xx /// Bridge sdk.bridge.xx /// Bluetooth (Only when using the built-in Bluetooth library) sdk.ble.xx /// Alexa sdk.alexa.xx /// file transfer sdk.transfer.xx /// Message icon sdk.messageIcon.xx /// data synchronization sdk.syncData.xx /// Data exchange sdk.dataExchange.xx /// Device log sdk.deviceLog.xx /// Common tools, cache sdk.tool.xx } android sdk 接入 注册SDK The SDK is divided into three modules: Protocol library, Bluetooth library, and Alexa library. Registration is required before use , please refer to the demo for details import protocol_channel // Register sdk func registerSDK() { // ble（Only limited to using built-in Bluetooth） sdk.ble.addBleDelegate(bleDelegate: IDOBleDelegate) sdk.ble.getBluetoothState { } // protocol library sdk.bridge.setupBridge( idoBrigeDelegate : IDOBridgeDelegate, type:logType) // alexa (Without the Alexa feature, there is no need to connect) sdk.alexa.setupAlexa(delegate: IDOAlexaDelegate, clientId: clientId) } 使用SDK The SDK API can be called by the globally defined constant 'sdk' import protocol_channel fun someMethod() { /// Device Information sdk.device.xx /// Menu sdk.funcTable.xx /// Command sdk.cmd.xx /// Bridge sdk.bridge.xx /// Bluetooth (Only when using the built-in Bluetooth library) sdk.ble.xx /// Alexa sdk.alexa.xx /// file transfer sdk.transfer.xx /// Message icon sdk.messageIcon.xx /// data synchronization sdk.syncData.xx /// Data exchange sdk.dataExchange.xx /// Device log sdk.deviceLog.xx /// Common tools, cache sdk.tool.xx } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-01 17:50:20 "},"doc/logicDescription/syncSettings.html":{"url":"doc/logicDescription/syncSettings.html","title":"Synchronization configuration after device binding","keywords":"","body":"Synchronization configuration instructions after iDO device binding Judge according to the menu and send it after opening it. Automatic blood oxygen detection setSpo2Switch body energy switch setBodyPowerTurn Initialize body temperature switch setTemperatureSwitch breathing switch setRRespiRateTurn Drink water reminder setDrinkWaterRemind fitness setFitnessGuidance There are 3 types of heart rate. Determine which one to send based on the function table (mutually exclusive). setHeartRateModeSmart, setHeartMode, setHeartRateMode Set default heart rate zones setHeartRateInterval Motion type synchronization configuration (mutually exclusive) setSportSortV3, setSportModeSort Synchronize menstrual cycles setMenstruation, setMenstruationRemind ambient volume setV3Noise Pressure sync configuration setStressSwitch Scientific sleep setScientificSleepSwitch voice assistant setVoiceAssistantOnOff Initialize walking reminder setWalkRemind Hand washing reminder setHandWashingReminder music switch setMusicOnOff do not disturb mode setNotDisturb Find mobile phone setFindPhone Send Inquiry Intelligent Motion Recognition getActivitySwitch Quick application setMenuList Quick reply to incoming calls setCallQuickReplyOnOff SendSet screen brightness setScreenBrightness Raise your wrist to light up the screen setUpHandGesture weather switch setWeatherSwitch Not according to the menu Set default units setUnit Set default settings units setUserInfo Bind & Unbind Example Swift: // Binding sdk.cmd.bind(osVersion: 15) { devInfo in print(\"1 Obtained device information - battLevel: \\(devInfo.battLevel)\") } onFuncTable: { ft in print(\"1Get the menu - alexaSetEasyOperateV3: \\(ft.alexaSetEasyOperateV3)\") } completion: { status in switch status { case .failed: print(\"\\(status)\") // Binding failed case .successful: // Binding successful print(\"\\(status)\") print(\"2 Obtained device information - battLevel: \\(sdk.device.battLevel)\") print(\"2 Get the function table - alexaSetEasyOperateV3: \\(sdk.funcTable.alexaSetEasyOperateV3)\") case .binded: print(\"\\(status)\") case .needAuth: print(\"\\(status)\") case .refusedBind: print(\"\\(status)\") case .wrongDevice: print(\"\\(status)\") case .authCodeCheckFailed: print(\"\\(status)\") case .canceled: print(\"\\(status)\") case .failedOnGetFunctionTable: print(\"\\(status)\") case .failedOnGetDeviceInfo: print(\"\\(status)\") } } // Unbind sdk.cmd.unbind(macAddress: macAddress, isForceRemove: true, completion: { rs in ifrs{ // Unbinding successful } else { // Unbinding failed } }) Kotlin: //Bind sdk.cmd.bind(15, { println(\"Get device information state$it\"); }, { println(\"Get the function table functableinterface state$it\"); }, { closeProgressDialog() when (it) { IDOBindStatus.SUCCESSFUL -> { toast(\"bind ok\") //save bind info SPUtil.putAValue(bind_key + device?.macAddress, true) } IDOBindStatus.FAILED, IDOBindStatus.BINDED, IDOBindStatus.NEEDAUTH, IDOBindStatus.REFUSEDBIND -> { println(\"bind failed: ${it.name}\") toast(\"bind failed: ${it.name}\") } else -> { } } }) // Unbind sdk.cmd.unbind(macAddress = macAddress, isForceRemove = true, completion = { rs -> if (rs) { // Unbinding successful } else { // Unbinding failed } }) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 11:15:32 "},"doc/IDODeviceInfo.html":{"url":"doc/IDODeviceInfo.html","title":"Device Info","keywords":"","body":"Device Information Methods refreshDeviceInfo(forced:completion:) Refresh device information Parameters: forced: Force refresh refreshFirmwareVersion(forced:completion:) Refresh device level 3 version Parameters: forced: Force refresh Device information model description IDODeviceInterface Properties Type Description deviceMode Int Device mode 0: sports mode, 1: sleep mode battStatus Int Battery status 0: normal, 1: charging, 2: full, 3: low battery battLevel Int Battery level 0～100 rebootFlag Int Whether to reboot 0: No reboot 1: Reboot bindState Int Binding state 0: Unbound 1: Bound bindType Int Binding type 0: Default 1: Single click 2: Long press 3: Click the screen horizontally to confirm and cancel, confirm on the left 4: Click the screen horizontally to confirm and cancel, confirm on the right5: Screen Click vertically to confirm and cancel, Confirm is at the top 6: Click vertically on the screen to confirm and cancel, Confirm is at the bottom 7: Click (a button on the right) bindTimeout Int Binding timeout is up to 15 seconds, 0 means no timeout platform Int Device platform 0:nordic, 10:realtek 8762x, 20:cypress psoc6, 30:Apollo3, 40:Goodix, 50:nordic+Telink Micro,60:Telink Micro+5340+no nand flash, 70:Goodix+Furuikun, 80:5340 deviceShapeType Int Device shape type 0: invalid; 1: circular; 2: square; 3: ellipse deviceType Int Device type 0: invalid; 1: bracelet; 2: watch dialMainVersion Int Custom dial main version starts from 1 0: The corresponding custom dial function is not supported showBindChoiceUi Int Display hook ui interface when firmware is bound 0: Not required 1: Required deviceId Int device id firmwareVersion Int Device firmware major version number macAddress String Current device mac address - no colon macAddressFull String Current device mac address - with colon deviceName String Note: The name is passed in by calling markConnectedDevice(...), the sdk will not refresh the valueTo get the latest value, you can use Cmds.getDeviceName().send(..) Method otaMode Bool OTA mode uuid String UUID ios-specific macAddressBt String BT macAddress - with colon fwVersion1 Int Firmware version version1 fwVersion2 Int Firmware version version2 fwVersion3 Int Firmware version version3 fwBtFlag Int BT version effective flag 0: Invalid 1: Indicates that the firmware has corresponding BT firmware fwBtVersion1 Int BT version version1 fwBtVersion2 Int BT version version2 fwBtVersion3 Int BT version version3 fwBtMatchVersion1 Int The version of BT that needs to be matched version1 fwBtMatchVersion2 Int The version of BT that needs to be matched version2 fwBtMatchVersion3 Int The version of BT that needs to be matched version3 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 11:42:47 "},"doc/IDOFunctionTable.html":{"url":"doc/IDOFunctionTable.html","title":"Function Table","keywords":"","body":"Function Table Information Menu field description IDOFuncTableInterface Properties Type Description reminderAncs Bool Smart notification reminderSnapchat Bool Snapchat reminderLine Bool Line reminderOutlook Bool Outlook reminderTelegram Bool Telegram reminderViber Bool Viber reminderVkontakte Bool Vkontakte reminderChatwork Bool Chatwork; reminderSlack Bool Slack reminderTumblr Bool Tumblr reminderYahooMail Bool YahooMail reminderYahooPinterest Bool YahooPinterest reminderYoutube Bool Youtube reminderGmail Bool Gmail reminderKakaoTalk Bool KakaoTalk reminderOnlyGoogleGmail Bool Google gmail reminderOnlyOutlookEmail Bool Outlook email reminderOnlyYahooEmail Bool Yahoo email reminderTiktok Bool Tiktok reminderRedbus Bool Redbus reminderDailyhunt Bool Dailyhunt reminderHotstar Bool Hotstar reminderInshorts Bool Inshorts reminderPaytm Bool Paytm reminderAmazon Bool Amazon reminderFlipkart Bool Flipkart reminderNhnEmail Bool Nhn email reminderInstantEmail Bool Instant email reminderZohoEmail Bool Zoho email reminderExchangeEmail Bool Exchange email reminder189Email Bool 189 email reminderVeryFit Bool Very fit reminderGeneral Bool General reminderMattersRemind Bool Matters reminderMicrosoft Bool Microsoft reminderMissedCall Bool MissedCalls reminderGetAllContact Bool Support synchronization of all address books reminderWhatsappBusiness Bool WhatsappBusiness reminderEmail Bool Email Facebook reminder Bool Facebook reminderMessage Bool Message reminderQq Bool QQ reminderTwitter Bool Twitter reminderWeixin Bool Weixin reminderCalendarGoogle Bool Calendar (Google Calendar) reminderinstagram Bool Instagram reminderLinkedIn Bool linkedIn reminderMessengre Bool Messengre reminderSkype Bool Skype reminderCalendar Bool Calendar reminderWhatsapp Bool Whatsapp reminderAlarmClock Bool Alarm clock reminderSinaWeibo Bool Sina Weibo reminderCalling Bool Call reminder reminderCallContact Bool Caller Contact reminderCallNum Bool Caller number reminderPrime Bool Prime reminderNetflix Bool Netflix reminderGpay Bool Gpay reminderPhonpe Bool Phonpe reminderSwiggy Bool Swiggy reminderZomato Bool Zomato reminderMakemytrip Bool Makemytrip reminderJioTv Bool JioTv reminderNiosefit Bool Niosefit reminderYtmusic Bool YT music reminderUber Bool Uber reminderOla Bool Ola reminderGoogleMeet Bool Google meet reminderMormaiiSmartwatch Bool Mormaii Smartwatch reminderTechnosConnect Bool Technos connect reminderEnjoei Bool Enjoei reminderAliexpress Bool Aliexpress reminderShopee Bool Shopee reminderTeams Bool Teams reminder99Taxi Bool 99 taxi reminderUberEats Bool Uber eats reminderLfood Bool Lfood reminderRappi Bool Rappi reminderMercadoLivre Bool Mercado livre reminderMagalu Bool Magalu reminderAmericanas Bool Americanas reminderYahoo Bool Yahoo reminderMessageIcon Bool Message icon and name update sportWalk Bool v2 walk sportRun Bool v2 running sportByBike Bool v2 Cycling sportOnFoot Bool v2 Hiking sportSwim Bool v2 swimming sportMountainClimbing Bool v2 mountain climbing sportBadminton Bool v2 badminton sportOther Bool v2 Other sportFitness Bool v2 fitness sportSpinning Bool v2 spinning bike sportEllipsoid Bool v2 Ellipsoid sportTreadmill Bool v2 treadmill sportSitUp Bool v2 sit-ups sportPushUp Bool v2 push-ups sportDumbbell Bool v2 dumbbell sportWeightlifting Bool v2 weightlifting sportYoga Bool v2 Yoga sportRopeSkipping Bool v2 skipping sportTableTennis Bool v2 table tennis sportBasketball Bool v2 Basketball sportFootballll Bool v2 football sportVolleyball Bool v2 volleyball sportTennis Bool v2 tennis sportGolf Bool v2 golf sportBaseball Bool v2 baseball sportSkiing Bool v2 Skiing sportRollerSkating Bool v2 Roller Skating sportDance Bool v2 dance sportStrengthTraining Bool v2 functional training sportCoreTraining Bool v2 core training sportTidyUpRelax Bool v2 Overall Relaxation sportTraditionalStrengthTraining Bool v2 traditional strength training sportOutdoorRun Bool v3 outdoor running sportIndoorRun Bool v3 indoor running sportOutdoorCycle Bool v3 Outdoor Cycling sportIndoorCycle Bool v3 indoor cycling sportOutdoorWalk Bool v3 outdoor walking sportIndoorWalk Bool v3 indoor walking sportPoolSwim Bool v3 Pool Swimming sportOpenWaterSwim Bool v3 Open Water Swimming sportElliptical Bool v3 elliptical trainer sportRower Bool v3 rowing machine sportHiit Bool v3 high-intensity interval training method sportCricket Bool v3 cricket sportPilates Bool v3 Pilates sportOutdoorFun Bool v3 outdoor play (customized kr01) sportOtherActivity Bool v3 other sports (customized kr01) sportZumba Bool v3 Zumba sportSurfing Bool v3 Surfing sportFootvolley Bool v3 football volleyball sportStandWaterSkiing Bool v3 Stand Water Skiing sportBattlingRope Bool v3 standing rope sportSkateboard Bool v3 skateboard sportNoticeStepper Bool v3 stepper sportShowNum Int Sports display number sportAerobicsBodybuildingExercise Bool Aerobics sportPullUp Bool Pull-ups sportHighBar Bool Horizontal Bar sportParallelBars Bool Parallel Bars sportTrailRunning Bool Trail running sportPickleBall Bool Pickleball getRealtimeData Bool Get real-time data getLangLibraryV3 Bool Get v3 language library getFindPhone Bool Find phone getFindDevice Bool Find device getUpHandGestureEx Bool Get the data when raising your wrist to brighten the screen getUpHandGesture Bool Raise your wrist to light up the screen getWeather Bool Weather forecast getDownloadLanguage Bool Downloadable language getFactoryReset Bool Restore factory settings getFlashLog Bool Flash log getMultiActivityNoUseApp Bool Multi-sport cannot use app getMultiDial Bool MultiDial getMenuList Bool Get menu list getDoNotDisturbMain3 Bool Do Not Disturb getVoiceTransmission Bool Voice function setDrinkWaterAddNotifyFlag Bool Set drinking water switch notification type getDeviceLogState Bool Get restart log error code and flag bit getNewWatchList Bool Supports the interface for getting the watch face list getNotifyIconAdaptive Bool Message reminder icon adaptive getPressureNotifyFlagMode Bool Pressure switch adds notification type and all-day pressure mode settings getScientificSleep Bool Scientific sleep getSpo2NotifyFlag Bool Blood oxygen switch adds notification type getV3Log Bool v3 collection log getWatchID Bool Get watch face ID getDeviceName Bool Get device name getBatteryLog Bool Get battery log getBatteryInfo Bool Get battery information getHeatLog Bool Get overheat log getWalkReminderV3 Bool Get walk reminder v3 getSupportV3BleMusic Bool Get support for Bluetooth music v3 getSupportGetBleBeepV3 Bool Supports obtaining firmware local beep file information getVeryFitNotSupportPhotoWallpaperV3 Bool The BIT1 k6 project does not require a corresponding wallpaper dial. VeryFit supports them by default. Add a new unsupported menu. If you do not need to configure this getSupportUpdateGps Bool Support upgrading gps firmware getUbloxModel Bool Support ublox module getSupportGetBleMusicInfoVerV3 Bool Supports obtaining firmware song name and folder command issuance and firmware reply using protocol version number 0x10 getBtVersion Bool Get the third-level version of firmware and the third-level version of BT getSportsTypeV3 Bool V3 sports type setting and acquisition getActivitySwitch Bool Supports motion mode recognition switch acquisition getNoticeIconInformation Bool Support dynamic message icon update getSetMaxItemsNum Bool Supports obtaining the maximum number of details that the firmware supports app distribution getNotifyMsgV3 Bool v3 message reminder getScreenBrightnessMain9 Bool Get screen brightness getNotice128byte Bool 128 byte notification getNotice250byte Bool 250 byte notification getDeletableMenuListV2 Bool Supports obtaining non-deletable shortcut application list getSupportPairEachConnect Bool Set support system pairing getSupportGetMainSportGoalV3 Bool Support getting sports goals getBtAddrV2 Bool Get bt Bluetooth MAC address getSupportBpSetOrMeasurementV2 Bool Blood pressure calibration and measurement getMenstrualAddNotifyFlagV3 Bool Menstrual cycle switch add notification type getSupportSetGetTimeGoalTypeV2 Bool Set to get the sports three-cycle target getOxygenDataSupportGradeV3 Bool Multi-sport synchronized data supports oxygen uptake grade data getSupportSyncActivityDataAltitudeInfo Bool Multi-sport data synchronization supports altitude data getBindCodeAuth Bool Bind authorization code getSpo2OffChangeV3 Bool V3 blood oxygen data offset offset by minutes getLevel5HrInterval Bool Level 5 heart rate zone getFiveHRInterval Bool 5 heart rate zones getBleAndBtVersion Bool Get the firmware level 3 version and BT level 3 version getSupportSetGetEmergencyContactV3 Bool Emergency Contact getSupportSetRepeatWeekTypeOnScheduleReminderV3 Bool Repeat reminder type set week repeat getSupportSetRepeatTypeOnScheduleReminderV3 Bool Repeat reminder type setting getSupportSetMenstrualReminderOnOff Bool Menstrual switch getVersionInfo Bool Version information getMtu Bool Get MTU getDeviceUpdateState Bool Get the upgrade status of the bracelet getHeartRateModeV2 Bool v2 gets heart rate monitoring mode getStepDataTypeV2 Bool The target step type is weekly target getFastMsgDataV3 Bool Fast message getSupportCallingQuickReply Bool Support quick reply getSupportDataTranGetNewErrorCodeV3 Bool New error code v3 getAutoActivityEndSwitchNotDisplay Bool The motion self-recognition end switch is not displayed, set the switch state getAutoActivityPauseSwitchNotDisplay Bool The motion self-recognition pause switch is not displayed, and the switch state is set getAutoActivitySwitchAddBicycle Bool Get the sports mode automatic recognition switch setting and add a new type of cycling getAutoActivitySwitchAddSmartRope Bool Get the sports mode automatic recognition switch setting and add a new type of smart skipping rope getAutoActivitySetGetUseNewStructExchange Bool Motion self-recognition get and set instructions use new version to interact with firmware getSupportSetGetNoReminderOnWalkReminderV2 Bool Supports walking reminder setting/getting reminder-free time period getSupportGetSnInfo Bool Supports obtaining sn information getScheduleReminderNotDisplayTitle Bool Schedule reminder does not display title getSupportV3LongCityName Bool City name getSupportAddNightLevelV2 Bool Brightness setting supports night brightness level setting getSupportDialFrameEncodeFormatArgb6666 Bool The firmware supports using the dial frame to use the argb6666 encoding format getSupportAppSendPhoneSystemInfo Bool The firmware supports the app to send mobile phone operating system information getDeviceControlFastModeAlone Bool Firmware management switches fast/slow mode, APP does not deliver the setting link parameters (fast and slow) getSupportOnekeyDoubleContact Bool The device supports one-click dual connection, which distinguishes whether the APP displays the guide page or directly issues the pairing instructions during pairing getSupportSetVoiceAssistantStatus Bool Voice assistant status getSupportFlashLogSize Bool Supports getting flash log size getSupportGetUnit Bool Support getting unit getSupportRyzeConnect Bool Notify support for Ryze Connect getSupportLoopsFit Bool Notify support for LOOPS FIT getSupportTasSmart Bool Notify support for TAS Smart getNotSupportSetOvulation Bool Women’s menstrual period does not support setting ovulation day reminders getSupportWalkGoalSteps Bool The firmware supports setting and obtaining the hourly goal steps getNotSupportDeleteAddSportSort Bool GTX03/05 customization, hamaAPP, after the menu is opened, the sports list does not support additions and deletions, but supports sorting getSupportSedentaryTensileHabitInfo Bool Supports sedentary reminder features in obtaining user habit information (management information) getSupportSendGpsLongitudeAndLatitude Bool Supports fast positioning of firmware, APP issues GPS permissions and latitude and longitude to firmware getSupportGetV3DeviceBtConnectPhoneModel Bool Phone model that supports device bt connection getSupportBloodPressureModelFileUpdate Bool Support blood pressure model file update setNoticeMessageStateUseVersion0x20 Bool Set the message application status to be delivered using version0x20 setScientificSleepSwitch Bool Scientific sleep switch setTemperatureSwitchHealth Bool Set night temperature switch setHeartRateMonitor Bool Heart rate monitoring setNoReminderOnDrinkReminder Bool Support drinking water reminder to set reminder-free time period setAgpsOffLine Bool The default is to support agps off upgrade setAgpsOnLine Bool The default is to support agps online upgrade setSetV3HeartInterval Bool Set the v3 heart rate interval setWeatherCity Bool Weather City setDoNotDisturb Bool Anti-disturb setCalorieGoal Bool Calorie goal setMenstruation Bool Female menstrual cycle setPressureData Bool Pressure data setSpo2Data Bool Blood oxygen data setSportModeSort Bool Sports mode sorting setActivitySwitch Bool Sports mode switch setNightAutoBrightness Bool Automatic brightness at night setScreenBrightness5Level Bool 5-level brightness adjustment setWalkReminder Bool Walk Reminder setScreenBrightness3Level Bool 3-level brightness adjustment. The default is level 5. The watch app displays it but the watch does not display it setHandWashReminder Bool Hand washing reminder setLocalDial Bool The app supports local dial changes and cloud dial image downloads setNotSupportHrHighAlarm Bool The firmware corresponding setting of high heart rate alarm does not work setNotSupportPhotoWallpaper Bool Add a new unsupported menu, configure this if not necessary setPressureHighReminder Bool High pressure reminder setWallpaperOnlyTimeColor Bool Wallpaper dial color setting setWallpaperDial Bool Wallpaper dial settings setSupportBreathRate Bool Breathing training setSupportCalorieUnit Bool Set the unit's added calorie setting setSupportSportPlan Bool Sports Plan setSupportSwimPoolUnit Bool Set the unit to increase the unit setting of the pool setSupportV3Bp Bool v3 bp setV3GetSportSortField Bool Add menu compatibility setWatchDialSort Bool Dial sorting setGetCalorieDistanceGoal Bool Motion three-ring target acquisition setMidHighTimeGoal Bool Set the goal to increase the duration of mid-to-high exercise setNewRetainData Bool The firmware supports unbinding without clearing the data on the device setScheduleReminder Bool Schedule Reminder setSet100SportSort Bool 100 kinds of sports data sorting setSet20SportParamSort Bool 20 basic sports data sub-parameter sorting setSetMainUiSort Bool Main interface ui control arrangement setSetStressCalibration Bool Pressure calibration setSmartHeartRate Bool Support app to set smart heart rate setSpo2AllDayOnOff Bool Support app to set blood oxygen switch data throughout the day setSupportAppSendVoiceToBle Bool Support app to send compressed sbc language files to ble setSupportCyclingUnit Bool Set the unit setting for increasing the cycling unit setSupportWalkRunUnit Bool Set the unit to increase the unit setting for walking and running setWalkReminderTimeGoal Bool Set the target time in the walk reminder setWatchCapacitySizeDisplay Bool Support display of watch face capacity setWatchPhotoPositionMove Bool Supports wallpaper dial time position movement, control icon color modification, and control function selection setMenuListMain7 Bool Menu settings setHistoryMenstrual Bool v3 menstrual period historical data distribution setMenstrualAddPregnancy Bool v2 menstrual reminder setting to add fertile period and end time setNotSurportCalling3SDelay Bool realme wear customization requirements does not support the \"three-second delay\" switch for displaying incoming calls setSetFitnessGuidance Bool Supports issuing fitness guidance switch setSetNotificationStatus Bool Notification settings setSetUnreadAppReminder Bool Unread Reminder setSetV3Weather Bool Support V3 weather setSetV3WeatherSunrise Bool Support weather push to increase sunset and sunrise time setSetV3WorldTime Bool Support world time setting setSyncContact Bool Support contact synchronization setSyncV3ActivityAddParam Bool Synchronize V3 multi-sport to add new parameters setTransferMusicFile Bool Music name setting setWalkReminderAddNotify Bool Add notification type for walking reminder setSupportFahrenheit Bool Set the unit to support Fahrenheit setGetAlarmSpecify Bool Support v3 alarm clock setting to get the specified name alarm clock (KR01 customization) setAirohaGpsChip Bool Support airoha chip to collect GPS data function table setSupportSecondSportIcon Bool Support the second set of sports icon menu. Currently only supported by idw05 setSportMediumIcon Bool 100 medium-sized menus required for sports setWeatherSunTime Bool Support weather push to increase sunset and sunrise time setWeatherAirGrade Bool Support V3 weather and issue air quality grade setDrinkWaterReminder Bool Support setting drinking water reminder setRespirationRate Bool Respiration rate switch setting setMaxBloodOxygen Bool Maximum oxygen uptake setBleControlMusic Bool ble controls music setMainPressure Bool v3 pressure menu setNoDisturbAllDayOnOff Bool Do not disturb mode setting to obtain the new all-day do not disturb switch and smart switch setOnlyNoDisturbAllDayOnOff Bool Support setting the all-day do not disturb switch setOnlyNoDisturbSmartOnOff Bool Support setting smart do not disturb switch setTimeZoneFloat Bool The time zone setting value is 100 times the actual time zone value setTemperatureSwitchSupport Bool Set temperature switch setMsgAllSwitch Bool Supports setting the main switch field of the message acquisition application setNotSupperCall3Delay Bool The display of the \"delay three seconds\" switch setting item on the incoming call reminder page is not supported setNoticeMissedCallV2 Bool Support rejected calls setOverFindPhone Bool End finding phone getHealthSwitchStateSupportV3 Bool Get all health monitoring switches setSedentariness Bool Sedentary reminder setScreenBrightness Bool Set screen brightness setSetPhoneVoice Bool Set the device music volume setSupportSetCallQuickReplyOnOff Bool Set the quick call reply switch setSupportExchangeSetGpsCoordinates Bool Supports sending GPS coordinates during multi-sport interaction setSupportV3WeatherAddAtmosphericPressure Bool Support v3 weather protocol to release atmospheric pressure setSupportSetV3WeatcherAddSnowDepth Bool Support v3 weather protocol to issue snow thickness setSupportSetV3WeatcherAddSnowfall Bool Support v3 weather protocol to send snowfall amount setSupportSetV3WeatcherSendStructVersion04 Bool Support v3 weather protocol to issue protocol version 0x4 setSendCalibrationThreshold Bool Support setting pressure calibration threshold languageCh Bool Chinese languageCzech Bool Czech languageEnglish Bool English languageFrench Bool French languageGerman Bool German languageItalian Bool Italian languageJapanese Bool Japanese languageSpanish Bool Spanish languageArabic Bool Arabic languageBurmese Bool Burmese languageFilipino Bool Filipino languageGreek Bool Greek languageThai Bool Thai languageTraditionalChinese Bool Traditional Chinese languageVietnamese Bool Vietnamese languageDutch Bool Dutch languageHungarian Bool Hungarian languageLithuanian Bool Lithuanian languagePolish Bool Polish languageRomanian Bool Romanian languageRussian Bool Russian languageSlovenian Bool Slovenian languageUkrainian Bool Ukrainian languageCroatian Bool Croatian languageDanish Bool Danish languageHindi Bool Hindi languageIndonesian Bool Indonesian languageKorean Bool Korean languagePortuguese Bool Portuguese languageSlovak Bool Slovak languageTurkish Bool Turkish languagePersia Bool Persian languageSweden Bool Swedish languageNorwegian Bool Norwegian languageFinland Bool Finnish languageBengali Bool Bengali languageKhmer Bool Khmer languageMalay Bool Malay languageBrazilianPortuguese Bool Brazilian Portuguese syncV3Hr Bool v3 heart rate syncV3Swim Bool v3 swimming syncV3Spo2 Bool v3 blood oxygen syncV3Pressure Bool v3 pressure syncV3Activity Bool v3 multi-sport syncV3Sleep Bool v3 sleep syncV3Sports Bool v3 steps syncV3Gps Bool v3 gps syncV3SyncAlarm Bool v3 alarm clock syncV3BodyPower Bool v3 body power getSupportHrvV3 Bool Synchronize hrv getSupportPerBpV3 Bool Synchronized blood pressure syncV3Noise Bool Synchronization noise syncV3Temperature Bool Synchronization temperature syncGps Bool gps syncV3ActivityExchangeData Bool v3 multi-sport synchronization data exchange syncHeartRate Bool Heart rate function syncHeartRateMonitor Bool Heart rate monitoring syncSleepMonitor Bool Sleep detection syncFastSync Bool Fast sync syncActivityTimeSync Bool Get time synchronization syncTimeLine Bool v2 sync timeline syncNeedV2 Bool Need V2 synchronization syncRealTimeV3 Bool v3 multi-sport synchronization supports real-time speed display syncExchangeDataReplyAddRealTimeSpeedPaceV3 Bool Data exchange adds real-time pace field syncHealthSyncV3ActivityEndTimeUseUtcMode Bool Multiple run end times use UTC mode syncSupportSetFastModeWhenSyncConfig Bool Turn on fast mode when supporting data synchronization alarmCount Int Number of alarm clocks alarmBrushTeeth Bool Brush Teeth alarmDating Bool Dating alarmDinner Bool Eat alarmMedicine Bool Take medicine alarmMeeting Bool Meeting alarmParty Bool Party alarmRest Bool Rest alarmSleep Bool sleep alarmSport Bool Exercise alarmWakeUp Bool Get up supportSetAntilost Bool Support setting anti-lost supportSetWeatherDataV2 Bool Support setting v2 weather data supportSetOnetouchCalling Bool Support setting one-touch calling alexaReminderAddSecV3 Bool alexa voice reminder adds the corresponding clock transmission field alexaSetEasyOperateV3 Bool alexa simple control command alexaSetGetAlexaAlarmV3 Bool alexa voice alarm clock get setting command use alexaSetJumpSportUiV3 Bool alexa set jump motion interface alexaSetJumpUiV3 Bool alexa set jump ui interface alexaSetSetOnOffTypeV3 Bool alexa app setting switch command alexaSetWeatherV3 Bool alexa voice supports setting weather alexaTimeNewV3 Bool alexa supports setting multiple timers setAlexaControll100brightness Bool Alexa 100-level brightness control alexaGetSupportGetAlexaDefaultLanguage Bool alexa Get alexa's default language alexaGetUIControllSports Bool alexa jump sports interface supports 100 sports type fields Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-26 09:52:07 "},"doc/IDODeviceLog.html":{"url":"doc/IDODeviceLog.html","title":"Device Log","keywords":"","body":"Device log function Functional Overview Get device flash, battery, overheating and other logs DeviceLogInterface Attributes getLogIng Is the log being obtained? logDirPath Get all log directory addresses (return: /xx/../ido_sdk/devices/{macAddress}/device_logs) method startGet(types:timeOut:progress:completion:) Start getting logs Parameters: types: log type collection timeOut: timeout for getting logs progress: log acquisition progress (0-100) completion: log acquisition completion callback cancel(completion:) Cancel fetching logs Parameters: completion: completion callback Example Swift sdk.deviceLog.startGet(types: [.general], timeOut: 60) { progress in // Get flash log progress } completion: { success in // Get completed if (success) { //success Get logs through logDirPath }else { //fail } } Kotlin: sdk.deviceLog.startGet(mutableListOf(), 60, { progress -> // Get flash log progress }) { success -> // Get completed if (success) { //success Get logs through logDirPath } else { //fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-25 09:38:07 "},"doc/IDOTools.html":{"url":"doc/IDOTools.html","title":"Tools","keywords":"","body":"Utility methods ToolsInterface method png2Bmp(inPath:outPath:format:completion:) Image conversion format png->bmp Parameters: inPath: png path used for conversion (including file name and suffix) outPath: converted bmp path (including file name and suffix) format: Convert to bmp file format compressToPNG(inputFilePath:outputFilePath:completion:) Compressed png image quality Parameters: inputFilePath: input file path outputFilePath: output file path makeEpoFile(dirPath:epoFilePath:completion:) Create EPO.DAT file Parameters: dirPath: The directory where the epo file is to be created epoFilePath: the storage path of the created epo file gpsInitType(motionTypeIn:completion:) After gps movement, the trajectory is optimized and the speed threshold is initialized according to the movement type. If other movement types are entered, there will be no movement trajectory. Parameters: motionTypeIn: motion type Outdoor walking = 52, walking = 1, hiking = 4, exercise type set to 0 Outdoor running = 48, running = 2, sports type set to 1 Outdoor riding = 50, cycling = 3, and sportiness set to 2 completion: gpsAlgProcessRealtime(json:completion:) The real-time processing entrance of gps data needs to judge the output data. If the latitude is -180, it is an error value and should not be output. Parameters: json: { lon, longitude, data type double lat, latitude, data type double timestamp, timestamp, data type int accuracy, positioning accuracy, data type double gpsaccuracystatus, positioning level, 0 = unknown positioning, 1 = good positioning, 2 = poor positioning, data type int } completion: gpsSmoothData(json:completion:) smooth data Parameters: json: {lat, latitude array, length len, data type double lon, longitude array, length len, data type double len, data length} completion: the result is saved in the arrays lat and lon logPath(completion:) Get the log root path currentDevicePath(completion:) Get the current device cache root path exportLog(completion:) Export log Returns the absolute path of the compressed log zip file lastConnectDevice(completion:) Get the last connected device (json) loadDeviceExtListByDisk(sortDesc:completion:) Get the list of connected devices (List[json]) Example Swift: sdk.tool.compressToPNG(inputFilePath: \"i.png\", outputFilePath: \"o.png\") { rs in // Compression success or failure } Kotlin: sdk.tool.compressToPNG(\"i.png\", \"o.png\") { // Compression success or failure } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-01 09:55:18 "},"doc/dataExchange/IDODataExchange.html":{"url":"doc/dataExchange/IDODataExchange.html","title":"Data Exchange","keywords":"","body":"Data exchange function Functional Overview When you initiate exercise in the App, the bracelet will calculate the heart rate and calories from the exercise data generated by the App and return it to the App for data exchange; when the bracelet initiates exercise, the exercise data generated by the bracelet will be sent to the App regularly to display the exercise data in real time. Exchanging data uses time as the only reference. The exchange process requires judging the current activity data based on the movement start time. If the time does not correspond, the data cannot be exchanged. ExchangeDataInterface Attributes supportV3ActivityExchange Get whether v3 sports data exchange is supported status exchange data status method appExec(type:) app performs data exchange Parameters: type: app execution data exchange entity IDOAppExecType appReplyExec(type:) ble initiates a movement, ble performs data exchange, and app replies. Parameters: type: app reply data entity IDOAppReplyType getLastActivityData(completion: ) Multi-sport data last data acquisition Parameters: completion: command execution callback code: error code 0 means success, non-0 means failure model: multi-motion data entity IDOAppActivityDataV3ExchangeModel getActivityHrData(completion:) Get one minute of heart rate data during multiple exercises Parameters: completion: command execution callback code: error code 0 means success, non-0 means failure model: heart rate data entity IDOAppHrDataExchangeModel IDOExchangeDataDelegate method appListenBleExec(completion:) ble initiates movement and app monitors ble Parameters: completion: command execution callback type: monitor ble execution data entity IDOBleExecType appListenAppExec(completion:) app execution response Parameters: completion: command execution callback type: monitor app execution Ble response entity IDOBleReplyType exchangeV2Data(completion:) Exchange v2 data Parameters: completion: command execution callback type: Monitor v2 data exchange entity IDOExchangeV2Model exchangeV3Data(completion:) Exchange v3 data Parameters: completion: command execution callback type: Monitor v3 data exchange entity IDOExchangeV3Model Example Swift： //暂停运动 let model = IDOAppPauseExchangeModel(baseModel: baseModel) sdk.dataExchange.appExec(model: model) //结束运动 let model = IDOAppBleEndReplyExchangeModel(code: 0, duration: duration, calories: calories, distance: distance, baseModel: baseModel) sdk.dataExchange.appReplyExec(type: .appBleEndReply(model)) let lastData = sdk.dataExchange.getLastActivityData() if sdk.dataExchange.supportV3ActivityExchange { sdk.dataExchange.getActivityHrData() } sdk.dataExchange.addExchange(IDOExchangeDataDelegateImpl()) class IDOExchangeDataDelegateImpl: IDOExchangeDataOCDelegate { func appListenBleExec(model: NSObject) { if (model is IDOBleStartExchangeModel) { let obj = model as? IDOBleStartExchangeModel let sendModel = IDOBleStartReplyExchangeModel(baseModel: obj?.baseModel, operate: obj?.operate, retCode: 0) sdk.dataExchange.appReplyExec(model: sendModel) } else if (model is IDOBleIngExchangeModel) { let obj = model as? IDOBleIngExchangeModel let sendModel = IDOBleIngReplyExchangeModel(baseModel: obj?.baseModel, distance: obj?.distance) sdk.dataExchange.appReplyExec(model: sendModel) } else if (model is IDOBleEndExchangeModel) { let obj = model as? IDOBleEndExchangeModel let sendModel = IDOBleEndReplyExchangeModel(baseModel: obj?.baseModel, retCode: 0) sdk.dataExchange.appReplyExec(model: sendModel) } else if (model is IDOBlePauseExchangeModel) { let obj = model as? IDOBlePauseExchangeModel let sendModel = IDOBlePauseReplyExchangeModel(baseModel: obj?.baseModel, retCode: 0) sdk.dataExchange.appReplyExec(model: sendModel) } else if (model is IDOBleRestoreExchangeModel) { let obj = model as? IDOBleRestoreExchangeModel let sendModel = IDOBleRestoreReplyExchangeModel(baseModel: obj?.baseModel, retCode: 0) sdk.dataExchange.appReplyExec(model: sendModel) } else if (model is IDOAppBlePauseExchangeModel) { let obj = model as? IDOAppBlePauseExchangeModel let sendModel = IDOAppBlePauseReplyExchangeModel(baseModel: obj?.baseModel, errCode: 0) sdk.dataExchange.appReplyExec(model: sendModel) } else if (model is IDOAppBleRestoreExchangeModel) { let obj = model as? IDOAppBleRestoreExchangeModel let sendModel = IDOBleRestoreReplyExchangeModel(baseModel: obj?.baseModel, retCode: 0) sdk.dataExchange.appReplyExec(model: sendModel) } else if (model is IDOAppBleEndExchangeModel) { let obj = model as? IDOAppBleEndExchangeModel let sendModel = IDOAppBleEndReplyExchangeModel(baseModel: baseModel, errCode: 0, duration: obj?.duration, calories: obj?.calories, distance: obj?.distance) sdk.dataExchange.appReplyExec(model: sendModel) } } func appListenAppExec(model: NSObject) { if (model is IDOAppStartReplyExchangeModel) { let obj = model as? IDOAppStartReplyExchangeModel print(\"sport started now : \\(String(describing: obj))\") //* - 0: Success; 1: The device has entered sports mode and failed; //* - 2: Failed due to low device power; 3: The bracelet is charging //* - 4: Using Alexa 5: Calling guard obj?.retCode == 0 else { textConsole.text = \"sport failed to launch, because of \\(String(describing: obj?.retCode))\" return } textConsole.text = \"sport launched successfully\" disposeTimer = DisposeBag() Observable.interval(.seconds(Constant.intervalExchangeData), scheduler: MainScheduler.instance) .subscribe(onNext: { [weak self] value in self?.exchangeData() }) .disposed(by: disposeTimer) Observable.interval(.seconds(Constant.intervalExchangeCompleteData), scheduler: MainScheduler.instance) .subscribe(onNext: { [weak self] value in self?.exchangeCompleteData() }) .disposed(by: disposeTimer) Observable.interval(.seconds(Constant.intervalExchangeHrData), scheduler: MainScheduler.instance) .subscribe(onNext: { [weak self] value in self?.exchangeV3HrData() }) .disposed(by: disposeTimer) } else if (model is IDOAppEndReplyExchangeModel) { let obj = model as? IDOAppEndReplyExchangeModel print(\"reply for app's end reply: \\(String(describing: obj))\") } else if (model is IDOAppIngReplyExchangeModel) { let obj = model as? IDOAppIngReplyExchangeModel print(\"data of sport from device: \\(String(describing: obj))\") } else if (model is IDOAppPauseReplyExchangeModel) { let obj = model as? IDOAppPauseReplyExchangeModel print(\"reply for app's pause cmd: \\(String(describing: obj))\") } else if (model is IDOAppRestoreReplyExchangeModel) { let obj = model as? IDOAppRestoreReplyExchangeModel print(\"reply for app's restore cmd: \\(String(describing: obj))\") } else if (model is IDOAppIngV3ReplyExchangeModel) { let obj = model as? IDOAppIngV3ReplyExchangeModel print(\"v3 data of sport from device: \\(String(describing: obj))\") } else if (model is IDOAppOperatePlanReplyExchangeModel) { let obj = model as? IDOAppOperatePlanReplyExchangeModel print(\"reply for app's operate plan cmd: \\(String(describing: obj))\") } else if (model is IDOAppActivityDataV3ExchangeModel) { let obj = model as? IDOAppActivityDataV3ExchangeModel print(\"appActivityDataReply: ${type.model}\") duration = max(duration, obj?.durations ?? 0) calories = max(calories, obj?.calories ?? 0) distance = max(distance, obj?.distance ?? 0) } else if (model is IDOAppHrDataExchangeModel) { let obj = model as? IDOAppHrDataExchangeModel print(\"appActivityHrReply: \\(String(describing: obj))\") } else if (model is IDOAppGpsDataExchangeModel) { let obj = model as? IDOAppGpsDataExchangeModel print(\"appActivityGpsReply: \\(String(describing: obj))\") } } func exchangeV2Data(model: IDOExchangeV2Model) { } func exchangeV3Data(model: IDOExchangeV3Model) { } } kotlin: //Pause motion val model = IDOAppPauseExchangeModel(baseModel) sdk.dataExchange.appExec(IDOAppExecType.appPause(model)) //End movement val model = IDOAppBleEndReplyExchangeModel(0, duration, calories, distance, baseModel) sdk.dataExchange.appReplyExec(IDOAppReplyType.appBleEndReply(model)) sdk.dataExchange.getLastActivityData() if (sdk.dataExchange.supportV3ActivityExchange) { sdk.dataExchange.getActivityHrData() } sdk.dataExchange.addExchange(object : IDOExchangeDataDelegate { override fun appListenBleExec(type: IDOBleExecType) { when (type) { is IDOBleExecType.appBleEnd -> { //The ble campaign initiated by the app ends. Procedure log(\"appBleEnd: ${type.model}\") mHandler.removeCallbacksAndMessages(null) val model = IDOAppBleEndReplyExchangeModel(0, duration, calories, distance, baseModel) sdk.dataExchange.appReplyExec(IDOAppReplyType.appBleEndReply(model)) } is IDOBleExecType.appBlePause -> { // The ble campaign initiated by the app is suspended log(\"appBlePause: ${type.model}\") val model = IDOAppBlePauseReplyExchangeModel(0, baseModel) sdk.dataExchange.appReplyExec(IDOAppReplyType.appBlePauseReply(model)) } is IDOBleExecType.appBleRestore -> { //The app initiated the ble movement to resume log(\"appBleRestore: ${type.model}\") val model = IDOAppBleRestoreReplyExchangeModel(0, baseModel) sdk.dataExchange.appReplyExec(IDOAppReplyType.appBleRestoreReply(model)) } //The ble campaign initiated by the app ends. Procedure is IDOBleExecType.bleEnd -> { log(\"bleEnd: ${type.model}\") val model = IDOBleEndReplyExchangeModel(0, baseModel) sdk.dataExchange.appReplyExec(IDOAppReplyType.bleEndReply(model)) } is IDOBleExecType.bleIng -> { //ble initiated movements ble initiated exchanges log(\"bleIng: ${type.model}\") val model = IDOBleIngReplyExchangeModel(0, baseModel) sdk.dataExchange.appReplyExec(IDOAppReplyType.bleIngReply(model)) } is IDOBleExecType.bleOperatePlan -> { //BLE switch action log(\"bleOperatePlan: ${type.model}\") } is IDOBleExecType.blePause -> { //ble campaign The ble campaign is suspended log(\"blePause: ${type.model}\") val model = IDOBlePauseReplyExchangeModel(0, baseModel) sdk.dataExchange.appReplyExec(IDOAppReplyType.blePauseReply(model)) } is IDOBleExecType.bleRestore -> { //ble Initiated a ble initiated recovery log(\"bleRestore: ${type.model}\") val model = IDOBleRestoreReplyExchangeModel(0, baseModel) sdk.dataExchange.appReplyExec(IDOAppReplyType.bleRestoreReply(model)) } is IDOBleExecType.bleStart -> { //The ble campaign begins log(\"bleStart: ${type.model}\") val model = IDOBleStartReplyExchangeModel(type.model.operate, 0, baseModel) sdk.dataExchange.appReplyExec(IDOAppReplyType.bleStartReply(model)) } } } override fun appListenAppExec(type: IDOBleReplyType) { when (type) { is IDOBleReplyType.appEndReply -> { //The app initiates an end ble reply log(\"reply for app's end reply: ${type.model}\") mHandler.removeCallbacksAndMessages(null) } is IDOBleReplyType.appIngReply -> { //The app initiates an exchange ble reply log(\"data of sport from device: ${type.model}\") } is IDOBleReplyType.appIngV3Reply -> { //The app sends an exchange v3 reply log(\"v3 data of sport from device: ${type.model}\") } is IDOBleReplyType.appOperatePlanReply -> { log(\"reply for app's operate plan cmd: ${type.model}\") } is IDOBleReplyType.appPauseReply -> { // The app initiates a pause ble reply log(\"reply for app's pause cmd: ${type.model}\") } is IDOBleReplyType.appRestoreReply -> { //APP initiated recovery log(\"reply for app's restore cmd: ${type.model}\") } is IDOBleReplyType.appStartReply -> { //app initiates start ble reply log(\"sport started now : ${type.model}\") if (type.model?.retCode != 0) { //* -0: success; 1: The device fails to enter the motion mode. //* -2: The device power is low. 3: The bracelet is charging //* -4: Using Alexa 5: On a call tv_response.text = \"sport failed to launch, because of ${type.model?.retCode}\" return } tv_response.text = \"sport launched successfully\" mHandler.postDelayed(object : Runnable { override fun run() { mHandler.postDelayed(this, INTERVAL_EXCHANGE_DATA) exchangeData() } }, INTERVAL_EXCHANGE_DATA) mHandler.postDelayed(object : Runnable { override fun run() { mHandler.postDelayed(this, INTERVAL_EXCHANGE_COMPLETE_DATA) exchangeCompleteData() } }, INTERVAL_EXCHANGE_COMPLETE_DATA) mHandler.postDelayed(object : Runnable { override fun run() { mHandler.postDelayed(this, INTERVAL_EXCHANGE_COMPLETE_DATA) exchangeV3HrData() } }, INTERVAL_EXCHANGE_HR_DATA) } is IDOBleReplyType.appActivityDataReply -> { //result for exchangeCompleteData val model = type.model log(\"appActivityDataReply: ${type.model}\") duration = max(duration, model?.durations ?: 0) calories = max(calories, model?.calories ?: 0) distance = max(distance, model?.distance ?: 0) } is IDOBleReplyType.appActivityGpsReply -> { log(\"appActivityGpsReply: ${type.model}\") } is IDOBleReplyType.appActivityHrReply -> { log(\"appActivityHrReply: ${type.model}\") } } } override fun exchangeV2Data(model: IDOExchangeV2Model) { log(\"exchangeV2Data: ${GsonUtil.toJson(model)}\") } override fun exchangeV3Data(model: IDOExchangeV3Model) { log(\"exchangeV3Data: ${GsonUtil.toJson(model)}\") } }) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-25 18:34:19 "},"doc/dataExchange/IDOAppActivityDataV3ExchangeModel.html":{"url":"doc/dataExchange/IDOAppActivityDataV3ExchangeModel.html","title":"App Activity Data V3 Exchange Model","keywords":"","body":"Multiple sports summary data entities IDOExchangeBaseModel Parameters Description Type Remarks day date int hour hour int minute minute int second second int sportType sport type int IDOAppActivityDataV3ExchangeModel Parameters Description Type Remarks year year int month month int version protocol version number int hrInterval Heart rate interval in minutes int step number of steps int durations duration int calories calories int distance distance int burnFatMins Heart rate duration of fat burning in minutes int aerobicMins Duration of aerobic exercise in minutes int limitMins Duration of extreme exercise in minutes int warmUp warm-up exercise int fatBurning fat burning int aerobicExercise aerobic training int anaerobicExercise anaerobic training int extremeExercise extreme training int warmUpTime Cumulative duration of warm-up exercise in seconds int fatBurningTime Cumulative fat burning time in seconds int aerobicExerciseTime Cumulative duration of aerobic exercise in seconds int anaerobicExerciseTime Cumulative duration of anaerobic exercise in seconds int extremeExerciseTime The cumulative duration of extreme exercise in seconds int avgSpeed Average speed in km/h int maxSpeed Maximum speed in km/h int avgStepStride average stride length int maxStepStride Maximum stride int kmSpeed average kilometer pace int fastKmSpeed Fastest kilometer pace int avgStepFrequency average step frequency int maxStepFrequency Maximum step frequency int avgHrValue average heart rate int maxHrValue Maximum heart rate int recoverTime Recovery time in hours After the app receives the data, it needs to decrement by 1 every hour int vo2max Maximum oxygen uptake unit ml/kg/min int trainingEffect Training effect range: 1.0 - 5.0 (expands transmission 10 times) int grade VO2 grade 1: Low 2: Amateur 3:Average 4: Average 5: Good 6: Excellent 7: Professional int stepsFrequencyCount Number of step frequency details int miSpeedCount Number of mile pace, maximum 100 int realSpeedCount Real-time speed number int paceSpeedCount Real-time pace number int kmSpeedCount Number of kilometers pace details Maximum 100 int actionDataCount The number of actions trained this time int kmSpeeds Seconds per kilometer pace collection array stepsFrequency Step frequency collection unit steps/minute array itemsMiSpeed Mile pace array array itemRealSpeed Real-time speed array unit km/h array paceSpeedItems Real-time pace array array actionData Action completion content type: action type 1 fast walking; 2 jogging; 3 medium speed running; 4 fast running heart_con_value: heart rate control for each action time: action completion time unit seconds goal_time: Action goal time array baseModel Basic data date, time, motion type IDOExchangeBaseModel Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-24 15:49:37 "},"doc/dataExchange/IDOAppExecType.html":{"url":"doc/dataExchange/IDOAppExecType.html","title":"App Exec Type","keywords":"","body":"APP executes data exchange entity IDOExchangeBaseModel Parameters Description Type Remarks day date int hour hour int minute minute int second second int sportType sport type int IDOAppStartExchangeModel Parameters Description Type Remarks targetType target type int targetValue target value int forceStart Whether to force start 0: not forced, 1: forced int vo2max Maximum oxygen uptake unit ml/kg/min int recoverTime Recovery time: unit hour int avgWeekActivityTime Average weekly exercise time last month in minutes int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppEndExchangeModel Parameters Description Type Remarks duration duration (unit: s) int calories calories, unit kcal int distance distance (unit: meters) int isSave 0: Do not save, 1: Save int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppIngExchangeModel Parameters Description Type Remarks duration duration (unit: s) int calories calories, unit kcal int distance distance (unit: meters) int status 0: All valid, 1: Distance invalid, 2: GPS signal weak int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppPauseExchangeModel Parameters Description Type Remarks baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppRestoreExchangeModel Parameters Description Type Remarks baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppIngV3ExchangeModel Parameters Description Type Remarks version protocol version number int default 0 signal 0: indicates weak signal 2: indicates strong signal int distance distance (unit: meters) int speed app calculates and displays real-time pace, unit km/h, 100 times int duration duration int calories calories int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppOperatePlanExchangeModel Parameters Description Type Remarks operate 1: Start exercise, 2: Pause exercise, 3: Resume exercise, 4: End exercise, 5: Switch action int trainingOffset training course date offset starting from 0 int planType Plan type: 1: Running plan 3km, 2: Running plan 5km, 3: Running plan 10km, 4: Half marathon training5: Marathon training (second phase) int baseModel Basic data date, time, motion type IDOExchangeBaseModel Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-24 15:49:37 "},"doc/dataExchange/IDOAppHrDataExchangeModel.html":{"url":"doc/dataExchange/IDOAppHrDataExchangeModel.html","title":"App Hr Data Exchange Model","keywords":"","body":"Multi-sport heart rate data entity IDOExchangeBaseModel Parameters Description Type Remarks day date int hour hour int minute minute int second second int sportType sport type int IDOAppHrDataExchangeModel Parameters Description Type Remarks version protocol version number int heartRateHistoryLen Heart rate data array length, maximum 60 int interval Heart rate interval in seconds int heartRates Heart rate data array Stores heart rate data for one minute, one per second array baseModel Basic data date, time, motion type IDOExchangeBaseModel Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-24 15:49:37 "},"doc/dataExchange/IDOAppReplyType.html":{"url":"doc/dataExchange/IDOAppReplyType.html","title":"App Reply Type","keywords":"","body":"Ble executes data exchange entity IDOExchangeBaseModel Parameters Description Type Remarks day date int hour hour int minute minute int second second int sportType sport type int IDOBleStartReplyExchangeModel Parameters Description Type Remarks operate 1: Request the app to turn on GPS 2: Initiate a motion request int retCode 0: success non-0: failure int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOBleIngReplyExchangeModel Parameters Description Type Remarks distance distance unit: 0.01km int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOBleEndReplyExchangeModel Parameters Description Type Remarks retCode 0: success non-0: failure int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOBlePauseReplyExchangeModel Parameters Description Type Remarks retCode 0: success non-0: failure int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOBleRestoreReplyExchangeModel Parameters Description Type Remarks retCode 0: success non-0: failure int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOBleOperatePlanReplyExchangeModel Parameters Description Type Remarks operate 1: Start exercise, 2: Pause exercise, 3: Resume exercise,4: End exercise, 5: Switch action int planType Plan type- 1: Running plan 3km, 2: Running plan 5km,- 3: Running plan 10km, 4: Half marathon training- 5: Marathon training (second phase) int actionType Action type - 1: Walk quickly; 2: Jog; 3: Run at medium speed; 4: Run fast - 5: End the course exercise (but also wait for the user to have free movement) - 6: Free movement after the course (this field works when operate is 5) int errorCode 0 means success, non-0 means failure int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppBlePauseReplyExchangeModel Parameters Description Type Remarks errCode 0: Success; 1: Failure without entering sports mode int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppBleRestoreReplyExchangeModel Parameters Description Type Remarks errCode 0: Success; 1: Failure without entering sports mode int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppBleEndReplyExchangeModel Parameters Description Type Remarks errCode 0: Success; 1: Failure to enter sports mode int duration duration unit s int calories calories in kcal int distance distance unit 0.01km int baseModel Basic data date, time, motion type IDOExchangeBaseModel Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-24 15:49:37 "},"doc/dataExchange/IDOBleExecType.html":{"url":"doc/dataExchange/IDOBleExecType.html","title":"Ble Exec Type","keywords":"","body":"App monitors Ble data entities IDOExchangeBaseModel Parameters Description Type Remarks day date int hour hour int minute minute int second second int sportType sport type int IDOBleStartExchangeModel Parameters Description Type Remarks operate 1: Request the app to turn on GPS 2: Initiate a motion request int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOBleIngExchangeModel Parameters Description Type Remarks distance distance unit: 0.01km int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOBleEndExchangeModel Parameters Description Type Remarks baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOBlePauseExchangeModel Parameters Description Type Remarks baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOBleRestoreExchangeModel Parameters Description Type Remarks baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppBlePauseExchangeModel Parameters Description Type Remarks baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppBleRestoreExchangeModel Parameters Description Type Remarks baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppBleEndExchangeModel Parameters Description Type Remarks duration duration unit s int calories calories in kcal int distance distance unit 0.01km int avgHr average heart rate int maxHr maximum heart rate int burnFatMins Fat burning time in minutes int aerobicMins Cardiopulmonary exercise duration in minutes int limitMins Limit exercise duration in minutes int isSave 0: Do not save, 1: Save int baseModel Basic data date, time, motion type IDOExchangeBaseModel Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-24 15:49:37 "},"doc/dataExchange/IDOBleReplyType.html":{"url":"doc/dataExchange/IDOBleReplyType.html","title":"Ble Reply Type","keywords":"","body":"App executes Ble response entity IDOExchangeBaseModel Parameters Description Type Remarks day date int hour hour int minute minute int second second int sportType sport type int IDOAppStartReplyExchangeModel Parameters Description Type Remarks retCode Response status- 0: Success; 1: The device has entered sports mode and failed; - 2: The device has low power and failed; 3: The bracelet is charging- 4: Alexa 5 is being used: Calling int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppEndReplyExchangeModel Parameters Description Type Remarks errorCode 0: Success; 1: Device end failure int calories calories, unit kcal int distance distance (unit: meters) int step number of steps (unit: step) int avgHr average heart rate int maxHr maximum heart rate int burnFatMins Fat burning time in minutes int aerobicMins Cardiopulmonary exercise duration in minutes int limitMins Limit exercise duration in minutes int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppIngReplyExchangeModel Parameters Description Type Remarks calories calories, unit kcal int distance distance (unit: meters) int status 0: All valid, 1: Distance invalid, 2: GPS signal weak int step number of steps (unit: step) int currentHr Current heart rate int interval heart rate interval unit s int hrSerial serial number int hrJson Heart rate data List baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppPauseReplyExchangeModel| Parameters | Description | Type | Remarks | | --------- | -------------------------- | --------- ----------- | ---- | | errCode | Pause error code 0: success, non-0: failure | int | | | baseModel | Basic data date, time, motion type | IDOExchangeBaseModel | | IDOAppRestoreReplyExchangeModel Parameters Description Type Remarks errCode Pause error code 0: success, non-0: failure int baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppIngV3ReplyExchangeModel Parameters Description Type Remarks version Pause error code 0: success, non-0: failure int heartRate heart rate data int distance distance int unit is displayed according to the unit set by unit duration duration seconds int realTimeCalories dynamic calories int realTimeSpeed Real-time speed, unit km/h, expanded 100 times int kmSpeed Real-time kilometer pace unit s/km int steps number of steps int swimPosture Main swimming posture int status status int -0: Invalid 1: Start 2: Manual pause 3: End 4: Automatic pause for 5 seconds using sliding average Use 1-5 seconds of data for the 5th second, use the 6th second 2-6 seconds data realTimeSpeedPace Real-time pace, unit seconds int trainingEffect Aerobic training effect level int Range 0-50 Expand transmission 10 times anaerobicTrainingEffect Anaerobic exercise training effect level int Range 0-50 Expand transmission 10 times actionType Action type1 Brisk walking2 Jogging3 Medium speed running4 Fast running5 End of course exercise6 Free exercise after the end of the course int countHour Accumulated exercise time int Accumulated exercise time =Training time within the course+Time after the end of the courseRequires firmware to open the menuWhen action_type = 1~5,this field Is the movement countdown time(Note: time decreases)When action_type = 6,This field is the time after the course ends(Note: time increases) countMinute Accumulated exercise time minutes int Same as above countSecond Accumulated movement time in seconds int Same as above baseModel Basic data date, time, motion type IDOExchangeBaseModel IDOAppOperatePlanReplyExchangeModel Parameters Description Type Remarks planType Plan type1: Running plan 3km, 2: Running plan 5km,3: Running plan 10km, 4: Half marathon training,5: Marathon training (second phase) int operate 1: Start exercise2: Pause exercise3: Resume exercise 4: End exercise,5: Switch action int actionType Action type: 1 brisk walking2 jogging3 medium speed running4 fast running5 end of course exercise6 free exercise after the end of the course int errorCode 0 means success, non-0 means failure baseModel Basic data date, time, motion type IDOExchangeBaseModel Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-24 15:49:37 "},"doc/dataExchange/IDOExchangeStatus.html":{"url":"doc/dataExchange/IDOExchangeStatus.html","title":"Exchange Status","keywords":"","body":"Exchange data status IDOExchangeStatus enum IDOExchangeStatus: Int { case initial = 0 /// Initialization case appStart = 1 /// app starts case appStartReply = 2 /// app initiates start ble reply case appEnd = 3 /// app launch ends case appEndReply = 4 /// app initiates and ends ble reply case appPause = 5 /// app initiates pause case appPauseReply = 6 /// app initiates pause ble reply case appRestore = 7 /// app initiates recovery case appRestoreReply = 8 /// app initiates recovery ble reply case appIng = 9 /// app initiates exchange case appIngReply = 10 /// app initiates exchange ble reply case getActivity = 11 /// Get the last motion data case getActivityReply = 12 /// Get the last motion data ble reply case getHr = 13 /// Get one-minute heart rate case getHrReply = 14 /// Get one minute heart rate ble reply case appStartPlan = 15 /// app starts exercise plan case appStartPlanReply = 16 /// app starts exercise plan ble reply case appPausePlan = 17 /// app pauses exercise plan case appPausePlanReply = 18 /// app pauses exercise plan ble reply case appRestorePlan = 19 /// app recovery exercise plan case appRestorePlanReply = 20 /// app resume exercise plan ble reply case appEndPlan = 21 /// The app ends the exercise plan case appEndPlanReply = 22 /// app ends exercise plan ble reply case appSwitchAction = 23 /// app switching action case appSwitchActionReply = 24 /// app ends exercise plan ble reply case appBlePause = 25 /// App-initiated movement ble initiates pause case appBlePauseReply = 26 /// App-initiated movement ble initiates pause app reply case appBleRestore = 27 /// App-initiated movement ble initiates recovery case appBleRestoreReply = 28 /// App-initiated movement ble initiates recovery app reply case appBleEnd = 29 /// The movement initiated by app ends when initiated by ble case appBleEndReply = 30 /// The movement initiated by app is initiated and ended by app reply case bleStart = 31 /// Movement initiated by ble. Started by ble. case bleStartReply = 32 /// Movement initiated by ble. Started by ble. App replies. case bleEnd = 33 /// The movement initiated by ble ends when initiated by ble case bleEndReply = 34 /// The movement initiated by ble is initiated and ended by app reply case blePause = 35 /// ble initiated movement ble initiated pause case blePauseReply = 36 /// ble initiated movement ble initiated pause app reply case bleRestore = 37 /// ble initiated movement ble initiated recovery case bleRestoreReply = 38 /// ble initiated movement ble initiated recovery app reply case bleIng = 39 /// Movement initiated by ble ble initiated exchange case bleIngReply = 40 /// ble initiated movement ble initiated exchange app reply case bleStartPlan = 41 /// ble starts exercise plan case blePausePlan = 42 /// ble pauses exercise plan case bleRestorePlan = 43 /// ble recovery exercise plan case bleEndPlan = 44 /// ble ends the exercise plan case bleSwitchAction = 45 /// ble switching action case bleOperatePlanReply = 46 } enum class IDOExchangeStatus(val raw: Int) { INITIAL(0), /// Initialization APPSTART(1), /// APP starts APPSTARTREPLY(2), /// APP initiates BLE reply APPEND(3), /// APP launch ends APPENDREPLY(4), /// APP initiates and ends BLE reply APPPAUSE(5), /// APP initiates pause APPPAUSEREPLY(6), /// APP initiates pause BLE reply APPRESTORE(7), /// APP initiates recovery APPRESTOREREPLY(8), /// APP initiates recovery BLE reply APPING(9), /// APP initiates exchange APPINGREPLY(10), /// APP initiates exchange BLE reply GETACTIVITY(11), /// Get the last motion data GETACTIVITYREPLY(12), /// Get the last motion data BLE reply GETHR(13), /// Get one-minute heart rate GETHRREPLY(14), /// Get one-minute heart rate BLE reply APPSTARTPLAN(15), /// APP starts exercise plan APPSTARTPLANREPLY(16), /// APP starts exercise plan BLE reply APPPAUSEPLAN(17), /// APP pauses exercise plan APPPAUSEPLANREPLY(18), /// APP pauses exercise plan BLE reply APPRESTOREPLAN(19), /// APP recovery exercise plan APPRESTOREPLANREPLY(20), /// APP recovery exercise plan BLE reply APPENDPLAN(21), /// APP ends exercise plan APPENDPLANREPLY(22), /// APP ends exercise plan BLE reply APPSWITCHACTION(23), /// APP switching action APPSWITCHACTIONREPLY(24), /// APP ends exercise plan BLE reply APPBLEPAUSE(25), /// APP initiated movement BLE initiated pause APPBLEPAUSEREPLY(26), /// APP initiated movement BLE initiated pause APP reply APPBLERESTORE(27), /// APP initiated movement BLE initiated recovery APPBLERESTOREREPLY(28), /// APP initiated movement BLE initiated recovery APP reply APPBLEEND(29), /// The movement initiated by APP ends with BLE initiation APPBLEENDREPLY(30), /// Movement initiated by APP, BLE initiation ends, APP replies BLESTART(31), /// BLE initiated movement BLE initiated start BLESTARTREPLY(32), /// BLE initiated movement BLE initiated start APP reply BLEEND(33), /// BLE initiated movement BLE initiated end BLEENDREPLY(34), /// BLE initiated movement BLE initiated end APP reply BLEPAUSE(35), /// BLE initiated movement BLE initiated pause BLEPAUSEREPLY(36), /// BLE initiated movement BLE initiated pause APP reply BLERESTORE(37), /// BLE initiated movement BLE initiated recovery BLERESTOREREPLY(38), /// BLE initiated movement BLE initiated recovery APP reply BLEING(39), /// BLE initiated movement BLE initiated exchange BLEINGREPLY(40), /// BLE initiated movement BLE initiated exchange APP reply BLESTARTPLAN(41), /// BLE starts exercise plan BLEPAUSEPLAN(42), /// BLE pauses motion plan BLERESTOREPLAN(43), /// BLE recovery exercise plan BLEENDPLAN(44), /// BLE ends motion plan BLESWITCHACTION(45), /// BLE switching action BLEOPERATEPLANREPLY(46); } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 15:39:04 "},"doc/dataExchange/IDOExchangeV2Model.html":{"url":"doc/dataExchange/IDOExchangeV2Model.html","title":"Exchange V2 Model","keywords":"","body":"V2 data exchange entity IDOExchangeBaseModel Parameters Description Type Remarks day date int hour hour int minute minute int second second int sportType sport type int IDOExchangeV2Model Parameters Description Type Remarks operate 1: Request app to open GPS 2: Initiate exercise request int targetValue target value int targetType Sports target type0: No target,1: Number of repetitions, unit: times,2: Distance, unit: meters, 3: Calories, unit: Kcal, 4: duration, unit: minutes, 5: number of steps, unit: steps int forceStart Whether to force start 0: Not forced, 1: Forced retCode Error code0: Success; 1: The device has entered sports mode and failed;2: The device has low power and failed; 3: The bracelet is charging 4: Using Alexa 5: Calling int calories calories (unit: J) int distance distance (unit: meters) int durations duration (unit: seconds) int step number of steps (unit: step) int avgHr average heart rate int maxHr maximum heart rate int curHr Current heart rate int hrSerial serial number int burnFatMins Fat burning time (unit: minutes) int aerobicMins Aerobic duration (unit: minutes) int limitMins Limit duration (unit: minutes) int isSave whether to store data bool status 0: all valid, 1: distance invalid, 2: gps signal weak int interval heart rate interval int hrValues Heart rate data collection array baseModel Basic data date, time, motion type IDOExchangeBaseModel Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-24 15:49:37 "},"doc/dataExchange/IDOExchangeV3Model.html":{"url":"doc/dataExchange/IDOExchangeV3Model.html","title":"Exchange V3 Model","keywords":"","body":"V3 data exchange entity IDOExchangeBaseModel Parameters Description Type Remarks day date int hour hour int minute minute int second second int sportType sport type int IDOExchangeV3Model Parameters Description Type Remarks year Training course year int month Training course month int planType Plan type: 1: Running plan 3km, 2: Running plan 5km, 3: Running plan 10km, 4: Half marathon training (second phase) ,5: Marathon training (Phase II) int actionType Action type: 1: Walk quickly; 2: Jog; 3: Run at medium speed; 4 Run fast; 5: End the course6: Free exercise after the course int version protocol version number int operate 1: Request app to open GPS 2: Initiate exercise request int targetValue target value int targetType Target type:0: No target,1: Number of repetitions, unit: times,2: Distance, unit: meters,3: Calories, unit: calories Card, 4: duration, unit: minutes, 5: number of steps, unit: steps int forceStart Whether to force start 0: Not forced, 1: Forced retCode Error code step number of steps int durations duration int calories calories int distance distance int swimPosture 0: Medley; 1: Freestyle; 2: Breaststroke; 3: Backstroke; 4: Butterfly; int status The status returned by the bracelet Start: 1, Pause: 2, End: 3, 0: Invalid status int signalFlag signal strength 0: indicates weak signal, 1: indicates strong signal int isSave whether to store data Bool realTimeSpeed app calculates and displays real-time speed in km/h 100 times, one record every 15 seconds int realTimePace app calculates and displays real-time pace unit s int interval heart rate interval int hrCount Heart rate count int burnFatMins Fat burning time (unit: minutes) int aerobicMins Aerobic duration (unit: minutes) int limitMins Limit duration (unit: minutes) int hrValues Heart rate data collection array warmUpSecond Warm-up exercise duration (seconds) int anaeroicSecond Anaerobic exercise duration (seconds) int fatBurnSecond Fat burning exercise duration (seconds) int aerobicSecond Aerobic exercise duration (seconds) int limitSecond Limit exercise duration (seconds) int avgHr average heart rate int maxHr maximum heart rate int curHr Current heart rate int warmUpValue Warm-up exercise value int fatBurnValue Fat burning exercise value int aerobicValue aerobic fitness value int limitValue Extreme sports value int anaerobicValue Anaerobic fitness value int avgSpeed average speed km/h int maxSpeed Maximum speed km/h int avgStepFrequency average step frequency int maxStepFrequency Maximum step frequency int avgStepStride average stride length int maxStepStride Maximum stride int kmSpeed average kilometer pace int fastKmSpeed Fastest kilometer pace int kmSpeedCount Number of kilometers pace int kmSpeeds Kilometer pace collection array mileCount Mile pace count int mileSpeeds mile pace collection array stepsFrequencyCount Step frequency number int stepsFrequencys step frequency collection array trainingEffect Training effect; Unit: None Range 1.0 ~ 5.0 (*10 times) int anaerobicTrainingEffect Anaerobic training effect; Unit: None Range 1.0 ~ 5.0 (*10 times) int vo2Max Maximum oxygen uptake; Unit: ml/kg/min; Range 0-80 int actionDataCount The number of actions trained this time int inClassCalories Exercise calories in the course in kilocalories int completionRate Action completion rate 0—100 int hrCompletionRate Heart rate control rate 0—100 int recoverTime Recovery time: unit hour int avgWeekActivityTime Average weekly exercise time last month in minutes int grade VO2 level1: Low 2: Amateur 3: Average 4: Average 5: Good 6: Excellent 7: Professional int actionData Action completion contenttype: action type 1 fast walking; 2 jogging; 3 medium speed running; 4 fast runningheart_con_value: heart rate control for each actiontime: action completion time unit seconds goal_time: action goal time int trainingOffset training course date offset starting from 0 int countHour Sports countdown int countMinute Sports countdown minutes int countSecond Sports countdown seconds int time Action target time in seconds int lowHeart Heart rate range low value int heightHeart Heart rate range high value int paceSpeedCount Real-time pace number int paceSpeeds Real-time pace array. The passed s is calculated every 5 seconds array realSpeedCount Real-time speed number int realSpeeds Real-time speed array. The passed s is calculated every 5 seconds array baseModel Basic data date, time, motion type IDOExchangeBaseModel Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-24 15:49:37 "},"doc/logicDescription/syncDataDesc.html":{"url":"doc/logicDescription/syncDataDesc.html","title":"Exchange Description","keywords":"","body":"Data exchange implementation logic Function table judgment If the attribute supportV3ActivityExchange = false, the current motion data belongs to v2, otherwise it is v3; v2 is an old device motion protocol and can calculate and display relatively little data; v3 belongs to the new device motion protocol and can calculate and display relatively much data; (currently all new devices fall into this category) APP launches campaign APP START IDOAppStartExchangeModel Time (day, hour, minute, second): The only reference for global management of the current sport. The same time needs to be issued for start, end, pause, and resume. /// Start date startExchangeModel.day = day; /// Starting clock startExchangeModel.hour = hour; /// Starting minute startExchangeModel.minute = minute; /// Starting seconds startExchangeModel.second = second; ///Motion type startExchangeModel.sportType = sportType; /// If there are other sports currently in progress, this parameter assignment is forced to turn on, and the previous movement will be forced to be overwritten. startExchangeModel.forceStart = forceStart; ...Other attributes are issued based on business needs and are not used yet. BleReply IDOAppStartReplyExchangeModel /// 0: Success; /// 1: The device has entered sports mode and failed; /// 2: Failed due to low device power; 3: The bracelet is charging /// 4: Using Alexa 5: Calling startReplyExchangeModel.retCode; APP stopped IDOAppEndExchangeModel /// Start date (refer to start time) endExchangeModel.day = startExchangeModel.day; /// Starting clock (reference starting time) endExchangeModel.hour = startExchangeModel.hour; /// The starting minute (refer to the starting time) endExchangeModel.minute = startExchangeModel.minute; /// The starting seconds (refer to the starting time) endExchangeModel.second = startExchangeModel.second; ///Motion type endExchangeModel.sportType = sportType; /// The duration of the global movement (unit seconds) endExchangeModel.duration = totalSeconds; /// Calories accumulated during global exercise (unit: kcal) endExchangeModel.calories = numCalories; /// The accumulated movement distance of global movement (unit: meters) endExchangeModel.distance = mSendDistance; /// Whether to keep the data (when the exercise duration is too short, you can choose not to store it. The exercise duration must be at least 1 minute. After you choose to save, the data will be synchronized) endExchangeModel.isSave = isSave; BleReply IDOAppEndReplyExchangeModel /// Start date (refer to start time) endReplyExchangeModel.day /// Starting clock (reference starting time) endReplyExchangeModel.hour /// The starting minute (refer to the starting time) endReplyExchangeModel.minute /// The starting seconds (refer to the starting time) endReplyExchangeModel.second ///Motion type endReplyExchangeModel.sportType /// Calories accumulated during global exercise (unit: kcal) endReplyExchangeModel.calories /// The accumulated movement distance of global movement (unit: meters) endReplyExchangeModel.distance /// The number of steps accumulated in global motion (unit: step) endReplyExchangeModel.step /// Average heart rate endReplyExchangeModel.avgHr /// Maximum heart rate endReplyExchangeModel.maxHr /// Fat burning time in minutes endReplyExchangeModel.burnFatMins /// Cardiopulmonary exercise duration in minutes endReplyExchangeModel.aerobicMins /// Extreme exercise duration in minutes endReplyExchangeModel.limitMins APP suspended IDOAppPauseExchangeModel /// Start date (refer to start time) pauseExchangeModel.day = startExchangeModel.day; /// Starting clock (reference starting time) pauseExchangeModel.hour = startExchangeModel.hour; /// The starting minute (refer to the starting time) pauseExchangeModel.minute = startExchangeModel.minute; /// The starting seconds (refer to the starting time) pauseExchangeModel.second = startExchangeModel.second; BleReply IDOAppPauseReplyExchangeModel /// Pause error code 0: success, non-0: failure pauseReplyExchangeModel.errCode APP recovery IDOAppRestoreExchangeModel /// Start date (refer to start time) restoreExchangeModel.day = startExchangeModel.day; /// Starting clock (reference starting time) restoreExchangeModel.hour = startExchangeModel.hour; /// The starting minute (refer to the starting time) restoreExchangeModel.minute = startExchangeModel.minute; /// The starting seconds (refer to the starting time) restoreExchangeModel.second = startExchangeModel.second; BleReply IDOAppRestoreReplyExchangeModel /// Pause error code 0: success, non-0: failure pauseRestoreExchangeModel.errCode v2 data exchange IDOAppIngExchangeModel Globally perform v2 data exchange every 2 seconds /// 0: All data is valid, 1: Distance is invalid 2: GPS signal is weak (not used yet) v2exchangeModel.status = status; /// Start date (refer to start time) v2exchangeModel.day = startExchangeModel.day; /// Starting clock (reference starting time) v2exchangeModel.hour = startExchangeModel.hour; /// The starting minute (refer to the starting time) v2exchangeModel.minute = startExchangeModel.minute; /// The starting seconds (refer to the starting time) v2exchangeModel.second = startExchangeModel.second; /// The duration of the global movement (unit seconds) v2exchangeModel.duration = totalSeconds; /// Calories accumulated during global exercise (unit: kcal) v2exchangeModel.calories = numCalories; /// The accumulated movement distance of global movement (unit: meters) v2exchangeModel.distance = mSendDistance; BleReply IDOAppIngReplyExchangeModel Specific field reference documents v3 data exchange IDOAppIngV3ExchangeModel Globally perform v3 data exchange every 2 seconds /// 0: All data is valid, 1: Distance is invalid 2: GPS signal is weak (not used yet) v3exchangeModel.signal = signal; /// Start date (refer to start time) v3exchangeModel.day = startExchangeModel.day; /// Starting clock (reference starting time) v3exchangeModel.hour = startExchangeModel.hour; /// The starting minute (refer to the starting time) v3exchangeModel.minute = startExchangeModel.minute; /// The starting seconds (refer to the starting time) v3exchangeModel.second = startExchangeModel.second; /// The duration of the global movement (unit seconds) v3exchangeModel.duration = totalSeconds; /// Calories accumulated during global exercise (unit: kcal) v3exchangeModel.calories = numCalories; /// The accumulated movement distance of global movement (unit: meters) v3exchangeModel.distance = mSendDistance; /// The app calculates and displays real-time pace in km/h, 100 times v3exchangeModel.speed = speed; /// The function table determines whether it supports the delivery of GPS coordinate points. if (sdk.funTable.setSupportExchangeSetGpsCoordinates) { /// If supported, assign the coordinate point located within the current two seconds. v3exchangeModel.gpsInfoCount = exchangeLatLng.length; List> gps = []; for (var element in exchangeLatLngSDK gps.add({ \"latitude\": (element.latitude * 1000000).toInt(), \"longitude\": (element.longitude * 1000000).toInt(), }); } v3exchangeModel.gps = gps; } BleReply IDOAppIngV3ReplyExchangeModel Specific field reference documents Get v3 heart rate data Get heart rate data globally every 30 seconds getActivityHrData(completion:) BleResponse IDOAppHrDataExchangeModel Specific field reference documents Get a summary of v3’s recent sports data Get a sports summary globally every 40 seconds getLastActivityData(completion: ) BleResponse IDOAppActivityDataV3ExchangeModel Specific field reference documents Ble initiates a pause, and the APP responds (responds to the firmware status and completes the entire command closed loop) IDOAppBlePauseReplyExchangeModel /// 0: success non-0: failure replyExchangeModer.errCode = code Ble initiates recovery and APP replies (responds to the firmware status and completes the entire command closed loop) IDOBleRestoreReplyExchangeModel /// 0: success non-0: failure replyExchangeModer.errCode = code Ble initiation ends, APP replies (responds to firmware status, completes the entire command closed loop) IDOBleEndReplyExchangeModel /// 0: success non-0: failure replyExchangeModer.errCode = code /// The duration of the global movement (unit seconds) replyExchangeModer.duration = duration /// Calories accumulated during global exercise (unit: kcal) replyExchangeModer.calories = calories /// The accumulated movement distance of global movement (unit: meters) replyExchangeModer.distance = distance Ble initiates a campaign (APP project is not enabled) APP monitors Ble commands Ble response starts IDOBleStartExchangeModel /// 1: Request the app to open GPS 2: Initiate a motion request bleStartExchangeModel.operate ///Motion type bleStartExchangeModel.stportType /// Start date (initial movement start time) startExchangeModel.day = bleStartExchangeModel.day /// Start clock (initialize movement start time) startExchangeModel.hour = bleStartExchangeModel.hour /// The starting minute (initial movement start time) startExchangeModel.minute = bleStartExchangeModel.minute /// The starting seconds (initial movement start time) startExchangeModel.second = bleStartExchangeModel.second APP reply IDOBleStartReplyExchangeModel /// 1: Request the app to open GPS 2: Initiate a motion request bleStartReplyExchangeModel.operat = bleStartExchangeModel.operate /// 0: success non-0: failure bleStartReplyExchangeModel.retCode = 0 Ble response pause IDOBlePauseExchangeModel /// Start date blePauseReplyExchangeModel.day /// Starting clock blePauseReplyExchangeModel.hour /// Starting minute blePauseReplyExchangeModel.minute /// Starting seconds blePauseReplyExchangeModel.second APP reply IDOBlePauseReplyExchangeModel /// 0: success non-0: failure blePauseReplyExchangeModel.retCode = 0 Ble response recovery IDOBleRestoreExchangeModel /// Start date bleRestoreReplyExchangeModel.day /// Starting clock bleRestoreReplyExchangeModel.hour /// Starting minute bleRestoreReplyExchangeModel.minute /// Starting seconds bleRestoreReplyExchangeModel.second APP reply IDOBleRestoreReplyExchangeModel /// 0: success non-0: failure bleRestoreReplyExchangeModel.retCode = 0 Ble response ends IDOBleEndExchangeModel /// Start date bleEndReplyExchangeModel.day /// Starting clock bleEndReplyExchangeModel.hour /// Starting minute bleEndReplyExchangeModel.minute /// Starting seconds bleEndReplyExchangeModel.second APP reply IDOBleEndReplyExchangeModel /// 0: success non-0: failure bleEndReplyExchangeModel.retCode = 0 Ble response data IDOBleIngExchangeModel /// Start date bleIngReplyExchangeModel.day /// Starting clock bleIngReplyExchangeModel.hour /// Starting minute bleIngReplyExchangeModel.minute /// Starting seconds bleIngReplyExchangeModel.second /// Distance unit: 0.01km bleIngReplyExchangeModel.distance APP reply IDOBleIngReplyExchangeModel /// Distance unit: 0.01km bleIngReplyExchangeModel.distance = 0 Global monitoring of complete data The sdk has already done data management and calculation processing, and the APP can directly display the data in the UI The data in response to the execution of the above specific instructions does not need to be processed (as a log record) If app and device data are exchanged, complete data changes will be triggered. v2 data exchangeV2Data(completion:) IDOExchangeV2Model Specific field reference documents v3 data exchangeV3Data(completion:) IDOExchangeV3Model Specific field reference documents Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 11:15:14 "},"doc/messageIcon/IDOMessageIcon.html":{"url":"doc/messageIcon/IDOMessageIcon.html","title":"Message Icon","keywords":"","body":"Message icon Functional Overview iOS and Android implement dynamic update interface for message icons. When iOS monitors the message notification, the firmware returns the application package name and obtains the APP information from the background. The downloaded corresponding icon is cropped and sent to the firmware, and the application name is also sent to the firmware. When Android starts, it obtains all application information in the system. , when the Android app receives a message notification, the corresponding application icon is cropped according to the message type and sent to the firmware. MessageIconInterface Attributes updating Is it being updated? iconDirPath Get the directory where the icon image is stored method getDefaultAppInfo(completion:) The device supports default APP information collection Parameters: completion: return APP information results items: IDOAppIconItemModel collection firstGetAppInfo(force:completion:) android installed all app information collection Parameters: force: Android force update message icon and name completion: return APP information results items: IDOAppIconItemModel collection getCacheAppInfo(completion:) Get cached APP information Parameters: completion: return APP information results model: IDOAppIconInfoModel resetIconInfoData(macAddress:deleteIcon:completion:) Reset APP icon information (delete local sandbox cached images) Parameters: macAddress: MAC address whose data needs to be cleared deleteIcon: Whether to delete icon picture files, deleted by default completion: delete status iOSConfig(countryCode:baseUrlPath:appKey:language:) iOS configuration information Parameters: countryCode: country code (such as: CN, US) baseUrlPath: cache server address appKey: background request to allocate appKey language: language unit androidSendMessageIconToDevice(eventType:completion:) Android sends a message icon to the device when a notification is received Parameters: eventType: event type completion: delivery status Example Swift /// ios configuration information /// Parameters are for reference only, assign values according to actual conditions // If you do not configure it, obtain it directly from the Apple server (it will be slow). It is recommended that you cache it in the background sdk.messageIcon.iOSConfig(countryCode: \"US\",seUrlPath: \"https://cn-user.idoocloud.com/api/ios/lookup/get\", appKey: \"800a6444f9c0433c8e88741b6ddf1443\", language: 2) /// Enter the switch control page to get the APP name and icon sdk.messageIcon.firstGetAllAppInfo(force: false) { items in } /// Get the default enabled notification APP sdk.messageIcon.getDefaultAppInfo { items in } /// Unbind the device to delete data sdk.messageIcon.resetIconInfoData(macAddress: \"\", deleteIcon: true) { success in } Kotlin: // Enter the switch control page to get the app name and icon sdk.messageIcon.firstGetAllAppInfo(force = false) { items -> // Handle the returned data here } // Get the default notification-enabled apps sdk.messageIcon.getDefaultAppInfo { items -> // Handle the returned data here } // Unbind the device and delete data sdk.messageIcon.resetIconInfoData(macAddress = \"\", deleteIcon = true) { success -> // Handle the returned result here } // The event type is executed each time a notification message is delivered // The event type is obtained by the above items, and the event type is associated with each APP. Therefore, telling the event type will know the notification of which app // Deliver this event type to determine whether the APP icon is updated. If the APP icon is not updated, the SDK will deliver the corresponding APP icon sdk.messageIcon.androidSendMessageIconToDevice(eventType = type) { success -> } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-24 15:49:37 "},"doc/messageIcon/IDOMessageIconModel.html":{"url":"doc/messageIcon/IDOMessageIconModel.html","title":"Message Icon Model","keywords":"","body":"Message icon entity IDOAppIconInfoModel Parameters Description Type Remarks version version number Int iconWidth icon width Int iconHeight icon height Int colorFormat color format Int blockSize Compression block size Int totalNum total number Int items package name details collection list IDOAppIconItemModel collection IDOAppIconItemModel Parameters Description Type Remarks evtType Event type Int packName Application package name String appName Application name String iconLocalPath icon sandbox small icon address String (firmware use) itemId Give each package name an id Int msgCount Number of messages received Int Discard iconCloudPath icon cloud address String state Message icon update status Int 0: No need to update 1: Need to update icon, 2: Need to update app name, 3: Both icon and app need to be updated iconLocalPathBig icon sandbox big icon address String (app use) countryCode Country code String appVersion Application version number String isDownloadAppInfo Whether the APP information has been downloaded Bool isUpdateAppName Whether the application name has been updated Bool isUpdateAppIcon Whether the application icon has been updated Bool isDefault Whether it is the default application Bool IDOAppIconInfoModel Parameters Description Type Remarks version version number Int iconWidth icon width Int iconHeight icon height Int colorFormat color format Int blockSize Compression block size Int totalNum total number Int items package name details collection list IDOAppIconItem collection Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 17:09:22 "},"doc/get/IDOCommandIndex.html":{"url":"doc/get/IDOCommandIndex.html","title":"Get Command","keywords":"","body":"Get instructions Get bt bluetooth name - getBtName Get Real-time Data event number - getLiveData Get error record - getErrorRecord Get HID Information event number - getHidInfo Get GPS Information event number - getGpsInfo Get version information event number - getVersionInfo Get MTU Information event number - getMtuInfo Get event number for all health monitoring switches - getAllHealthSwitchState Get GPS Status event number - getGpsStatus Get non-deletable menu list in firmware event number - getUnerasableMeunList Get event number for activity switch - getActivitySwitch Get unread app reminder switch event number - getUnreadAppReminder Get Font Library Information event number - getFlashBinInfo Query BT pairing switch, connection, A2DP connection, HFP connection status (Only Supported on devices with BT Bluetooth) event number - getBtNotice Get wrist up gesture data event number - getUpHandGesture Get watch ID event number - getWatchDialId Get Do Not Disturb mode status event number - getNotDisturbStatus Get Set Calorie/Distance/Mid-High Sport Time Goal event number - getMainSportGoal Get blood pressure algorithm version information event number - getBpAlgVersion Get screen brightness event number - getScreenBrightness Get Hot Start Parameters event number - getHotStartParam Get maximum number of settings supported by firmware event number - getSupportMaxSetItemsNum Get walk reminder event number - getWalkRemind Get daily step goal event number - getStepGoal Get device name event number - getDeviceName Get firmware local contact file modification time event number - getContactReviseTime Get device update status event number - getUpdateStatus Get stress value event number - getStressVal Get Heart Rate Monitoring Mode event number - getHeartRateMode Get battery information event number - getBatteryInfo Get device log state event number - getDeviceLogState Get Download Language Support - getDownloadLanguage Get Supported Menu List - getMenuList Get notification center status event number - getNoticeStatus Getting Alarms for V3APP Devices - getAlarm Get User Habit Information in V3 - getHabitInfo Get Firmware Song Names and Folders - getBleMusicInfo Get Screen Information - getWatchDialInfo Getting watch face list for V3 (New) - getWatchListV3 Get Watch Face List in V2 - getWatchListV2 Get Language Library List - getLanguageLibrary Getting firmware local beep file information for V3 - getBleBeep Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 15:15:23 "},"doc/get/IDOGetBtName.html":{"url":"doc/get/IDOGetBtName.html","title":"Get bt bluetooth name","keywords":"","body":"Get bt bluetooth name String Function table：getBtAddrV2 Sample Cmds.getBtName().send { rs in if case .success(let obj) = rs { // success // obj is String }else { // fail } } Kotlin Cmds.getBtName().send { if (it.res != null) { // success // it.res is String }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetLiveData.html":{"url":"doc/get/IDOGetLiveData.html","title":"Get Real-time Data event number","keywords":"","body":"Get Real-time Data event number IDOLiveDataModel Function Table: getRealtimeData Sample Cmds.getLiveData().send { rs in if case .success(let obj) = rs { // success // obj is IDOLiveDataModel }else { // fail } } Kotlin Cmds.getLiveData().send { if (it.res != null) { // success // it.res is IDOLiveDataModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-04 14:20:50 "},"doc/get/IDOGetErrorRecord.html":{"url":"doc/get/IDOGetErrorRecord.html","title":"Get error record","keywords":"","body":"Get error record IDOErrorRecordModel Function Table: getFlashLog Sample Cmds.getErrorRecord().send { rs in if case .success(let obj) = rs { // success // obj is IDOErrorRecordModel }else { // fail } } Kotlin Cmds.getErrorRecord().send { if (it.res != null) { // success // it.res is IDOErrorRecordModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-04 14:19:43 "},"doc/get/IDOGetHidInfo.html":{"url":"doc/get/IDOGetHidInfo.html","title":"Get HID Information event number","keywords":"","body":"Get HID Information event number Bool Function Table：null Sample Cmds.getHidInfo().send { rs in if case .success(let obj) = rs { // success // obj is Bool }else { // fail } } Kotlin Cmds.getHidInfo().send { if (it.res != null) { // success // it.res is Bool }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetGpsInfo.html":{"url":"doc/get/IDOGetGpsInfo.html","title":"Get GPS Information event number","keywords":"","body":"Get GPS Information event number IDOGpsInfoModel Function Table : getSupportUpdateGps Sample Cmds.getGpsInfo().send { rs in if case .success(let obj) = rs { // success // obj is IDOGpsInfoModel }else { // fail } } Kotlin Cmds.getGpsInfo().send { if (it.res != null) { // success // it.res is IDOGpsInfoModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetVersionInfo.html":{"url":"doc/get/IDOGetVersionInfo.html","title":"Get version information event number","keywords":"","body":"Get version information event number IDOVersionInfoModel Function Table: getVersionInfo Sample Cmds.getVersionInfo().send { rs in if case .success(let obj) = rs { // success // obj is IDOVersionInfoModel }else { // fail } } Kotlin Cmds.getVersionInfo().send { if (it.res != null) { // success // it.res is IDOVersionInfoModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-04 14:22:09 "},"doc/get/IDOGetMtuInfo.html":{"url":"doc/get/IDOGetMtuInfo.html","title":"Get MTU Information event number","keywords":"","body":"Get MTU Information event number IDOMtuInfoModel Function Table : getMtu Sample Cmds.getMtuInfo().send { rs in if case .success(let obj) = rs { // success // obj is IDOMtuInfoModel }else { // fail } } Kotlin Cmds.getMtuInfo().send { if (it.res != null) { // success // it.res is IDOMtuInfoModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetAllHealthSwitchState.html":{"url":"doc/get/IDOGetAllHealthSwitchState.html","title":"Get event number for all health monitoring switches","keywords":"","body":"Get event number for all health monitoring switches IDOAllHealthSwitchStateModel Function Table : getHealthSwitchStateSupportV3 Sample Cmds.getAllHealthSwitchState().send { rs in if case .success(let obj) = rs { // success // obj is IDOAllHealthSwitchStateModel }else { // fail } } Kotlin Cmds.getAllHealthSwitchState().send { if (it.res != null) { // success // it.res is IDOAllHealthSwitchStateModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetGpsStatus.html":{"url":"doc/get/IDOGetGpsStatus.html","title":"Get GPS Status event number","keywords":"","body":"Get GPS Status event number IDOGpsStatusModel Function Table : getSupportUpdateGps Sample Cmds.getGpsStatus().send { rs in if case .success(let obj) = rs { // success // obj is IDOGpsStatusModel }else { // fail } } Kotlin Cmds.getGpsStatus().send { if (it.res != null) { // success // it.res is IDOGpsStatusModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetUnerasableMeunList.html":{"url":"doc/get/IDOGetUnerasableMeunList.html","title":"Get non-deletable menu list in firmware event number","keywords":"","body":"Get non-deletable menu list in firmware event number IDOUnerasableMeunListModel Function Table : getDeletableMenuListV2 Sample Cmds.getUnerasableMeunList().send { rs in if case .success(let obj) = rs { // success // obj is IDOUnerasableMeunListModel }else { // fail } } Kotlin Cmds.getUnerasableMeunList().send { if (it.res != null) { // success // it.res is IDOUnerasableMeunListModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetActivitySwitch.html":{"url":"doc/get/IDOGetActivitySwitch.html","title":"Get event number for activity switch","keywords":"","body":"Get event number for activity switch IDOActivitySwitchModel Function Table : getActivitySwitch Sample Cmds.getActivitySwitch().send { rs in if case .success(let obj) = rs { // success // obj is IDOActivitySwitchModel }else { // fail } } Kotlin Cmds.getActivitySwitch().send { if (it.res != null) { // success // it.res is IDOActivitySwitchModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetUnreadAppReminder.html":{"url":"doc/get/IDOGetUnreadAppReminder.html","title":"Get unread app reminder switch event number","keywords":"","body":"Get unread app reminder switch event number IDOCmdGetResponseModel Function Table : null Sample Cmds.getUnreadAppReminder().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdGetResponseModel }else { // fail } } Kotlin Cmds.getUnreadAppReminder().send { if (it.res != null) { // success // it.res is IDOCmdGetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetFlashBinInfo.html":{"url":"doc/get/IDOGetFlashBinInfo.html","title":"Get Font Library Information event number","keywords":"","body":"Get Font Library Information event number IDOFlashBinInfoModel Function Table : getFlashLog Sample Cmds.getFlashBinInfo().send { rs in if case .success(let obj) = rs { // success // obj is IDOFlashBinInfoModel }else { // fail } } Kotlin Cmds.getFlashBinInfo().send { if (it.res != null) { // success // it.res is IDOFlashBinInfoModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetBtNotice.html":{"url":"doc/get/IDOGetBtNotice.html","title":"Query BT pairing switch, connection, A2DP connection, HFP connection status (Only Supported on devices with BT Bluetooth) event number","keywords":"","body":"Query BT pairing switch, connection, A2DP connection, HFP connection status (Only Supported on devices with BT Bluetooth) event number IDOBtNoticeModel Function Table : getBleAndBtVersion Sample Cmds.getBtNotice().send { rs in if case .success(let obj) = rs { // success // obj is IDOBtNoticeModel }else { // fail } } Kotlin Cmds.getBtNotice().send { if (it.res != null) { // success // it.res is IDOBtNoticeModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetUpHandGesture.html":{"url":"doc/get/IDOGetUpHandGesture.html","title":"Get wrist up gesture data event number","keywords":"","body":"Get wrist up gesture data event number IDOUpHandGestureModel Function Table : getUpHandGestureEx Sample Cmds.getUpHandGesture().send { rs in if case .success(let obj) = rs { // success // obj is IDOUpHandGestureModel }else { // fail } } Kotlin Cmds.getUpHandGesture().send { if (it.res != null) { // success // it.res is IDOUpHandGestureModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetWatchDialId.html":{"url":"doc/get/IDOGetWatchDialId.html","title":"Get watch ID event number","keywords":"","body":"Get watch ID event number IDOWatchDialIdModel Function Table : null Sample Cmds.getWatchDialId().send { rs in if case .success(let obj) = rs { // success // obj is IDOWatchDialIdModel }else { // fail } } Kotlin Cmds.getWatchDialId().send { if (it.res != null) { // success // it.res is IDOWatchDialIdModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetNotDisturbStatus.html":{"url":"doc/get/IDOGetNotDisturbStatus.html","title":"Get Do Not Disturb mode status event number","keywords":"","body":"Get Do Not Disturb mode status event number IDONotDisturbStatusModel Function Table : getDoNotDisturbMain3 Sample Cmds.getNotDisturbStatus().send { rs in if case .success(let obj) = rs { // success // obj is IDONotDisturbStatusModel }else { // fail } } Kotlin Cmds.getNotDisturbStatus().send { if (it.res != null) { // success // it.res is IDONotDisturbStatusModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetMainSportGoal.html":{"url":"doc/get/IDOGetMainSportGoal.html","title":"Get Set Calorie/Distance/Mid-High Sport Time Goal event number","keywords":"","body":"Get Set Calorie/Distance/Mid-High Sport Time Goal event number IDOMainSportGoalModel Function Table : getSupportGetMainSportGoalV3 setCalorieGoal (Secondary function table)， exMain3DistanceGoal (Secondary function table)， setMidHighTimeGoal (Secondary function table)， getSupportSetGetTimeGoalTypeV2 (Secondary function table) Sample Cmds.getMainSportGoal().send { rs in if case .success(let obj) = rs { // success // obj is IDOMainSportGoalModel }else { // fail } } Kotlin Cmds.getMainSportGoal().send { if (it.res != null) { // success // it.res is IDOMainSportGoalModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetBpAlgVersion.html":{"url":"doc/get/IDOGetBpAlgVersion.html","title":"Get blood pressure algorithm version information event number","keywords":"","body":"Get blood pressure algorithm version information event number IDOBpAlgVersionModel Function Table : setSupportV Sample Cmds.getBpAlgVersion().send { rs in if case .success(let obj) = rs { // success // obj is IDOBpAlgVersionModel }else { // fail } } Kotlin Cmds.getBpAlgVersion().send { if (it.res != null) { // success // it.res is IDOBpAlgVersionModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetScreenBrightness.html":{"url":"doc/get/IDOGetScreenBrightness.html","title":"Get screen brightness event number","keywords":"","body":"Get screen brightness event number IDOScreenBrightnessModel Function Table : getScreenBrightnessMain9 Sample Cmds.getScreenBrightness().send { rs in if case .success(let obj) = rs { // success // obj is IDOScreenBrightnessModel }else { // fail } } Kotlin Cmds.getScreenBrightness().send { if (it.res != null) { // success // it.res is IDOScreenBrightnessModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetHotStartParam.html":{"url":"doc/get/IDOGetHotStartParam.html","title":"Get Hot Start Parameters event number","keywords":"","body":"Get Hot Start Parameters event number IDOHotStartParamModel Function Table : null Interface obsolete Sample Cmds.getHotStartParam().send { rs in if case .success(let obj) = rs { // success // obj is IDOHotStartParamModel }else { // fail } } Kotlin Cmds.getHotStartParam().send { if (it.res != null) { // success // it.res is IDOHotStartParamModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetSupportMaxSetItemsNum.html":{"url":"doc/get/IDOGetSupportMaxSetItemsNum.html","title":"Get maximum number of settings supported by firmware event number","keywords":"","body":"Get maximum number of settings supported by firmware event number IDOSupportMaxSetItemsNumModel Function Table : getSetMaxItemsNum Sample Cmds.getSupportMaxSetItemsNum().send { rs in if case .success(let obj) = rs { // success // obj is IDOSupportMaxSetItemsNumModel }else { // fail } } Kotlin Cmds.getSupportMaxSetItemsNum().send { if (it.res != null) { // success // it.res is IDOSupportMaxSetItemsNumModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetWalkRemind.html":{"url":"doc/get/IDOGetWalkRemind.html","title":"Get walk reminder event number","keywords":"","body":"Get walk reminder event number IDOWalkRemindModel Function Table : getWalkReminderV3 setWalkReminderAddNotify （Secondary function table） getSupportSetGetNoReminderOnWalkReminderV2（Secondary function table） Sample Cmds.getWalkRemind().send { rs in if case .success(let obj) = rs { // success // obj is IDOWalkRemindModel }else { // fail } } Kotlin Cmds.getWalkRemind().send { if (it.res != null) { // success // it.res is IDOWalkRemindModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetStepGoal.html":{"url":"doc/get/IDOGetStepGoal.html","title":"Get daily step goal event number","keywords":"","body":"Get daily step goal event number IDOStepGoalModel Function Table : getStepDataTypeV2 Sample Cmds.getStepGoal().send { rs in if case .success(let obj) = rs { // success // obj is IDOStepGoalModel }else { // fail } } Kotlin Cmds.getStepGoal().send { if (it.res != null) { // success // it.res is IDOStepGoalModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetDeviceName.html":{"url":"doc/get/IDOGetDeviceName.html","title":"Get device name event number","keywords":"","body":"Get device name event number String Function Table : null Interface obsolete Sample Cmds.getDeviceName().send { rs in if case .success(let obj) = rs { // success // obj is String }else { // fail } } Kotlin Cmds.getDeviceName().send { if (it.res != null) { // success // it.res is String }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetContactReviseTime.html":{"url":"doc/get/IDOGetContactReviseTime.html","title":"Get firmware local contact file modification time event number","keywords":"","body":"Get firmware local contact file modification time event number IDOContactReviseTimeModel Function Table : reminderGetAllContact Sample Cmds.getContactReviseTime().send { rs in if case .success(let obj) = rs { // success // obj is IDOContactReviseTimeModel }else { // fail } } Kotlin Cmds.getContactReviseTime().send { if (it.res != null) { // success // it.res is IDOContactReviseTimeModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetUpdateStatus.html":{"url":"doc/get/IDOGetUpdateStatus.html","title":"Get device update status event number","keywords":"","body":"Get device update status event number IDOUpdateStatusModel Function Table: getDeviceUpdateState Sample Cmds.getUpdateStatus().send { rs in if case .success(let obj) = rs { // success // obj is IDOUpdateStatusModel }else { // fail } } Kotlin Cmds.getUpdateStatus().send { if (it.res != null) { // success // it.res is IDOUpdateStatusModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-04 14:21:39 "},"doc/get/IDOGetStressVal.html":{"url":"doc/get/IDOGetStressVal.html","title":"Get stress value event number","keywords":"","body":"Get stress value event number IDOStressValModel Function Table: setSetStressCalibration Sample Cmds.getStressVal().send { rs in if case .success(let obj) = rs { // success // obj is IDOStressValModel }else { // fail } } Kotlin Cmds.getStressVal().send { if (it.res != null) { // success // it.res is IDOStressValModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetHeartRateMode.html":{"url":"doc/get/IDOGetHeartRateMode.html","title":"Get Heart Rate Monitoring Mode event number","keywords":"","body":"Get Heart Rate Monitoring Mode event number IDOHeartRateModeModel Function Table : getHeartRateModeV2 Sample Cmds.getHeartRateMode().send { rs in if case .success(let obj) = rs { // success // obj is IDOHeartRateModeModel }else { // fail } } Kotlin Cmds.getHeartRateMode().send { if (it.res != null) { // success // it.res is IDOHeartRateModeModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetBatteryInfo.html":{"url":"doc/get/IDOGetBatteryInfo.html","title":"Get battery information event number","keywords":"","body":"Get battery information event number IDOBatteryInfoModel Function Table : getBatteryInfo Sample Cmds.getBatteryInfo().send { rs in if case .success(let obj) = rs { // success // obj is IDOBatteryInfoModel }else { // fail } } Kotlin Cmds.getBatteryInfo().send { if (it.res != null) { // success // it.res is IDOBatteryInfoModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetDeviceLogState.html":{"url":"doc/get/IDOGetDeviceLogState.html","title":"Get device log state event number","keywords":"","body":"Get device log state event number IDODeviceLogStateModel Function Table : getDeviceLogState Sample Cmds.getDeviceLogState().send { rs in if case .success(let obj) = rs { // success // obj is IDODeviceLogStateModel }else { // fail } } Kotlin Cmds.getDeviceLogState().send { if (it.res != null) { // success // it.res is IDODeviceLogStateModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetDownloadLanguage.html":{"url":"doc/get/IDOGetDownloadLanguage.html","title":"Get Download Language Support","keywords":"","body":"Get Download Language Support IDODownloadLanguageModel Function Table: getDownloadLanguage Sample Cmds.getDownloadLanguage().send { rs in if case .success(let obj) = rs { // success // obj is IDODownloadLanguageModel }else { // fail } } Kotlin Cmds.getDownloadLanguage().send { if (it.res != null) { // success // it.res is IDODownloadLanguageModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-04 14:19:27 "},"doc/get/IDOGetMenuList.html":{"url":"doc/get/IDOGetMenuList.html","title":"Get Supported Menu List","keywords":"","body":"Get Supported Menu List IDOMenuListModel Function Table : getMenuList Sample Cmds.getMenuList().send { rs in if case .success(let obj) = rs { // success // obj is IDOMenuListModel }else { // fail } } Kotlin Cmds.getMenuList().send { if (it.res != null) { // success // it.res is IDOMenuListModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetNoticeStatus.html":{"url":"doc/get/IDOGetNoticeStatus.html","title":"Get notification center status event number","keywords":"","body":"Get notification center status event number IDOSetNoticeStatusModel Function Table : reminderAncs Sample Cmds.getNoticeStatus().send { rs in if case .success(let obj) = rs { // success // obj is IDOSetNoticeStatusModel }else { // fail } } Kotlin Cmds.getNoticeStatus().send { if (it.res != null) { // success // it.res is IDOSetNoticeStatusModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 18:06:59 "},"doc/get/IDOGetAlarm.html":{"url":"doc/get/IDOGetAlarm.html","title":"Getting Alarms for V3APP Devices","keywords":"","body":"Getting Alarms for V3APP Devices IDOAlarmModel Function Table：syncV3SyncAlarm Sample Cmds.getAlarm().send { rs in if case .success(let obj) = rs { // success // obj is IDOAlarmModel }else { // fail } } Kotlin Cmds.getAlarm().send { if (it.res != null) { // success // it.res is IDOAlarmModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/get/IDOGetHabitInfo.html":{"url":"doc/get/IDOGetHabitInfo.html","title":"Get User Habit Information in V3","keywords":"","body":"Get User Habit Information in V3 IDOHabitInfoModel Function Table：getSupportSedentaryTensileHabitInfo Sample Cmds.getHabitInfo().send { rs in if case .success(let obj) = rs { // success // obj is IDOHabitInfoModel }else { // fail } } Kotlin Cmds.getHabitInfo().send { if (it.res != null) { // success // it.res is IDOHabitInfoModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/get/IDOGetBleMusicInfo.html":{"url":"doc/get/IDOGetBleMusicInfo.html","title":"Get Firmware Song Names and Folders","keywords":"","body":"Get Firmware Song Names and Folders IDOMusicInfoModel Function Table: getSupportV3BleMusic getSupportGetBleMusicInfoVerV3 (Secondary function table) Sample Cmds.getBleMusicInfo().send { rs in if case .success(let obj) = rs { // success // obj is IDOMusicInfoModel }else { // fail } } Kotlin Cmds.getBleMusicInfo().send { if (it.res != null) { // success // it.res is IDOMusicInfoModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/get/IDOGetWatchDialInfo.html":{"url":"doc/get/IDOGetWatchDialInfo.html","title":"Get Screen Information","keywords":"","body":"Get Screen Information IDOWatchDialInfoModel Function Table：null Sample Cmds.getWatchDialInfo().send { rs in if case .success(let obj) = rs { // success // obj is IDOWatchDialInfoModel }else { // fail } } Kotlin Cmds.getWatchDialInfo().send { if (it.res != null) { // success // it.res is IDOWatchDialInfoModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/get/IDOGetWatchListV3.html":{"url":"doc/get/IDOGetWatchListV3.html","title":"Getting watch face list for V3 (New)","keywords":"","body":"Getting watch face list for V3 (New) IDOWatchListModel Function list: getNewWatchList == true Use this interface, otherwise use Get watch face list v2 Sample Cmds.getWatchListV3().send { rs in if case .success(let obj) = rs { // success // obj is IDOWatchListModel }else { // fail } } Kotlin Cmds.getWatchListV3().send { if (it.res != null) { // success // it.res is IDOWatchListModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-03 17:20:32 "},"doc/get/IDOGetWatchListV2.html":{"url":"doc/get/IDOGetWatchListV2.html","title":"Get Watch Face List in V2","keywords":"","body":"Get Watch Face List in V2 IDOWatchListV2Model Function list: getNewWatchList == false Use this interface, otherwise use Get watch face list v3 Sample Cmds.getWatchListV2().send { rs in if case .success(let obj) = rs { // success // obj is IDOWatchListV2Model }else { // fail } } Kotlin Cmds.getWatchListV2().send { if (it.res != null) { // success // it.res is IDOWatchListV2Model }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-03 17:21:28 "},"doc/get/IDOGetLanguageLibrary.html":{"url":"doc/get/IDOGetLanguageLibrary.html","title":"Get Language Library List","keywords":"","body":"Get Language Library List IDOLanguageLibraryModel Function Table: getLangLibraryV Sample Cmds.getLanguageLibrary().send { rs in if case .success(let obj) = rs { // success // obj is IDOLanguageLibraryModel }else { // fail } } Kotlin Cmds.getLanguageLibrary().send { if (it.res != null) { // success // it.res is IDOLanguageLibraryModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-04 14:20:37 "},"doc/get/IDOGetBleBeep.html":{"url":"doc/get/IDOGetBleBeep.html","title":"Get firmware local beep file infor","keywords":"","body":"Getting firmware local beep file information for V3 IDOBleBeepModel Function Table: getSupportGetBleBeepV3 Sample Cmds.getBleBeep().send { rs in if case .success(let obj) = rs { // success // obj is IDOBleBeepModel }else { // fail } } Kotlin Cmds.getBleBeep().send { if (it.res != null) { // success // it.res is IDOBleBeepModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-04 14:17:37 "},"doc/get/IDOGetDefaultSportType.html":{"url":"doc/get/IDOGetDefaultSportType.html","title":"Get default sport type","keywords":"","body":"Get the default motion type IDODefaultSportTypeModel Menu:setV3GetSportSortField Example Swift Cmds.getDefaultSportType().send { rs in if case .success(let obj) = rs { // success // obj is IDODefaultSportTypeModel }else { // fail } } Kotlin Cmds.getDefaultSportType().send { if (it.res != null) { // success // it.res is IDODefaultSportTypeModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:40:51 "},"doc/get/IDOGetSportTypeV3.html":{"url":"doc/get/IDOGetSportTypeV3.html","title":"获取运动默认的类型 V3","keywords":"","body":"获取运动默认的类型 V3 IDODefaultSportTypeModel 功能表:setV3GetSportSortField 示例 Swift Cmds.getSportTypeV3().send { rs in if case .success(let obj) = rs { // 成功 // obj is IDODefaultSportTypeModel }else { // 失败 } } Kotlin Cmds.getSportTypeV3().send { if (it.res != null) { // 成功 // it.res is IDODefaultSportTypeModel }else { // 失败 } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-26 14:41:13 "},"doc/get/IDOGetBtConnectPhoneModel.html":{"url":"doc/get/IDOGetBtConnectPhoneModel.html","title":"Get bt connect phone mode","keywords":"","body":"Get BT connected mobile phone model String Menu: getSupportGetV3DeviceBtConnectPhoneModel Example Swift Cmds.getBtConnectPhoneModel().send { rs in if case .success(let obj) = rs { // success // obj is String }else { // fail } } Kotlin Cmds.getBtConnectPhoneModel().send { if (it.res != null) { // success // it.res is String }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:40:22 "},"doc/set/IDOCommandIndex.html":{"url":"doc/set/IDOCommandIndex.html","title":"Set Command","keywords":"","body":"Set instructions Set phone volume for device event number - setBleVoice Control GPS event number - setGpsControl Set Smart Heart Rate Mode Event - setHeartRateModeSmart Set Stress Calibration Event Code - setStressCalibration Set Hand Washing Reminder Event - setHandWashingReminder Set exercise goal event - setSportGoal Set weather data event number - setWeatherData Unread message reminder switch event number - setUnreadAppReminder Notification app status setting event - setNotificationStatus Scientific sleep switch setting event - setScientificSleepSwitch Blood pressure calibration event number - setBpCalibration Set Lost Find Event - setLostFind Set watch face event number - setWatchDial Set weather switch event number - setWeatherSwitch Set Unit event number - setUnit Set Find Phone - setFindPhone Stop Find Phone - setOverFindPhone Set the one-touch calling event number - setOnekeySOS Set sport mode select event number - setSportModeSelect Set Sport Mode Sorting - setSportModeSort Set Long Sit Event - setLongSit Set Heart Rate Mode Event - setHeartRateMode Set body power switch event number - setBodyPowerTurn Respiration rate switch setting event - setRespiRateTurn Set Environmental Noise Volume On/Off and Threshold Event - setV3Noise Set sunrise and sunset time event number - setWeatherSunTime Set shortcut - setShortcut Set Notification Center Event - setNoticeStatus Set Night-time Temperature Switch Event Code - setTemperatureSwitch Set sleep period event - setSleepPeriod Raise-to-wake gesture event number - setUpHandGesture Set Taking Medicine Reminder Event Code - setTakingMedicineReminder Set SpO2 switch event - setSpo2Switch Set weather city name event number - setWeatherCityName Getting Alarms for V3APP Devices - setAlarm Fitness Guidance Event - setFitnessGuidance Display mode event number - setDisplayMode Blood pressure measurement event number - setBpMeasurement Set Music On/Off Event - setMusicOnOff App issued running plan (exercise plan) event number - setSendRunPlan Send the v3 weather protocol event number under v3 - setWeatherV3 Music control event number - musicControl Operation for songs or folders event - setMusicOperate Notification message reminder event number - noticeMessageV3 Setting Notification Status for a Single App - setNoticeMessageState V3 dynamic notification message event number - setNoticeAppName v3 set v3 world time - setWorldTimeV3 Schedule Reminder - setSchedulerReminder Blood Pressure Calibration Control - setBpCalControlV3 Set Watch Face - setWatchFaceData Synchronization Protocol Bluetooth Call Common Contacts - setSyncContact Set and Query Sports Sub-item Data Sorting - setSportParamSort Set and Query 100 Sports Sorting - setSport100Sort Setting and Query Sorting of Main UI Controls - setMainUISortV3 Menstrual historical data delivery event number - setHistoricalMenstruation V3 Setting the Name of a Sports City event number - setLongCityNameV3 Set Heart Rate Mode V3 - setHeartMode V3 voice reply text event number - setVoiceReplyText Set watch dial sort event - setWatchDialSort Set multiple walk reminder times event number - setWalkRemindTimes Set wallpaper dial list event number - setWallpaperDialReply Set Time - setDateTime Set user information - setUserInfo Reboot the device - reboot Factory reset - factoryReset Control search device start - findDeviceStart Control finding device ends - findDeviceStop Start taking photos (app -> ble) - photoStart End photo taking (app -> ble) - photoStop Set up left and right hands - setHand Set screen brightness - setScreenBrightness Enter upgrade mode - otaStart Set heart rate zone - setHeartRateInterval Set calorie and distance goals (set daily three rings) - setCalorieDistanceGoal Set reminders to move around - setWalkRemind Set menstrual period - setMenstruation Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-24 15:49:37 "},"doc/set/IDOSetBleVoice.html":{"url":"doc/set/IDOSetBleVoice.html","title":"Set phone volume for device event number","keywords":"","body":"Set phone volume for device event number IDOBleVoiceParamModel IDOCmdSetResponseModel Function Table：setSetPhoneVoice Sample let param = IDOBleVoiceParamModel(...) Cmds.setBleVoice(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOBleVoiceParamModel(...) Cmds.setBleVoice(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 17:03:56 "},"doc/set/IDOSetGpsControl.html":{"url":"doc/set/IDOSetGpsControl.html","title":"Control GPS event number","keywords":"","body":"Control GPS event number IDOGpsControlParamModel IDOGpsControlModel Function Table：null Sample let param = IDOGpsControlParamModel(...) Cmds.setGpsControl(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOGpsControlModel }else { // fail } } Kotlin val param = IDOGpsControlParamModel(...) Cmds.setGpsControl(param).send { if (it.res != null) { // success // it.res is IDOGpsControlModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetHeartRateModeSmart.html":{"url":"doc/set/IDOSetHeartRateModeSmart.html","title":"Set Smart Heart Rate Mode Event","keywords":"","body":"Set Smart Heart Rate Mode Event IDOHeartRateModeSmartParamModel IDOCmdSetResponseModel Function Table：setSmartHeartRate Sample let param = IDOHeartRateModeSmartParamModel(...) Cmds.setHeartRateModeSmart(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOHeartRateModeSmartParamModel(...) Cmds.setHeartRateModeSmart(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetStressCalibration.html":{"url":"doc/set/IDOSetStressCalibration.html","title":"Set Stress Calibration Event Code","keywords":"","body":"Set Stress Calibration Event Code IDOStressCalibrationParamModel IDOStressCalibrationModel Function Table：setSetStressCalibration Sample let param = IDOStressCalibrationParamModel(...) Cmds.setStressCalibration(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOStressCalibrationModel }else { // fail } } Kotlin val param = IDOStressCalibrationParamModel(...) Cmds.setStressCalibration(param).send { if (it.res != null) { // success // it.res is IDOStressCalibrationModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetHandWashingReminder.html":{"url":"doc/set/IDOSetHandWashingReminder.html","title":"Set Hand Washing Reminder Event","keywords":"","body":"Set Hand Washing Reminder Event IDOHandWashingReminderParamModel IDOCmdSetResponseModel Function Table：setHandWashReminder Sample let param = IDOHandWashingReminderParamModel(...) Cmds.setHandWashingReminder(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOHandWashingReminderParamModel(...) Cmds.setHandWashingReminder(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetSportGoal.html":{"url":"doc/set/IDOSetSportGoal.html","title":"Set exercise goal event","keywords":"","body":"Set exercise goal event IDOSportGoalParamModel IDOCmdSetResponseModel Function Table： getSupportWalkGoalSteps (Secondary function table) getStepDataTypeV2 (Secondary function table) Sample let param = IDOSportGoalParamModel(...) Cmds.setSportGoal(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOSportGoalParamModel(...) Cmds.setSportGoal(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetWeatherData.html":{"url":"doc/set/IDOSetWeatherData.html","title":"Set weather data event number","keywords":"","body":"Set weather data event number IDOWeatherDataParamModel IDOCmdSetResponseModel Function Table：supportSetWeatherDataV2 Sample let param = IDOWeatherDataParamModel(...) Cmds.setWeatherData(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOWeatherDataParamModel(...) Cmds.setWeatherData(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetUnreadAppReminder.html":{"url":"doc/set/IDOSetUnreadAppReminder.html","title":"Unread message reminder switch event number","keywords":"","body":"Unread message reminder switch event number IDOCmdSetResponseModel Function Table：setSetUnreadAppReminder Sample Cmds.setUnreadAppReminder().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setUnreadAppReminder().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetNotificationStatus.html":{"url":"doc/set/IDOSetNotificationStatus.html","title":"Notification app status setting event","keywords":"","body":"Notification app status setting event IDONotificationStatusParamModel IDOCmdSetResponseModel Sample let param = IDONotificationStatusParamModel(...) Cmds.setNotificationStatus(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDONotificationStatusParamModel(...) Cmds.setNotificationStatus(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 11:43:19 "},"doc/set/IDOSetScientificSleepSwitch.html":{"url":"doc/set/IDOSetScientificSleepSwitch.html","title":"Scientific sleep switch setting event","keywords":"","body":"Scientific sleep switch setting event IDOScientificSleepSwitchParamModel IDOCmdSetResponseModel Function Table：setScientificSleepSwitch Sample let param = IDOScientificSleepSwitchParamModel(...) Cmds.setScientificSleepSwitch(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOScientificSleepSwitchParamModel(...) Cmds.setScientificSleepSwitch(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetBpCalibration.html":{"url":"doc/set/IDOSetBpCalibration.html","title":"Blood pressure calibration event number","keywords":"","body":"Blood pressure calibration event number IDOBpCalibrationParamModel IDOBpCalibrationModel Function Table：getSupportBpSetOrMeasurementV2 Sample let param = IDOBpCalibrationParamModel(...) Cmds.setBpCalibration(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOBpCalibrationModel }else { // fail } } Kotlin val param = IDOBpCalibrationParamModel(...) Cmds.setBpCalibration(param).send { if (it.res != null) { // success // it.res is IDOBpCalibrationModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetLostFind.html":{"url":"doc/set/IDOSetLostFind.html","title":"Set Lost Find Event","keywords":"","body":"Set Lost Find Event IDOLostFindParamModel IDOCmdSetResponseModel Function Table：supportSetAntilost Sample let param = IDOLostFindParamModel(...) Cmds.setLostFind(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOLostFindParamModel(...) Cmds.setLostFind(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetWatchDial.html":{"url":"doc/set/IDOSetWatchDial.html","title":"Set watch face event number","keywords":"","body":"Set watch face event number IDOWatchDialParamModel IDOCmdSetResponseModel Function Table：WatchDial Sample let param = IDOWatchDialParamModel(...) Cmds.setWatchDial(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOWatchDialParamModel(...) Cmds.setWatchDial(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetWeatherSwitch.html":{"url":"doc/set/IDOSetWeatherSwitch.html","title":"Set weather switch event number","keywords":"","body":"Set weather switch event number IDOCmdSetResponseModel Function Table：setSetV3Weather Sample Cmds.setWeatherSwitch().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setWeatherSwitch().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-22 11:12:41 "},"doc/set/IDOSetUnit.html":{"url":"doc/set/IDOSetUnit.html","title":"Set Unit event number","keywords":"","body":"Set Unit event number IDOUnitParamModel IDOCmdSetResponseModel Function Table： setSupportFahrenheit (Secondary function table) setSupportCalorieUnitt (Secondary function table) setSupportSwimPoolUnitt (Secondary function table) setSupportCyclingUnitt (Secondary function table) setSupportWalkRunUnitt (Secondary function table) Sample let param = IDOUnitParamModel(...) Cmds.setUnit(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOUnitParamModel(...) Cmds.setUnit(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetFindPhone.html":{"url":"doc/set/IDOSetFindPhone.html","title":"Set Find Phone","keywords":"","body":"Set Find Phone IDOCmdSetResponseModel Function Table：getFindPhone Sample Cmds.setFindPhone().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setFindPhone().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetOverFindPhone.html":{"url":"doc/set/IDOSetOverFindPhone.html","title":"Stop Find Phone","keywords":"","body":"Stop Find Phone IDOCmdSetResponseModel Function Table：setOverFindPhone Sample Cmds.setOverFindPhone().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setOverFindPhone().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetOnekeySOS.html":{"url":"doc/set/IDOSetOnekeySOS.html","title":"Set the one-touch calling event number","keywords":"","body":"Set the one-touch calling event number IDOCmdSetResponseModel Function Table：supportSetOnetouchCalling Sample Cmds.setOnekeySOS().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setOnekeySOS().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetSportModeSelect.html":{"url":"doc/set/IDOSetSportModeSelect.html","title":"Set sport mode select event number","keywords":"","body":"Set sport mode select event number IDOSportModeSelectParamModel IDOCmdSetResponseModel Function Table：syncTimeLine Sample let param = IDOSportModeSelectParamModel(...) Cmds.setSportModeSelect(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOSportModeSelectParamModel(...) Cmds.setSportModeSelect(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetSportModeSort.html":{"url":"doc/set/IDOSetSportModeSort.html","title":"Set Sport Mode Sorting","keywords":"","body":"Set Sport Mode Sorting IDOCmdSetResponseModel Function Table：setSportModeSort Sample Cmds.setSportModeSort().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setSportModeSort().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetLongSit.html":{"url":"doc/set/IDOSetLongSit.html","title":"Set Long Sit Event","keywords":"","body":"Set Long Sit Event IDOLongSitParamModel IDOCmdSetResponseModel Function Table：setSedentariness Sample let param = IDOLongSitParamModel(...) Cmds.setLongSit(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOLongSitParamModel(...) Cmds.setLongSit(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetHeartRateMode.html":{"url":"doc/set/IDOSetHeartRateMode.html","title":"Set Heart Rate Mode Event","keywords":"","body":"Set Heart Rate Mode Event IDOHeartRateModeParamModel IDOHeartRateModeModel Function Table：setHeartRateMode exTableMain7HeartRateInterval (Secondary function table) Sample let param = IDOHeartRateModeParamModel(...) Cmds.setHeartRateMode(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOHeartRateModeModel }else { // fail } } Kotlin val param = IDOHeartRateModeParamModel(...) Cmds.setHeartRateMode(param).send { if (it.res != null) { // success // it.res is IDOHeartRateModeModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-19 16:13:04 "},"doc/set/IDOSetBodyPowerTurn.html":{"url":"doc/set/IDOSetBodyPowerTurn.html","title":"Set body power switch event number","keywords":"","body":"Set body power switch event number IDOCmdSetResponseModel Function Table：syncV3BodyPower Sample Cmds.setBodyPowerTurn().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setBodyPowerTurn().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 11:08:32 "},"doc/set/IDOSetRRespiRateTurn.html":{"url":"doc/set/IDOSetRRespiRateTurn.html","title":"Respiration rate switch setting event","keywords":"","body":"Set the breathing rate switch IDOCmdSetResponseModel Example Swift Cmds.setRRespiRateTurn().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setRRespiRateTurn().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:53:20 "},"doc/set/IDOSetV3Noise.html":{"url":"doc/set/IDOSetV3Noise.html","title":"Set Environmental Noise Volume On/Off and Threshold Event","keywords":"","body":"Set Environmental Noise Volume On/Off and Threshold Event IDOV3NoiseParamModel IDOCmdSetResponseModel Function Table：syncV3Noise Sample let param = IDOV3NoiseParamModel(...) Cmds.setV3Noise(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOV3NoiseParamModel(...) Cmds.setV3Noise(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 11:11:57 "},"doc/set/IDOSetWeatherSunTime.html":{"url":"doc/set/IDOSetWeatherSunTime.html","title":"Set sunrise and sunset time event number","keywords":"","body":"Set sunrise and sunset time event number IDOWeatherSunTimeParamModel IDOCmdSetResponseModel Function Table：setWeatherSunTime Sample let param = IDOWeatherSunTimeParamModel(...) Cmds.setWeatherSunTime(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOWeatherSunTimeParamModel(...) Cmds.setWeatherSunTime(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 11:13:49 "},"doc/set/IDOSetShortcut.html":{"url":"doc/set/IDOSetShortcut.html","title":"Set shortcut","keywords":"","body":"Set shortcut IDOShortcutParamModel IDOCmdSetResponseModel Sample let param = IDOShortcutParamModel(...) Cmds.setShortcut(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOShortcutParamModel(...) Cmds.setShortcut(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 11:43:19 "},"doc/set/IDOSetNoticeStatus.html":{"url":"doc/set/IDOSetNoticeStatus.html","title":"Set Notification Center Event","keywords":"","body":"Set Notification Center Event IDOSetNoticeStatusModel IDONotificationCenterModel Function Table：reminderAncs Sample let param = IDOSetNoticeStatusModel(...) Cmds.setNoticeStatus(param).send { rs in if case .success(let obj) = rs { // success // obj is IDONotificationCenterModel }else { // fail } } Kotlin val param = IDOSetNoticeStatusModel(...) Cmds.setNoticeStatus(param).send { if (it.res != null) { // success // it.res is IDONotificationCenterModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 11:17:11 "},"doc/set/IDOSetTemperatureSwitch.html":{"url":"doc/set/IDOSetTemperatureSwitch.html","title":"Set Night-time Temperature Switch Event Code","keywords":"","body":"Set Night-time Temperature Switch Event Code IDOTemperatureSwitchParamModel IDOCmdSetResponseModel Function Table：setTemperatureSwitchSupport Sample let param = IDOTemperatureSwitchParamModel(...) Cmds.setTemperatureSwitch(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOTemperatureSwitchParamModel(...) Cmds.setTemperatureSwitch(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:12:26 "},"doc/set/IDOSetSleepPeriod.html":{"url":"doc/set/IDOSetSleepPeriod.html","title":"Set sleep period event","keywords":"","body":"Set sleep period event IDOSleepPeriodParamModel IDOCmdSetResponseModel Function Table： Sample let param = IDOSleepPeriodParamModel(...) Cmds.setSleepPeriod(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOSleepPeriodParamModel(...) Cmds.setSleepPeriod(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:13:05 "},"doc/set/IDOSetUpHandGesture.html":{"url":"doc/set/IDOSetUpHandGesture.html","title":"Raise-to-wake gesture event number","keywords":"","body":"Raise-to-wake gesture event number IDOUpHandGestureParamModel IDOCmdSetResponseModel Function Table：getUpHandGesture Sample let param = IDOUpHandGestureParamModel(...) Cmds.setUpHandGesture(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOUpHandGestureParamModel(...) Cmds.setUpHandGesture(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:13:41 "},"doc/set/IDOSetTakingMedicineReminder.html":{"url":"doc/set/IDOSetTakingMedicineReminder.html","title":"Set Taking Medicine Reminder Event Code","keywords":"","body":"Set Taking Medicine Reminder Event Code IDOTakingMedicineReminderParamModel IDOCmdSetResponseModel Sample let param = IDOTakingMedicineReminderParamModel(...) Cmds.setTakingMedicineReminder(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOTakingMedicineReminderParamModel(...) Cmds.setTakingMedicineReminder(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 11:43:19 "},"doc/set/IDOSetSpo2Switch.html":{"url":"doc/set/IDOSetSpo2Switch.html","title":"Set SpO2 switch event","keywords":"","body":"Set SpO2 switch event IDOSpo2SwitchParamModel IDOCmdSetResponseModel Function Table：setSpo2Data Sample let param = IDOSpo2SwitchParamModel(...) Cmds.setSpo2Switch(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOSpo2SwitchParamModel(...) Cmds.setSpo2Switch(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:14:46 "},"doc/set/IDOSetWeatherCityName.html":{"url":"doc/set/IDOSetWeatherCityName.html","title":"Set weather city name event number","keywords":"","body":"Set weather city name event number IDOCmdSetResponseModel Function Table：setWeatherCity Sample Cmds.setWeatherCityName().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setWeatherCityName().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:16:51 "},"doc/set/IDOSetAlarm.html":{"url":"doc/set/IDOSetAlarm.html","title":"Getting Alarms for V3APP Devices","keywords":"","body":"Getting Alarms for V3APP Devices IDOAlarmModel IDOCmdSetResponseModel Function Table：syncV3SyncAlarm Sample let param = IDOAlarmModel(...) Cmds.setAlarm(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOAlarmModel(...) Cmds.setAlarm(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:18:44 "},"doc/set/IDOSetFitnessGuidance.html":{"url":"doc/set/IDOSetFitnessGuidance.html","title":"Fitness Guidance Event","keywords":"","body":"Fitness Guidance Event IDOFitnessGuidanceParamModel IDOCmdSetResponseModel Function Table：setSetFitnessGuidance Sample let param = IDOFitnessGuidanceParamModel(...) Cmds.setFitnessGuidance(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOFitnessGuidanceParamModel(...) Cmds.setFitnessGuidance(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:20:20 "},"doc/set/IDOSetDisplayMode.html":{"url":"doc/set/IDOSetDisplayMode.html","title":"Display mode event number","keywords":"","body":"Display mode event number IDODisplayModeParamModel IDOCmdSetResponseModel Sample let param = IDODisplayModeParamModel(...) Cmds.setDisplayMode(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDODisplayModeParamModel(...) Cmds.setDisplayMode(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 11:43:19 "},"doc/set/IDOSetBpMeasurement.html":{"url":"doc/set/IDOSetBpMeasurement.html","title":"Blood pressure measurement event number","keywords":"","body":"Blood pressure measurement event number IDOBpMeasurementParamModel IDOBpMeasurementModel Function Table：getSupportBpSetOrMeasurementV2 Sample let param = IDOBpMeasurementParamModel(...) Cmds.setBpMeasurement(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOBpMeasurementModel }else { // fail } } Kotlin val param = IDOBpMeasurementParamModel(...) Cmds.setBpMeasurement(param).send { if (it.res != null) { // success // it.res is IDOBpMeasurementModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:22:05 "},"doc/set/IDOSetMusicOnOff.html":{"url":"doc/set/IDOSetMusicOnOff.html","title":"Set Music On/Off Event","keywords":"","body":"Set Music On/Off Event IDOMusicOnOffParamModel IDOCmdSetResponseModel Function Table：setBleControlMusic Sample let param = IDOMusicOnOffParamModel(...) Cmds.setMusicOnOff(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOMusicOnOffParamModel(...) Cmds.setMusicOnOff(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:22:53 "},"doc/set/IDOSetSendRunPlan.html":{"url":"doc/set/IDOSetSendRunPlan.html","title":"App issued running plan (exercise plan) event number","keywords":"","body":"App issued running plan (exercise plan) event number IDORunPlanParamModel IDOSendRunPlanModel Function Table：setSupportSportPlan Sample let param = IDORunPlanParamModel(...) Cmds.setSendRunPlan(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOSendRunPlanModel }else { // fail } } Kotlin val param = IDORunPlanParamModel(...) Cmds.setSendRunPlan(param).send { if (it.res != null) { // success // it.res is IDOSendRunPlanModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:24:27 "},"doc/set/IDOSetWeatherV3.html":{"url":"doc/set/IDOSetWeatherV3.html","title":"Send the v3 weather protocol event number under v3","keywords":"","body":"Send the v3 weather protocol event number under v3 IDOWeatherV3ParamModel IDOCmdSetResponseModel Function Table：setSetV3Weather Sample let param = IDOWeatherV3ParamModel(...) Cmds.setWeatherV3(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOWeatherV3ParamModel(...) Cmds.setWeatherV3(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:25:11 "},"doc/set/IDOMusicControl.html":{"url":"doc/set/IDOMusicControl.html","title":"Music control event number","keywords":"","body":"Music control event number IDOMusicControlParamModel IDOCmdSetResponseModel Function Table：setBleControlMusic Sample let param = IDOMusicControlParamModel(...) Cmds.musicControl(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOMusicControlParamModel(...) Cmds.musicControl(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:26:08 "},"doc/set/IDOSetMusicOperate.html":{"url":"doc/set/IDOSetMusicOperate.html","title":"Operation for songs or folders event","keywords":"","body":"Operation for songs or folders event IDOMusicOpearteParamModel IDOMusicOperateModel Sample let param = IDOMusicOpearteParamModel(...) Cmds.setMusicOperate(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOMusicOperateModel }else { // fail } } Kotlin val param = IDOMusicOpearteParamModel(...) Cmds.setMusicOperate(param).send { if (it.res != null) { // success // it.res is IDOMusicOperateModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 11:43:19 "},"doc/set/IDONoticeMessageV3.html":{"url":"doc/set/IDONoticeMessageV3.html","title":"Notification message reminder event number","keywords":"","body":"Notification message reminder event number IDONoticeMessageParamModel IDOCmdSetResponseModel Function Table：getNotifyMsgV3 Sample let param = IDONoticeMessageParamModel(...) Cmds.noticeMessageV3(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDONoticeMessageParamModel(...) Cmds.noticeMessageV3(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 14:29:05 "},"doc/set/IDOSetNoticeMessageState.html":{"url":"doc/set/IDOSetNoticeMessageState.html","title":"Setting Notification Status for a Single App","keywords":"","body":"Setting Notification Status for a Single App IDONoticeMessageStateParamModel IDONoticeMessageStateModel Sample let param = IDONoticeMessageStateParamModel(...) Cmds.setNoticeMessageState(param).send { rs in if case .success(let obj) = rs { // success // obj is IDONoticeMessageStateModel }else { // fail } } Kotlin val param = IDONoticeMessageStateParamModel(...) Cmds.setNoticeMessageState(param).send { if (it.res != null) { // success // it.res is IDONoticeMessageStateModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 11:43:19 "},"doc/set/IDOSetNoticeAppName.html":{"url":"doc/set/IDOSetNoticeAppName.html","title":"V3 dynamic notification message event number","keywords":"","body":"V3 dynamic notification message event number IDONoticeMesaageParamModel IDOCmdSetResponseModel Sample let param = IDONoticeMesaageParamModel(...) Cmds.setNoticeAppName(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDONoticeMesaageParamModel(...) Cmds.setNoticeAppName(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 11:43:19 "},"doc/set/IDOSetWorldTimeV3.html":{"url":"doc/set/IDOSetWorldTimeV3.html","title":"v3 set v3 world time","keywords":"","body":"v3 set v3 world time IDOCmdSetResponseModel Function Table：setSetV3WorldTime Sample Cmds.setWorldTimeV3().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setWorldTimeV3().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:18:07 "},"doc/set/IDOSetSchedulerReminder.html":{"url":"doc/set/IDOSetSchedulerReminder.html","title":"Schedule Reminder","keywords":"","body":"Schedule Reminder IDOSchedulerReminderParamModel IDOSchedulerReminderModel Function Table：setScheduleReminder Sample let param = IDOSchedulerReminderParamModel(...) Cmds.setSchedulerReminder(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOSchedulerReminderModel }else { // fail } } Kotlin val param = IDOSchedulerReminderParamModel(...) Cmds.setSchedulerReminder(param).send { if (it.res != null) { // success // it.res is IDOSchedulerReminderModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:19:00 "},"doc/set/IDOSetBpCalControlV3.html":{"url":"doc/set/IDOSetBpCalControlV3.html","title":"Blood Pressure Calibration Control","keywords":"","body":"Blood Pressure Calibration Control IDOBpCalControlModel Function Table：setSupportV3Bp Sample Cmds.setBpCalControlV3().send { rs in if case .success(let obj) = rs { // success // obj is IDOBpCalControlModel }else { // fail } } Kotlin Cmds.setBpCalControlV3().send { if (it.res != null) { // success // it.res is IDOBpCalControlModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:25:04 "},"doc/set/IDOSetWatchFaceData.html":{"url":"doc/set/IDOSetWatchFaceData.html","title":"Set Watch Face","keywords":"","body":"Set Watch Face IDOWatchFaceParamModel IDOWatchFaceModel Function Table：getMultiDial Sample let param = IDOWatchFaceParamModel(...) Cmds.setWatchFaceData(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOWatchFaceModel }else { // fail } } Kotlin val param = IDOWatchFaceParamModel(...) Cmds.setWatchFaceData(param).send { if (it.res != null) { // success // it.res is IDOWatchFaceModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:27:12 "},"doc/set/IDOSetSyncContact.html":{"url":"doc/set/IDOSetSyncContact.html","title":"Synchronization Protocol Bluetooth Call Common Contacts","keywords":"","body":"Synchronization Protocol Bluetooth Call Common Contacts IDOSyncContactParamModel IDOSyncContactModel Function Table：setSyncContact、reminderCallContact Sample let param = IDOSyncContactParamModel(...) Cmds.setSyncContact(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOSyncContactModel }else { // fail } } Kotlin val param = IDOSyncContactParamModel(...) Cmds.setSyncContact(param).send { if (it.res != null) { // success // it.res is IDOSyncContactModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:29:47 "},"doc/set/IDOSetSportParamSort.html":{"url":"doc/set/IDOSetSportParamSort.html","title":"Set and Query Sports Sub-item Data Sorting","keywords":"","body":"Set and Query Sports Sub-item Data Sorting IDOSportSortParamModel IDOSportSortModel Function Table：setSet20SportParamSort Sample let param = IDOSportSortParamModel(...) Cmds.setSportParamSort(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOSportSortModel }else { // fail } } Kotlin val param = IDOSportSortParamModel(...) Cmds.setSportParamSort(param).send { if (it.res != null) { // success // it.res is IDOSportSortModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:33:46 "},"doc/set/IDOSetSport100Sort.html":{"url":"doc/set/IDOSetSport100Sort.html","title":"Set and Query 100 Sports Sorting","keywords":"","body":"Set and Query 100 Sports Sorting IDOSport100SortParamModel IDOSport100SortModel Function Table：getSportsTypeV3 Sample let param = IDOSport100SortParamModel(...) Cmds.setSport100Sort(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOSport100SortModel }else { // fail } } Kotlin val param = IDOSport100SortParamModel(...) Cmds.setSport100Sort(param).send { if (it.res != null) { // success // it.res is IDOSport100SortModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:36:20 "},"doc/set/IDOSetMainUISortV3.html":{"url":"doc/set/IDOSetMainUISortV3.html","title":"Setting and Query Sorting of Main UI Controls","keywords":"","body":"Setting and Query Sorting of Main UI Controls IDOMainUISortParamModel IDOMainUISortModel Function Table：setSetMainUiSort Sample let param = IDOMainUISortParamModel(...) Cmds.setMainUISortV3(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOMainUISortModel }else { // fail } } Kotlin val param = IDOMainUISortParamModel(...) Cmds.setMainUISortV3(param).send { if (it.res != null) { // success // it.res is IDOMainUISortModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:37:46 "},"doc/set/IDOSetHistoricalMenstruation.html":{"url":"doc/set/IDOSetHistoricalMenstruation.html","title":"Menstrual historical data delivery event number","keywords":"","body":"Menstrual historical data delivery event number IDOHistoricalMenstruationParamModel IDOCmdSetResponseModel Function Table：setHistoryMenstrual Sample let param = IDOHistoricalMenstruationParamModel(...) Cmds.setHistoricalMenstruation(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOHistoricalMenstruationParamModel(...) Cmds.setHistoricalMenstruation(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:38:39 "},"doc/set/IDOSetLongCityNameV3.html":{"url":"doc/set/IDOSetLongCityNameV3.html","title":"V3 Setting the Name of a Sports City event number","keywords":"","body":"V3 Setting the Name of a Sports City event number IDOCmdSetResponseModel Sample Cmds.setLongCityNameV3().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setLongCityNameV3().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 11:43:19 "},"doc/set/IDOSetHeartMode.html":{"url":"doc/set/IDOSetHeartMode.html","title":"Set Heart Rate Mode V3","keywords":"","body":"Set Heart Rate Mode V3 IDOHeartModeParamModel IDOHeartModeModel Function Table：syncHeartRateMonitor Sample let param = IDOHeartModeParamModel(...) Cmds.setHeartMode(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOHeartModeModel }else { // fail } } Kotlin val param = IDOHeartModeParamModel(...) Cmds.setHeartMode(param).send { if (it.res != null) { // success // it.res is IDOHeartModeModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:41:08 "},"doc/set/IDOSetVoiceReplyText.html":{"url":"doc/set/IDOSetVoiceReplyText.html","title":"V3 voice reply text event number","keywords":"","body":"V3 voice reply text event number IDOVoiceReplyParamModel IDOCmdSetResponseModel Function Table：getSportsTypeV3 Sample let param = IDOVoiceReplyParamModel(...) Cmds.setVoiceReplyText(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOVoiceReplyParamModel(...) Cmds.setVoiceReplyText(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:43:31 "},"doc/set/IDOSetWatchDialSort.html":{"url":"doc/set/IDOSetWatchDialSort.html","title":"Set watch dial sort event","keywords":"","body":"Set watch dial sort event IDOWatchDialSortParamModel IDOCmdSetResponseModel Function Table：setWatchDialSort Sample let param = IDOWatchDialSortParamModel(...) Cmds.setWatchDialSort(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOWatchDialSortParamModel(...) Cmds.setWatchDialSort(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:43:55 "},"doc/set/IDOSetWalkRemindTimes.html":{"url":"doc/set/IDOSetWalkRemindTimes.html","title":"Set multiple walk reminder times event number","keywords":"","body":"Set multiple walk reminder times event number IDOWalkRemindTimesParamModel IDOCmdSetResponseModel Function Table：setWalkReminderTimeGoal Sample let param = IDOWalkRemindTimesParamModel(...) Cmds.setWalkRemindTimes(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOWalkRemindTimesParamModel(...) Cmds.setWalkRemindTimes(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:45:21 "},"doc/set/IDOSetWallpaperDialReply.html":{"url":"doc/set/IDOSetWallpaperDialReply.html","title":"Set wallpaper dial list event number","keywords":"","body":"Set wallpaper dial list event number IDOWallpaperDialReplyV3ParamModel IDOWallpaperDialReplyV3Model Function Table：setWatchPhotoPositionMove Sample let param = IDOWallpaperDialReplyV3ParamModel(...) Cmds.setWallpaperDialReply(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOWallpaperDialReplyV3Model }else { // fail } } Kotlin val param = IDOWallpaperDialReplyV3ParamModel(...) Cmds.setWallpaperDialReply(param).send { if (it.res != null) { // success // it.res is IDOWallpaperDialReplyV3Model }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-17 17:47:15 "},"doc/set/IDOSetDateTime.html":{"url":"doc/set/IDOSetDateTime.html","title":"Set Time","keywords":"","body":"Set Time IDODateTimeParamModel IDOCmdSetResponseModel Sample let param = IDODateTimeParamModel(...) Cmds.setDateTime(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDODateTimeParamModel(...) Cmds.setDateTime(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 11:43:19 "},"doc/set/IDOSetUserInfo.html":{"url":"doc/set/IDOSetUserInfo.html","title":"Set user information","keywords":"","body":"Set user information IDOUserInfoPramModel IDOCmdSetResponseModel Sample let param = IDOUserInfoPramModel(...) Cmds.setUserInfo(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOUserInfoPramModel(...) Cmds.setUserInfo(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOReboot.html":{"url":"doc/set/IDOReboot.html","title":"Reboot the device","keywords":"","body":"Reboot the device IDOCmdSetResponseModel Sample Cmds.reboot().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.reboot().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOFactoryReset.html":{"url":"doc/set/IDOFactoryReset.html","title":"Factory reset","keywords":"","body":"Factory reset IDOCmdSetResponseModel Sample Cmds.factoryReset().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.factoryReset().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOFindDeviceStart.html":{"url":"doc/set/IDOFindDeviceStart.html","title":"Control search device start","keywords":"","body":"Control search device start IDOCmdSetResponseModel Sample Cmds.findDeviceStart().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.findDeviceStart().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOFindDeviceStop.html":{"url":"doc/set/IDOFindDeviceStop.html","title":"Control finding device ends","keywords":"","body":"Control finding device ends IDOCmdSetResponseModel Sample Cmds.findDeviceStop().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.findDeviceStop().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOPhotoStart.html":{"url":"doc/set/IDOPhotoStart.html","title":"Start taking photos (app -> ble)","keywords":"","body":"Start taking photos (app -> ble) IDOCmdSetResponseModel Sample Cmds.photoStart().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.photoStart().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOPhotoStop.html":{"url":"doc/set/IDOPhotoStop.html","title":"End photo taking (app -> ble)","keywords":"","body":"End photo taking (app -> ble) IDOCmdSetResponseModel Sample Cmds.photoStop().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.photoStop().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOSetHand.html":{"url":"doc/set/IDOSetHand.html","title":"Set up left and right hands","keywords":"","body":"Set up left and right hands IDOCmdSetResponseModel Sample Cmds.setHand().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setHand().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOSetScreenBrightness.html":{"url":"doc/set/IDOSetScreenBrightness.html","title":"Set screen brightness","keywords":"","body":"Set screen brightness IDOScreenBrightnessModel IDOCmdSetResponseModel Function Table：setScreenBrightness Sample let param = IDOScreenBrightnessModel(...) Cmds.setScreenBrightness(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOScreenBrightnessModel(...) Cmds.setScreenBrightness(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-22 11:08:19 "},"doc/set/IDOOtaStart.html":{"url":"doc/set/IDOOtaStart.html","title":"Enter upgrade mode","keywords":"","body":"Enter upgrade mode IDOCmdOTAResponseModel Sample Cmds.otaStart().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdOTAResponseModel }else { // fail } } Kotlin Cmds.otaStart().send { if (it.res != null) { // success // it.res is IDOCmdOTAResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOSetHeartRateInterval.html":{"url":"doc/set/IDOSetHeartRateInterval.html","title":"Set heart rate zones","keywords":"","body":"Set heart rate zone IDOHeartRateIntervalModel IDOCmdSetResponseModel Function Table：syncHeartRate Sample let param = IDOHeartRateIntervalModel(...) Cmds.setHeartRateInterval(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOHeartRateIntervalModel(...) Cmds.setHeartRateInterval(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-22 10:50:11 "},"doc/set/IDOSetCalorieDistanceGoal.html":{"url":"doc/set/IDOSetCalorieDistanceGoal.html","title":"Set calorie and distance goals (set daily three rings)","keywords":"","body":"Set calorie and distance goals (set daily three rings) IDOMainSportGoalModel IDOCmdSetResponseModel Sample let param = IDOMainSportGoalModel(...) Cmds.setCalorieDistanceGoal(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOMainSportGoalModel(...) Cmds.setCalorieDistanceGoal(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOSetWalkRemind.html":{"url":"doc/set/IDOSetWalkRemind.html","title":"Set reminders to move around","keywords":"","body":"Set reminders to move around IDOWalkRemindModel IDOCmdSetResponseModel Sample let param = IDOWalkRemindModel(...) Cmds.setWalkRemind(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOWalkRemindModel(...) Cmds.setWalkRemind(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOSetMenstruation.html":{"url":"doc/set/IDOSetMenstruation.html","title":"Set menstrual period","keywords":"","body":"Set menstrual period IDOMenstruationModel IDOCmdSetResponseModel Sample let param = IDOMenstruationModel(...) Cmds.setMenstruation(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOMenstruationModel(...) Cmds.setMenstruation(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:10:59 "},"doc/set/IDOSetDrinkWaterRemind.html":{"url":"doc/set/IDOSetDrinkWaterRemind.html","title":"Set a reminder to drink water","keywords":"","body":"Set drinking water reminder IDODrinkWaterRemindModel IDOCmdSetResponseModel Example Swift let param = IDODrinkWaterRemindModel(...) Cmds.setDrinkWaterRemind(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDODrinkWaterRemindModel(...) Cmds.setDrinkWaterRemind(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:52:33 "},"doc/set/IDOSetMenstruationRemind.html":{"url":"doc/set/IDOSetMenstruationRemind.html","title":"设置经期提醒","keywords":"","body":"设置经期提醒 IDOMenstruationRemindParamModel IDOCmdSetResponseModel 功能表：setMenstruation 示例 Swift let param = IDOMenstruationRemindParamModel(...) Cmds.setMenstruationRemind(param).send { rs in if case .success(let obj) = rs { // 成功 // obj is IDOCmdSetResponseModel }else { // 失败 } } Kotlin val param = IDOMenstruationRemindParamModel(...) Cmds.setMenstruationRemind(param).send { if (it.res != null) { // 成功 // it.res is IDOCmdSetResponseModel }else { // 失败 } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-26 14:15:41 "},"doc/set/IDOSetStressSwitch.html":{"url":"doc/set/IDOSetStressSwitch.html","title":"Set the pressure switch","keywords":"","body":"Set pressure switch IDOStressSwitchParamModel IDOCmdSetResponseModel Menu: setPressureData Example Swift let param = IDOStressSwitchParamModel(...) Cmds.setStressSwitch(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOStressSwitchParamModel(...) Cmds.setStressSwitch(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:53:43 "},"doc/set/IDOSetVoiceAssistantOnOff.html":{"url":"doc/set/IDOSetVoiceAssistantOnOff.html","title":"Set voice assistant switch","keywords":"","body":"Set voice assistant switch IDOCmdSetResponseModel Menu: getSupportSetVoiceAssistantStatus Example Swift Cmds.setVoiceAssistantOnOff().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setVoiceAssistantOnOff().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:53:52 "},"doc/set/IDOSetNotDisturb.html":{"url":"doc/set/IDOSetNotDisturb.html","title":"Set do not disturb mode","keywords":"","body":"Set do not disturb mode IDONotDisturbParamModel IDOCmdSetResponseModel Menu: setDoNotDisturb Example Swift let param = IDONotDisturbParamModel(...) Cmds.setNotDisturb(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDONotDisturbParamModel(...) Cmds.setNotDisturb(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:53:09 "},"doc/set/IDOSetMenuList.html":{"url":"doc/set/IDOSetMenuList.html","title":"设置菜单列表","keywords":"","body":"设置菜单列表 IDOMenuListParamModel IDOCmdSetResponseModel 功能表：setMenuListMain7 示例 Swift let param = IDOMenuListParamModel(...) Cmds.setMenuList(param).send { rs in if case .success(let obj) = rs { // 成功 // obj is IDOCmdSetResponseModel }else { // 失败 } } Kotlin val param = IDOMenuListParamModel(...) Cmds.setMenuList(param).send { if (it.res != null) { // 成功 // it.res is IDOCmdSetResponseModel }else { // 失败 } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-26 14:13:27 "},"doc/set/IDOSetSportSortV3.html":{"url":"doc/set/IDOSetSportSortV3.html","title":"Set sport type sorting","keywords":"","body":"Set motion type sorting IDOSportParamModel IDOCmdSetResponseModel Menu: getSportsTypeV3 Example Swift let param = IDOSportParamModel(...) Cmds.setSportSortV3(param).send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin val param = IDOSportParamModel(...) Cmds.setSportSortV3(param).send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:53:30 "},"doc/set/IDOSetCallQuickReplyOnOff.html":{"url":"doc/set/IDOSetCallQuickReplyOnOff.html","title":"Set call quick reply on/off","keywords":"","body":"Set the firmware quick reply switch for incoming calls IDOCmdSetResponseModel Menu: setSupportSetCallQuickReplyOnOff Example Swift Cmds.setCallQuickReplyOnOff().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.setCallQuickReplyOnOff().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:52:21 "},"doc/set/IDOSetActivitySwitch.html":{"url":"doc/set/IDOSetActivitySwitch.html","title":"设置运动模式识别开关","keywords":"","body":"设置运动模式识别开关 IDOActivitySwitchParamModel IDOCmdSetResponseModel 功能表：setActivitySwitch 示例 Swift let param = IDOActivitySwitchParamModel(...) Cmds.setActivitySwitch(param).send { rs in if case .success(let obj) = rs { // 成功 // obj is IDOCmdSetResponseModel }else { // 失败 } } Kotlin val param = IDOActivitySwitchParamModel(...) Cmds.setActivitySwitch(param).send { if (it.res != null) { // 成功 // it.res is IDOCmdSetResponseModel }else { // 失败 } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-30 11:46:43 "},"doc/set/IDOMusicStart.html":{"url":"doc/set/IDOMusicStart.html","title":"Control music start","keywords":"","body":"Control music start Example Swift Cmds.musicStart().send { rs in if case .success(let obj) = rs { // success // obj is IDOCmdSetResponseModel }else { // fail } } Kotlin Cmds.musicStart().send { if (it.res != null) { // success // it.res is IDOCmdSetResponseModel }else { // fail } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:51:40 "},"doc/set/IDOMusicStop.html":{"url":"doc/set/IDOMusicStop.html","title":"控制音乐停止","keywords":"","body":"控制音乐停止 示例 Swift Cmds.musicStop().send { rs in if case .success(let obj) = rs { // 成功 // obj is IDOCmdSetResponseModel }else { // 失败 } } Kotlin Cmds.musicStop().send { if (it.res != null) { // 成功 // it.res is IDOCmdSetResponseModel }else { // 失败 } } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-30 11:47:43 "},"doc/syncData/IDOSyncData.html":{"url":"doc/syncData/IDOSyncData.html","title":"Sync Data","keywords":"","body":"Data synchronization function Functional Overview Synchronizing device data is a very important feature. It is recommended not to execute other commands during the synchronization process. Progress will be returned during the synchronization process and the completion status will be returned after each item is synchronized. Determine whether the synchronization is completed based on the synchronization status. The synchronization log will be recorded during the synchronization process. SyncDataInterface Attributes status Sync status method startSync(funcProgress:funcData:funcCompleted:) Start syncing all data Parameters: funcProgress: synchronization data progress callback funcData: synchronous data callback funcCompleted: synchronous completion callback stopSync() Stop syncing all data type of data Exercise data Heart rate data Sleep data Blood pressure data Blood oxygenation data Pressure data Noise data Pipe temperature data Respiratory rate data HRV data Multi-sport data GPS data Swimming Data Example Swift /// Start synchronization sdk.syncData.startSync { progress in print(\"sync data progress:\\(progress)\") } funcData: { type, jsonStr, errorCode in print(\"sync data type:\\(type) jsonStr:\\(jsonStr) errCode:\\(errorCode)\") } funcCompleted: { errorCode in print(\"sync data done errCode:\\(errorCode)\") } /// End synchronization sdk.syncData.stopSync() Kotlin: Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-01 09:55:18 "},"doc/syncData/IDOSyncActivityData.html":{"url":"doc/syncData/IDOSyncActivityData.html","title":"Sync Activity Data","keywords":"","body":"Synchronize multi-sport data HRV iOS: IDOSyncDataType.activity Android : IDOSyncDataType.ACTIVITY json field received by App: Field name Field type Field description version int Protocol version numberThe version number of this message defaults to 0 setSupportSportPlan menu is enabled version=16,syncRealTimeV3 menu is enabled version=32 data_length int Data lengthThe value is 0 when the firmware opens the menu setSupportSportPlan(version=16) or syncRealTimeV3(version=32) packet_count int Number of packets The value is 0 when the firmware opens the menu setSupportSportPlan(version=16) or syncRealTimeV3(version=32) year int data date year month int data date month day int data date day hour int data date hour minute int data date minute second int data date seconds type int motion enumeration connect_app int Whether the bracelet is connected to the app, and what kind of report will be generated by using the app evaluation1 means connected, 0 means not connected sport_start_type int 0: invalid, 1: sport initiated by app, 2: sport initiated by watch hr_data_interval_minute int Heart rate data interval unit minute step int number of steps durations int Exercise durationUnit: secondsEnd time description:MenusyncHealthSyncV3ActivityEndTimeUseUtcModeIf it is not turned on, the exercise end time = start time + exercise durationAfter the menu syncHealthSyncV3ActivityEndTimeUseUtcMode is turned on, the exercise end time is passed through the fields end_month & end_day & end_hour & end_minute & end_year & end_sec calories int calories Unit: kilocalories distance int distance Unit: meters avg_hr_value int Average heart rate valueUnit: BPM max_hr_value int Maximum heart rate valueUnit: BPM min_hr_value Int Minimum heart rate valuesetSupportSportPlan or getOxygenDataSupportGradeV3 Returns 0 when the menu is not opened avg_step_frequency int Average step frequency Unit: steps/minute max_step_frequency int Maximum step frequency Unit: steps/minute avg_step_stride int Average strideUnit: cm max_step_stride int Maximum strideUnit: cm avg_speed int average speed km/h firmware is expanded 100 times max_speed int Maximum speed km/h firmware is expanded 100 times avg_pace_speed int The average pace is transmitted in seconds For example, 361 361/60=6 points and the remainder is 1s 6''1', Kilometers and miles are based on miles = kilometers*1609/ 1000fsetSupportSportPlan or getOxygenDataSupportGradeV3 Returns 0 when the menu is not opened max_pace_speed int The fastest pacesetSupportSportPlan or getOxygenDataSupportGradeV3 Returns 0 when the menu is not opened avg_km_speed int The average kilometer speed is transmitted in seconds For example, 361 361/60=6 points and the remainder is 1s 6''1', Kilometers and miles are based on miles = kilometers * 1609 /1000f max_km_speed int Fastest kilometer paceTime required per kilometer (seconds) warm_up_mins int The cumulative duration of warm-up exercise in minutes fat_burning_mins int Cumulative fat burning time in minutes aerobic_exercise_mins int The cumulative duration of aerobic exercise in minutes anaerobic_exercise_mins int The cumulative duration of anaerobic exercise in minutes extreme_exercise_mins int The cumulative duration of extreme exercise in minutes warm_up_sec int The cumulative duration of warm-up exercise in seconds fat_burning_sec int Cumulative fat burning time in seconds aerobic_exercise_sec int The cumulative duration of aerobic exercise in seconds anaerobic_exercise_sec int The cumulative duration of anaerobic exercise in seconds extreme_exercise_sec Int The cumulative duration of extreme exercise in seconds vo2max Int Maximum oxygen uptake Unit: ml/kg/minRange 0-80 Do not magnify 100 times (the field is first) grade Int VO2 grade1: Low 2: Amateur 3: Average4: Average 5: Good 6: Excellent 7: ProfessionalsetSupportSportPlan or getOxygenDataSupportGradeV3 Valid if the firmware is enabled, otherwise it is 0. If it is 0, it does not support the oxygen uptake level recovery_time_year int Recovery time point yearsetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened recovery_time_mon int Recovery time point monthsetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened recovery_time_day int Recovery time point daysetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened recovery_time_hour int At the recovery time pointsetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened recovery_time_min int Recovery time pointsetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened recovery_time_s int Recovery time point in secondssetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened training_effect int Training effect Unit: None Range: 1.0 - 5.0 (expand transmission 10 times)setSyncV3ActivityAddParam or syncRealTimeV3 Return 0 when the menu is not opened mi_speed_count int Mile pace count hr_item_count int Heart rate count activity_data_item_count int Number of Humboldt custom data field details, one saved per minute km_speed_count int Number of kilometers pace maximum 100 mi_speed_count int Number of miles pace pace_count int The number of real-time pacesetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened frequency_count int number of steps paddle_number_count int Number of paddles setSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened paddle_frequency_count int Number of paddle frequencies setSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened tread_frequency_count int Tread frequency number V3_sync_v3_activity_add_param orv3_support_activity_sync_real_timereturns 0 when the menu is not opened real_speed_count int Real-time speed countReturns 0 when the syncRealTimeV3 menu is not opened end_month int Exercise end time monthConsidering that the user pauses exercise after exercise, resulting in a difference between the exercise end time after exercise and the app's exercise end time,the exercise ends at this time The time is returned by the firmware. If the protocol is not supported, the app can return 0 to determine whether the month is 0Determine whether to use the following fields as the exercise end timesetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened end_day int Exercise end time daysetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened end_hour int Exercise end timesetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened end_minute int Exercise end time minuteV3_sync_v3_activity_add_param orv3_support_activity_sync_real_timereturns 0 when the menu is not opened training_offset int Training course date offset starts from zerosetSupportSportPlanReturns 0 when the menu is not opened act_type int Plan type:1: Running plan 3km2: Running plan 5km3: Running plan 10km4: Half marathon training (Phase 2)5: Marathon training (Phase 2) 64: 6-minute easy run65: 10-minute easy run66: 15-minute easy run67: A combination of walking and running Beginner68: Walking and running combined with advanced69: Walking and running combined with strengthening70: Stretching after runningsetSupportSportPlanReturn when the menu is not open 0 in_class_calories int Exercise calories in the course in kilocalories completion_rate int Action completion rate 0—100 hr_completion_rate int Heart rate control rate 0—100 smart_competitor int 0: Invalid 1: Non-intelligent running exercise 2: Intelligent running exerciseThe menu supportSmartCompetitor is enabled and valid ai_image_id int ai image IDMenu supportSmartCompetitor is enabled when enabled user_image_id int User image IDMenu supportSmartCompetitor is enabled when enabled bg_image_id int Background image IDMenu supportSmartCompetitor is enabled when enabled smart_competitor_pace int Intelligent running opponent paceThe menu supportSmartCompetitor is enabled and valid warm_up_performance int Warm-up performance 0-100 setSupportSportPlan and supportWarmUpBeforeRunningEnabled gps_status int GPS status0: invalid 1: enabled 2: not enabled (distance is displayed when not enabled, 3D distance is displayed when enabled)setSupportSportPlan & version=0x30 Valid when distance3d int 3d distance in meterssupportSyncActivityData3dDistanceSpeed, Valid when setSupportSportPlan & version=0x30 avg_3d_speed int Average 3d speed unit km/h App receives the required /100 to expand the transmission by 100 timessupportSyncActivityData3dDistanceSpeed, valid when setSupportSportPlan & version=0x30 avg_vertical_speed int Average vertical speed unit m/h app receives the required /10 to expand the transmission by 10 timessupportSyncActivityDataAvgSlope, Valid when setSupportSportPlan & version=0x30 avg_slope int Average slope unit degree -90 ~ 90supportSyncActivityDataAvgSlope, Valid when setSupportSportPlan & version=0x30 max_altitude int Maximum altitude in meters-500 ~ 9000getSupportSyncActivityDataAltitudeInfo, Valid when setSupportSportPlan & version=0x30 mix_altitude int Minimum altitude in meters-500 ~ 9000getSupportSyncActivityDataAltitudeInfo, Valid when setSupportSportPlan & version=0x30 cumulative_altitude_rise int Cumulative altitude rise in metersgetSupportSyncActivityDataAltitudeInfo, Valid when setSupportSportPlan & version=0x30 cumulative_altitude_loss int Cumulative altitude loss in metersgetSupportSyncActivityDataAltitudeInfo, Valid when setSupportSportPlan & version=0x30 altitude_count int Number of altitude detailsgetSupportSyncActivityDataAltitudeInfo, Valid when setSupportSportPlan & version=0x30 avg_altitude int Average altitude in meters -500 ~ 9000getSupportSyncActivityDataAltitudeInfo, Valid when setSupportSportPlan & version=0x30 hr_data_vlaue int [] Heart rate data details frequency_items int [] Cadence data details items_mi_speed int [] Mile pace details pace_speed_items int [] Real-time pace detailssetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened paddle_number_items int [] Paddle detailssetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened paddle_frequency_items int [] Paddle frequency detailssetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened tread_frequency_items int [] Cadence detailssetSyncV3ActivityAddParam or syncRealTimeV3 Returns 0 when the menu is not opened act_items int [] Action details Returns 0 when the setSupportSportPlan menu is not opened item_real_speed_temp int [] Real-time speed detailsReturns 0 when the setSupportSportPlan menu is enabledReturns 0 when the syncRealTimeV3 menu is not enabled altitude_item int [] Altitude data unit meter range -500~9000getSupportSyncActivityDataAltitudeInfo&valid when setSupportSportPlan & version=0x30 items collection Humboldt custom field data details,Collection of steps & calories & distance items_km_speed Collection Kilometer pace data details, collection of second Field name Field type Field description steps int cadence calories int calories distance int DistanceUnit: meters Field name Field type Field description second int Kilometer paceUnit: seconds Example { \"act_type\" : 0, \"action_temp\" : null, \"activity_data_item_count\" : 0, \"aerobic_exercise_mins\" : 0, \"aerobic_exercise_sec\" : 0, \"anaerobic_exercise_mins\" : 0, \"anaerobic_exercise_sec\" : 0, \"avg_hr_value\" : 0, \"avg_km_speed\" : 0, \"avg_pace_speed\" : 0, \"avg_speed\" : 0, \"avg_step_frequency\" : 0, \"avg_step_stride\" : 0, \"calories\" : 0, \"completion_rate\" : 0, \"connect_app\" : 0, \"data_length\" : 0, \"day\" : 0, \"distance\" : 0, \"durations\" : 0, \"end_day\" : 0, \"end_hour\" : 0, \"end_minute\" : 0, \"end_month\" : 0, \"extreme_exercise_mins\" : 0, \"extreme_exercise_sec\" : 0, \"fat_burning_mins\" : 0, \"fat_burning_sec\" : 0, \"frequency_count\" : 0, \"frequency_items\" : [], \"grade\" : 0, \"hour\" : 0, \"hr_completion_rate\" : 0, \"hr_data_interval_minute\" : 0, \"hr_data_vlaue\" : [0], \"hr_item_count\" : 0, \"in_class_calories\" : 0, \"item_real_speed_temp\" : [], \"items\" : [{\"steps\":0,\"calories\":0,\"distance\":0}], \"items_km_speed\" : [{\"second\":0}], \"items_mi_speed\" : [], \"km_speed_count\" : 0, \"max_hr_value\" : 0, \"max_km_speed\" : 0, \"max_pace_speed\" : 0, \"max_speed\" : 0, \"max_step_frequency\" : 0, \"max_step_stride\" : 0, \"mi_speed_count\" : 0, \"min_hr_value\" : 0, \"minute\" : 0, \"month\" : 0, \"pace_count\" : 0, \"pace_speed_items\" : [], \"packet_count\" : 0, \"paddle_frequency_count\" : 0, \"paddle_frequency_items\" : [], \"paddle_number_count\" : 0, \"paddle_number_items\" : [], \"real_speed_count\" : 0, \"recovery_time_day\" : 0, \"recovery_time_hour\" : 0, \"recovery_time_min\" : 0, \"recovery_time_mon\" : 0, \"recovery_time_s\" : 0, \"recovery_time_year\" : 0, \"second\" : 0, \"sport_start_type\" : 0, \"step\" : 0, \"training_effect\" : 0, \"training_offset\" : 0, \"tread_frequency_count\" : 0, \"tread_frequency_items\" : [], \"type\" : 0, \"vO2max\" : 0, \"version\" : 0, \"warm_up_mins\" : 0, \"warm_up_sec\" : 0, \"year\" : 0 } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-28 11:10:20 "},"doc/syncData/IDOSyncBpData.html":{"url":"doc/syncData/IDOSyncBpData.html","title":"Sync Bp Data","keywords":"","body":"Synchronize blood pressure data blood pressure iOS: IDOSyncDataType.bloodPressure Android : IDOSyncDataType.BLOODPRESSURE json field received by App: Field name Field type Field description year int data date year month int data date month day int data date day start_time int Start time, unit second, offset from 0 point sleep_avg_bp int Sleep average blood pressure value max_bp int Maximum blood pressure item_count int Number of blood pressure details items Collection Blood pressure details, collection of offset&sys_blood&dias_blood Field name Field type Field description offset int Data offset unit: minutes (blood pressure data interval is offset by minutes) sys_blood int Maximum systolic blood pressure dias_blood int minimum systolic blood pressure Example { \"year\":2022, \"month\":12, \"day\":26, \"start_time\":0, \"sleep_avg_bp\":0, \"max_bp\":0, \"item_count\":3, \"items\":[ { \"offset\":5, \"sys_blood\":120, \"dias_blood\":70 }, { \"offset\":5, \"sys_blood\":120, \"dias_blood\":70 }, { \"offset\":5, \"sys_blood\":120, \"dias_blood\":70 } ] } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:50:58 "},"doc/syncData/IDOSyncGpsData.html":{"url":"doc/syncData/IDOSyncGpsData.html","title":"Sync Gps Data","keywords":"","body":"Synchronize GPS data GPS iOS: IDOSyncDataType.gPS Android : IDOSyncDataType.GPS json field received by App: Field name Field type Field description year int data date year month int data date month day int data date day hour int data date hour minute int data date minute second int data date seconds data_interval int data offset string_items char [] GPS array details 示例 { \"year\":2022, \"month\":12, \"day\":26, \"hour\":10, \"minute\":10, \"second\":10, \"data_interval\":0, \"stringItems\" : [ \"11359.217000E,2240.776500N\", \"11359.217700E,2240.775900N\", \"11359.218200E,2240.775600N\", \"11359.218300E,2240.775700N\", \"11359.218400E,2240.776200N\", \"11359.218600E,2240.776800N\", \"11359.218600E,2240.777000N\", \"11359.218700E,2240.777300N\", \"11359.218800E,2240.777300N\", \"11359.218900E,2240.777200N\", \"11359.218800E,2240.777500N\" ] } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:53:47 "},"doc/syncData/IDOSyncHrData.html":{"url":"doc/syncData/IDOSyncHrData.html","title":"Sync Hr Data","keywords":"","body":"Synchronize heart rate data Heart rate iOS: IDOSyncDataType.heartRate Android : IDOSyncDataType.HEARTRATE json field received by App: Field name Field type Field description year int data date year month int data date month day int data date day start_time int Start time, unit second, offset from 0 point data_type int 0 is invalid, 1 is a value, 2 is the maximum and minimum value (reserved field) silent_hr int Resting heart rate five_min_max_data int Five-minute maximum heart rate five_min_min_data int Five-minute minimum heart rate five_min_avg_data int Five-minute heart rate average five_min_data int [] All five-minute heart rate values hr_data_count int The number of heart rate data when it is too high or too low When the v3SupportSyncOverHighLowHeartData menu is not opened, it returns 0 hr_interval Collection 5 heart rate zones:Warm-up heart rate zoneUltimate heart rate zoneFat-burning heart rate zoneAerobic endurance heart rate zoneAnaerobic endurance heart rate zone Collection of threshold & minute items Collection Collection of heart rate data offset & heart_rateVal hr_data Collection Collection of high and low heart rate data hour & minute & type & heart_rate Returns 0 when the v3SupportSyncOverHighLowHeartData menu is not opened Field name Field type Field description offset int offset in seconds heart_rateVal int heart rate value Field name Field type Field description threshold int threshold minute int minute Field name Field type Field description hour int The heart rate data time when it is too high or too low. Returns 0 when the v3SupportSyncOverHighLowHeartData menu is not opened minute int The heart rate data time minute when it is too high or too low Returns 0 when the v3SupportSyncOverHighLowHeartData menu is not opened type int Heart rate value type 0: Heart rate value when the heart rate is too low 1: Heart rate value when the heart rate is too high Returns 0 when the v3SupportSyncOverHighLowHeartData menu is not opened heart_rate int Heart rate value Unit: beats/minute Returns 0 when the v3SupportSyncOverHighLowHeartData menu is not opened Example { \"year\":2022, \"month\":12, \"day\":26, \"start_time\":0, \"data_type\":0, \"silent_hr\":85, \"five_min_max_data\":0, \"five_min_min_data\":0, \"five_min_avg_data\":0, \"hr_data_count\":2, \"five_min_data\":[ 85, 90, 80, 83 ], \"hr_interval\":[ { \"threshold\": 80, \"minute\": 5 }, { \"threshold\": 85, \"minute\": 5 }, { \"threshold\": 85, \"minute\": 5 }, { \"threshold\": 85, \"minute\": 5 }, { \"threshold\": 85, \"minute\": 5 } ], \"items\":[ { \"offset\":80, \"heart_rateVal\":5 }, { \"offset\":83, \"heart_rateVal\":5 } ], \"hr_data\":[ { \"hour\":11, \"minute\":25, \"type\":1, \"heart_rate\":120 }, { \"hour\":11, \"minute\":25, \"type\":0, \"heart_rate\":70 } ] } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:54:05 "},"doc/syncData/IDOSyncHrvData.html":{"url":"doc/syncData/IDOSyncHrvData.html","title":"Sync Hrv Data","keywords":"","body":"Synchronize HRV data HRV iOS: IDOSyncDataType.hRV Android: IDOSyncDataType.HRV json field received by App: Field name Field type Field description year int data date year month int data date month day int data date day start_time int Start time, unit second, offset from 0 point items collection HRV data details, collection of min_offset&hrv_value Field name Field type Field description min_offset int Default offset in minutes hrv_value int HRV data Example { \"year\":2022, \"month\":12, \"day\":26, \"start_time\":0, \"items\":[ { \"min_offset\":5, \"hrv_value\":0 }, { \"min_offset\":5, \"hrv_value\":0 } ] } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:54:30 "},"doc/syncData/IDOSyncNoiseData.html":{"url":"doc/syncData/IDOSyncNoiseData.html","title":"Sync Noise Data","keywords":"","body":"Synchronize ambient volume data Ambient volume iOS: IDOSyncDataType.noise Android : IDOSyncDataType.NOISE json field received by App: Field name Field type Field description year int data date year month int data date month day int data date day hour int data date hour minute int data date minute second int data date seconds version int protocol version number 0 start_time int Start synchronization time in seconds interval_mode int The interval between 2 data in seconds avg_noise int average noise max_noise int maximum noise min_noise int minimum noise noise_count int Number of noise details items collection noise details, collection of offset&value Field name Field type Field description offset int offset of data value int noise value Example { \"year\":2022, \"month\":12, \"day\":26, \"hour\":11, \"minute\":58, \"second\":30, \"version\":0, \"start_time\":0, \"interval_mode\":30, \"avg_noise\":50, \"max_noise\":60, \"min_noise\":40, \"noise_count\":2, \"items\":[ { \"offset\":30, \"value\":50 }, { \"offset\":30, \"value\":50 } ] } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:54:46 "},"doc/syncData/IDOSyncPivenData.html":{"url":"doc/syncData/IDOSyncPivenData.html","title":"Sync Piven Data","keywords":"","body":"Synchronize skin temperature data Piwen iOS: IDOSyncDataType.piven Android: IDOSyncDataType.PIVEN json field received by App: Field name Field type Field description year int data date year month int data date month day int data date day hour int data date hour minute int data date minute start_time int Start synchronization time Unit seconds interval_mode int The interval for saving automatic body temperature dataUnit secondsReserved avg_temperature int Average temperature. Keep one decimal place. Expand transmission ten times max_temperature int Maximum temperature. Keep one decimal place. Expand transmission ten times min_temperature int Minimum temperature. Keep one decimal place. Expand transmission ten times temperature_count int Number of temperature details items Collection Body temperature details, collection of offset&value Field name Field type Field description offset int offset of data value int Example { \"avg_temperature\" : 0, \"day\" : 0, \"hour\" : 0, \"interval_mode\" : 0, \"items\" : [{\"offset\":0,\"value\":0}], \"max_temperature\" : 0, \"min_temperature\" : 0, \"minute\" : 0, \"month\" : 0, \"start_time\" : 0, \"temperature_count\" : 0, \"year\" : 0 } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:55:06 "},"doc/syncData/IDOSyncPressure.html":{"url":"doc/syncData/IDOSyncPressure.html","title":"Sync Pressure","keywords":"","body":"Synchronize pressure data pressure iOS: IDOSyncDataType.pressure Android : IDOSyncDataType.PRESSURE json field received by App: Field name Field type Field description year int data date year month int data date month day int data date day start_time int Start time, unit second, offset from 0 point data_type int 0 is invalid, 1 is a value, 2 is the maximum and minimum value (reserved bytes) items collection collection of offset & value Field name Field type Field description offset int offset in minutes value int pressure value Example { \"year\":2022, \"month\":12, \"day\":26, \"start_time\":0, \"data_type\":1, \"items\":[ { \"offset\":30, \"value\":30, }, { \"offset\":30, \"value\":30, } ] } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:55:30 "},"doc/syncData/IDOSyncRespirRateData.html":{"url":"doc/syncData/IDOSyncRespirRateData.html","title":"Sync Respir Rate Data","keywords":"","body":"Synchronize respiratory rate data Respiration rate iOS: IDOSyncDataType.respirationRate Android : IDOSyncDataType.RESPIRATIONRATE json field received by App: Field name Field type Field description year int data date year month int data date month day int data date day item_count int Number of respiratory rate details items Collection Respiration rate details, collection of start_time&respid Field name Field type Field description start_time int Start time, unit second, offset from 0 point respid int respiratory rate value Example { \"year\":2022, \"month\":12, \"day\":26, \"item_count\":3, \"items\":[ { \"start_time\":0, \"respid\":80 }, { \"start_time\":100, \"respid\":80 }, { \"start_time\":100, \"respid\":80 } ] } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:56:00 "},"doc/syncData/IDOSyncSleepData.html":{"url":"doc/syncData/IDOSyncSleepData.html","title":"Sync Sleep Data","keywords":"","body":"Synchronize sleep data sleep iOS: IDOSyncDataType.sleep Android: IDOSyncDataType.SLEEP json field received by App: Field name Field type Field description data_type int 1: Scientific sleep (with REM, breathing score)2: Nap 4: Normal sleep6: Nap and does not support scientific sleep fall_asleep_year int Fall asleep time year fall_asleep_month int Fall asleep time month fall_asleep_day int Fall asleep time day fall_asleep_hour int Fall asleep time hours fall_asleep_minte int Fall asleep time minutes get_up_year int wake up time year get_up_month int Wake up time month get_up_day int wake up time day get_up_hour int wake up time hours get_up_minte int Wake up time minutes total_sleep_time_mins int Total sleep time Unit: minutes wake_mins int Total wake time Unit: minutes light_mins int Total light sleep duration Unit: minutes rem_mins int Total eye movement duration Unit: minutes deep_mins int Total deep sleep duration Unit: minutes wake_count int number of wakes light_count int Number of light sleeps rem_count int number of eye movements deep_count int deep sleep times awrr_status int respiratory status sleep_score int sleep score breath_quality int Breath quality (0 - 100) Unitless sleep_avg_hr_value int Average heart rate during sleep stage sleep_avg_spo2_value int Average blood oxygen value during sleep stage sleep_avg_respir_rate_value int Average respiratory rate during sleep stages item_count int Number of sleep details items collection sleep details, collection of stage & duration Field name Field type Field description stage int Stage 1: Awake2: Light sleep3: Deep sleep 4: Eye movement duration int duration in seconds Example { \"awrr_status\" : 0, \"breath_quality\" : 0, \"data_type\" : 1, \"deep_count\" : 0, \"deep_mins\" : 0, \"fall_asleep_day\" : 0, \"fall_asleep_hour\" : 0, \"fall_asleep_minte\" : 0, \"fall_asleep_month\" : 0, \"fall_asleep_year\" : 0, \"get_up_day\" : 0, \"get_up_hour\" : 0, \"get_up_minte\" : 0, \"get_up_month\" : 0, \"get_up_year\" : 0, \"item_count\" : 0, \"items\" : [{stage:1,duration:500}], \"light_count\" : 0, \"light_mins\" : 0, \"rem_count\" : 0, \"rem_mins\" : 0, \"sleep_score\" : 0, \"total_sleep_time_mins\" : 0, \"wake_count\" : 0, \"wake_mins\" : 0 } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:56:33 "},"doc/syncData/IDOSyncSpo2Data.html":{"url":"doc/syncData/IDOSyncSpo2Data.html","title":"Sync Spo 2 Data","keywords":"","body":"Synchronize blood oxygen data Blood Oxygen iOS: IDOSyncDataType.bloodOxygen Android : IDOSyncDataType.BLOODOXYGEN json field received by App: Field name Field type Field description year int data date year month int data date month day int data date day start_time int Start time, unit second, offset from 0 point data_type int 0 is invalid, 1 is a value, 2 is the maximum and minimum valueReserved items collection collection of offset&value Field name Field type Field description offset int Default offset in seconds If the function table getSpo2OffChangeV3 is configured, the data offset is in minutes value int blood oxygen average Example { \"year\":2022, \"month\":12, \"day\":26, \"start_time\":0, \"data_type\":1, \"items\":[ { \"offset\":30, \"value\":30, }, { \"offset\":30, \"value\":30, } ] } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:56:56 "},"doc/syncData/IDOSyncStepCount.html":{"url":"doc/syncData/IDOSyncStepCount.html","title":"Sync Step Count","keywords":"","body":"Synchronize motion data Step count iOS: IDOSyncDataType.stepCount Android : IDOSyncDataType.STEPCOUNT json field received by App: Field name Field type Field description version int Protocol version number 0: No wearing identification data16: There is wearing identification data, firmware configuration is required v3SupportWearFlag menu year int data date year month int data date month day int data date day start_time int Start time, unit minute, offset from 0 o'clock per_minute int The minute interval between each piece of data (default 15 minutes) 206 customization added: duration interval 1 minuteIf the generation interval is one minute, the app needs to judgesupportPerMinuteOne To determine whether the firmware supports the one-minute synchronization type total_step int total number of steps total_rest_activity_calories int total activity + resting calories total_distances int Total distance miles data = firmware distance (meters) multiplied by 0.00062 total_active_time int Active time of the day in minutes total_activity_calories int total activity calories walk_goal_time int The actual walking time of the firmware needs to be configured in hours item_count int Number of sports data details wear_flag_array int [] Number of wearing minutes for each hour of 24 hours, maximum 24 bytes Returns 0 when the v3SupportSyncOverHighLowHeartData menu is not enabled items Collection Exercise data details (refer to the table below), collection of mode&step_count&active_time&activity_calories&distance&rest_activity_calories Field name Field type Field description mode int Mode 00: quiet, 01: mild, 10: moderately active, 11: intense step_count int number of steps active_time int Active time in minutes, the maximum per_minute parameter is determined, currently it is 15 minutes activity_calories int activity calories distance int distance in meters rest_activity_calories int activity + resting calories Example { \"day\" : 26, \"item_count\" : 47, \"items\" : [ { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 }, { \"active_time\" : 0, \"activity_calories\" : 0, \"distance\" : 0, \"mode\" : 0, \"rest_activity_calories\" : 0, \"step_count\" : 0 } ], \"month\" : 12, \"per_minute\" : 15, \"start_time\" : 0, \"total_active_time\" : 0, \"total_activity_calories\" : 0, \"total_distances\" : 0, \"total_rest_activity_calories\" : 0, \"total_step\" : 0, \"version\" : 0, \"walk_goal_time\" : 0, \"wear_flag_array\" : [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ], \"year\" : 2022 } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:57:14 "},"doc/syncData/IDOSyncSwimData.html":{"url":"doc/syncData/IDOSyncSwimData.html","title":"Sync Swim Data","keywords":"","body":"Synchronize swimming data swim iOS: IDOSyncDataType.swim Android : IDOSyncDataType.SWIM json field received by App: Field name Field type Field description year int data date year month int data date month day int data date day hour int data date hour minute int data date minute second int data date seconds version int protocol version number type int Type 0 is invalid,1 is indoor swimming,2 is open water swimming calories int caloriesUnit: Kcal distance int DistanceUnit: meters confirm_distance int User confirmation distanceUnit: meters duration int DurationUnit: seconds trips int number of swimming trips average_swolf int average stroke efficiency total_strokes_number int Total number of strokes swimming_posture int Main stroke 0: Medley 1: Freestyle 2: Breaststroke 3: Backstroke4: Butterfly pool_distance int Pool distanceUnit: meters avg_speed int Average paceSeconds/100 meters How many seconds it takes to reach 100 meters Unit: secondsversion=1 is valid, otherwise the field is 0 avg_frequency Int Average stroke frequencyUnit: times/minuteversion=1 is valid, otherwise the field is 0 items Collection Swimming data details, swolf & strokesNumber & duration & swimmingPosture & distance & frequency& speed & stop_time & Collection of difference_time Field name Field type Field description swolf int stroke efficiency swimming_posture int Swimming style0: Medley 1: Freestyle 2: Breaststroke 3: Backstroke4: Butterfly strokes_number int Number of strokes duration int timeUnit: seconds distance int DistanceUnit: meters frequency int FrequencyUnit: times/minuteversion=1 is valid, otherwise the field is 0 speed int PaceSeconds/100 meters How many seconds it took to reach 100 meters Unit: secondsversion=1 is valid, otherwise the field is 0 stop_time int End timeUnit: secondsversion=1 is valid, otherwise the field is 0 difference_time int Rest time between two tripsUnit: secondsversion=1 is valid, otherwise the field is 0 Example Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-29 16:57:43 "},"doc/transfer/IDOFileTransfer.html":{"url":"doc/transfer/IDOFileTransfer.html","title":"File Transfer","keywords":"","body":"File transfer FileTransfernterface Attributes isTransmitting Is a transfer in progress? transFileType File type currently in transfer method transferFiles(fileItems:cancelPrevTranTask:transProgress:transStatus:completion:) Perform file transfer Parameters: fileItems: files to be transferred cancelPrevTranTask: whether to cancel the executing transfer task (if any) transProgress: file transfer progress transStatus: file transfer status completion: the transmission result, in the form: [true, true, ...] corresponds one-to-one with the incoming fileItems iwfFileSize(filePath:type:completion:) Get the .iwf file size before compression Parameters: filePath: absolute path to the watch face file type: dial type 1 cloud dial, 2 wallpaper dial completion: file size (unit: bytes) Example Entity class: IDOTransSportModel IDOTransMusicModel IDOTransNormalModel enumerate: IDOTransType Swift: var items = [IDOTransBaseModel]() // music items.append(IDOTransMusicModel(filePath: \"\\(mp3Path)/1.mp3\", fileName: \"mp3_1\", musicId: 1)) items.append(IDOTransMusicModel(filePath: \"\\(mp3Path)/2.mp3\", fileName: \"mp3_2\", musicId: 2)) items.append(IDOTransMusicModel(filePath: \"\\(mp3Path)/3.mp3\", fileName: \"mp3_3\", musicId: 3)) // sports icon - image items.append(IDOTransSportModel(filePath: \"x.png\", fileName: \"icon_sport1\", sportType: 2, iconType: 1, isSports: false)) items.append(IDOTransSportModel(filePath: \"x.png\", fileName: \"icon_sport2\", sportType: 2, iconType: 1, isSports: false)) // motion icon - animation items.append(IDOTransSportModel(filePath: \"x.bmp\", fileName: \"icon_sports1\", sportType: 2, iconType: 3, isSports: true)) items.append(IDOTransSportModel(filePath: \"x.bmp\", fileName: \"icon_sports2\", sportType: 2, iconType: 3, isSports: true)) // Wallpaper dial items.append(IDOTransNormalModel(fileType: .wallpaperZ, filePath: \"x.png\", fileName: \"wallpaper.z\")) // Cloud dial items.append(IDOTransNormalModel(fileType: .iwfLz, filePath: \"noise_w96.zip\", fileName: \"noise_w96\")) // firmware items.append(IDOTransNormalModel(fileType: .fw, filePath: \"xx.fw\", fileName: \"xx\")) // Call transfer let canceler = sdk.transfer.transferFiles(fileItems: items, cancelPrevTranTask: true) { currentIndex, totalCount, _, totalProgress in print(\"Transmitting(\\(currentIndex + 1)/\\(totalCount)...\") } transStatus: { _, status, errorCode, _ in if status != .finished || errorCode != 0 { print(\"Transmission failed:\\(errorCode)\") } } completion: {rs in print(\"Transmission ended: \\(rs)\") if rs.last! { //Transmission successful } else { //Transmission failed } } // Cancel transfer canceler?.cancel() Kotlin: var items = mutableListOf() // music items.add(IDOTransNormalModel(filePath: \"\\(mp3Path)/1.mp3\", fileName: \"mp3_1\", musicId: 1)) items.add(IDOTransNormalModel(filePath: \"\\(mp3Path)/2.mp3\", fileName: \"mp3_2\", musicId: 2)) items.add(IDOTransNormalModel(filePath: \"\\(mp3Path)/3.mp3\", fileName: \"mp3_3\", musicId: 3)) // sports icon - image items.add(IDOTransSportModel(filePath: \"x.png\", fileName: \"icon_sport1\", sportType: 2, iconType: 1, isSports: false)) items.add(IDOTransSportModel(filePath: \"x.png\", fileName: \"icon_sport2\", sportType: 2, iconType: 1, isSports: false)) // motion icon - animation items.add(IDOTransSportModel(filePath: \"x.bmp\", fileName: \"icon_sports1\", sportType: 2, iconType: 3, isSports: true)) items.add(IDOTransSportModel(filePath: \"x.bmp\", fileName: \"icon_sports2\", sportType: 2, iconType: 3, isSports: true)) // Wallpaper dial items.add(IDOTransNormalModel(fileType = IDOTransType.WALLPAPERZ,filePath = \"xx/xx.png\",fileName = \"wallpaper.z\",fileSize = xx)) // Cloud dial items.add(IDOTransNormalModel(fileType: .iwfLz, filePath: \"noise_w96.zip\", fileName: \"noise_w96\")) // firmware items.add(IDOTransNormalModel(fileType: .fw, filePath: \"xx.fw\", fileName: \"xx\")) // Call transfer val cancellable = sdk.transfer.transferFiles( items, cancelPre, { currentIndex, totalCount, currentProgress, totalProgress -> print(\"Transmitting${currentIndex + 1}/$totalCount...\") }, { currentIndex: Int, status: IDOTransStatus, errorCode: Int?, finishingTime: Int? -> if (status != IDOTransStatus.FINISHED || errorCode != 0) { print(\"Transmission failed:$errorCode\") } }, {resultList-> resultList.forEach { if (it){ //Transmission successful }else{ //Transmission failed } }}) // Cancel transfer canceler?.cancel() Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-01 09:55:18 "},"doc/transfer/IDOTransMessageModel.html":{"url":"doc/transfer/IDOTransMessageModel.html","title":"Trans Message Model","keywords":"","body":"CLASS IDOTransMessageModel message icon Properties Type Description filePath String Absolute file address fileName String filename fileSize Int file size evtType Int Event typeReference message notification0x01: SMS0x02: Email0x03: WeChat0x04: QQ0x05: Sina Weibo0x06: facebook0x07: twitter0x08: WhatsApp0x09: Messenger0x0A: Instagram0x0B: Linked in0x0C : Calendar0x0D: skype;0x0E: Alarm clock0x0F: pokeman0x10: VKontakte0x11: Line0x12: Viber0x13 ：KakaoTalk0x14：Gmail0x15：Outlook,0x16：Snapchat0x17：TELEGRAM0x18：other0x20：chatwork0x21 : slack0x22: Yahoo Mail0x23: Tumblr,0x24: Youtube0x25: Yahoo Pinterest0x26: TikTok0x27: Redbus0x28: Dailyhunt0x29: Hotstar0x2A: Inshorts0x2B: Paytm0x2C: Amazon0x2D: Flipkart0x2E: Prime 0x2F: Netflix0x30: Gpay0x31: Phonpe0x32: Swiggy0x33: Zomato0x34: Make My trip0x35: Jio Tv0x36: keep0x37: Microsoft0x38: WhatsApp Business0x39: niosefit0x3A: missed_callsMissed calls0x3B: Gpap0x3C: YTmusic0x3D: Uber0x3E: Ola0x3F: Reminder0x40: Google meet packName String Application package name Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 11:41:41 "},"doc/transfer/IDOTransMusicModel.html":{"url":"doc/transfer/IDOTransMusicModel.html","title":"Trans Music Model","keywords":"","body":"CLASS IDOTransMusicModel music Properties Type Description filePath String Absolute file address fileName String filename fileSize Int file size musicId Int music id singerName String singer name useSpp Bool Use SPP transmission Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 11:42:07 "},"doc/transfer/IDOTransSportModel.html":{"url":"doc/transfer/IDOTransSportModel.html","title":"Trans Sport Model","keywords":"","body":"CLASS IDOTransSportModel sport icons Properties Type Description filePath String Absolute file address fileName String filename fileSize Int file size sportType Int Sport ModePrevious sport type: 0: None, 1: Walking, 2: Running, 3: Cycling, 4: Hiking, 5: Swimming, 6: Climbing, 7: Badminton, 8: Others, 9: Fitness, 10: Spinning bike, 11: Elliptical machine, 12: Treadmill, 13: Sit-ups, 14: Push-ups, 15: Dumbbells, 16: Weightlifting, 17: aerobics, 18: yoga, 19: rope skipping, 20: table tennis, 21: basketball, 22: football, 23: volleyball, 24: tennis, 25: golf, 26: baseball, 27: Skiing, 28: Roller skating, 29: Dancing, 31: Indoor rowing/roller machine, 32: Pilates/pilates, 33: Cross training/cross train, 34: Aerobics/cardio, 35: Zumba Dance/Zumba, 36:square dance, 37:Plank, 38:gym 48:Outdoor running, 49:Indoor running, 50:Outdoor cycling, 51:Indoor cycling, 52: Outdoor walking, 53: Indoor walking, 54: Pool swimming, 55: Open water swimming, 56: Elliptical machine, 57: Rowing machine, 58: High-intensity interval training, 75: CricketBasic exercise : 101: Functional strength training, 102: Core training, 103: Stepper, 104: Relaxation Fitness (25 types) 110: Traditional strength training, 112: Pull-ups , 114: Jumping Jacks, 115: Squats, 116: High Leg Raise, 117: Boxing, 118: Barbell, 119: Martial Arts, 120: Tai Chi, 121: Taekwondo, 122: Karate, 123: Kickboxing , 124: Fencing, 125: Archery, 126: Gymnastics, 127: Horizontal bar, 128: Parallel bars, 129: Walking machine, 130: Mountain climbing machine Ball games: 131: Bowling, 132 : Billiards, 133: Hockey, 134: Rugby, 135: Squash, 136: Softball, 137: Handball, 138: Shuttlecock, 139: Beach Soccer, 140: Sepak Takraw, 141: Dodgeball Leisure sports 152: Street dance, 153: Ballet, 154: Social dance, 155: Frisbee, 156: Darts, 157: Horse riding, 158: Stair climbing, 159: Kite flying, 160: Fishing Ice and snow sports 161: Sled, 162: Snowmobile, 163: Snowboarding, 164: Snow sports, 165: Alpine skiing, 166: Cross-country skiing, 167: Curling, 168: Ice hockey, 169: Winter Two items Water sports (10 types) 170: Surfing, 171: Sailing, 172: Windsurfing, 173: Kayak, 174: Motor boat, 175: Rowing, 176: Rowing, 177 :Dragon boat, 178: Water polo, 179: Rafting, Extreme sports (5 types) 180: Skateboarding, 181: Rock climbing, 182: Bungee jumping, 183: Parkour, 184: BMX, kr01 customized project 193:Outdoor Fun (outdoor play), 194:Other Activity (other sports) iconType Int Icon type 1: Single small motion picture 2: Single large motion picture 3: Multiple motion animated pictures 4: Single medium motion picture 5: Minimum motion icon isSports Bool Sports Icons - Animated Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 11:42:33 "},"doc/transfer/IDOTransNormalModel.html":{"url":"doc/transfer/IDOTransNormalModel.html","title":"Trans Normal Model","keywords":"","body":"CLASS IDOTransNormalModel Ordinary document Differentiate according to FileTransType Note: The following types need to use the corresponding classification: Message icon - use IDOTransMessageModel Music - using IDOTransMusicModel Sports icons - use IDOTransSportModel Properties Type Description fileType IDOTransType file type filePath String Absolute file address fileName String filename fileSize Int file size Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 11:42:17 "},"doc/model/IDOModelIndex.html":{"url":"doc/model/IDOModelIndex.html","title":"Model","keywords":"","body":"Model IDOActivitySwitchModel IDOAlarmItem IDOAllHealthSwitchStateModel IDOBatteryInfoModel IDOBleBeepModel IDOBleVoiceParamModel IDOBpAlgVersionModel IDOBpCalControlModel IDOBpCalibrationModel IDOBpCalibrationParamModel IDOBpMeasurementModel IDOBpMeasurementParamModel IDOBtNoticeModel IDOCmdGetResponseModel IDOCmdSetResponseModel IDOContactItem IDOContactReviseTimeModel IDODataTranConfigModel IDODateTimeParamModel IDODeviceLogStateModel IDODeviceNotificationModel IDODisplayModeParamModel IDODownloadLanguageModel IDODownloadLanguageType IDOErrorRecordModel IDOFitnessGuidanceParamModel IDOFlashBinInfoModel IDOFuncSimpleFileOptModel IDOFuncSimpleFileOptParamModel IDOGpsControlModel IDOGpsControlParamModel IDOGpsInfoModel IDOGpsInfoModelItem IDOGpsStatusModel IDOHandWashingReminderParamModel IDOHeartModeModel IDOHeartModeParamModel IDOHeartRateModeModel IDOHeartRateModeParamModel IDOHeartRateModeSmartParamModel IDOHistoricalMenstruationParamItem IDOHistoricalMenstruationParamModel IDOHotStartParamModel IDOItemItem IDOLanguageLibraryItem IDOLanguageLibraryModel IDOLiveDataModel IDOLongSitParamModel IDOLostFindParamModel IDOMainSportGoalModel IDOMainUISortItem IDOMainUISortModel IDOMainUISortParamModel IDOMainUISortSupportItem IDOMtuInfoModel IDOMusicControlParamModel IDOMusicFolderItem IDOMusicInfoModel IDOMusicItem IDOMusicOnOffParamModel IDOMusicOpearteParamModel IDOMusicOperateModel IDONotDisturbStatusModel IDONoticeMesaageParamItem IDONoticeMesaageParamModel IDONoticeMessageParamModel IDONoticeMessageStateItemItem IDONoticeMessageStateModel IDONoticeMessageStateParamModel IDONotificationCenterModel IDONotificationStatusParamModel IDORunPlanParamModel IDOSchedulerReminderItem IDOSchedulerReminderModel IDOScientificSleepSwitchParamModel IDOScreenBrightnessModel IDOSendRunPlanModel IDOSetNoticeStatusModel IDOShortcutParamModel IDOSleepPeriodParamModel IDOSpo2SwitchParamModel IDOSport100SortItem IDOSport100SortModel IDOSport100SortParamModel IDOSportGoalParamModel IDOSportModeSelectParamModel IDOSportModeSortParamModel IDOSportSortModel IDOSportSortParamModel IDOStepGoalModel IDOStressCalibrationModel IDOStressCalibrationParamModel IDOStressValModel IDOSupportMaxSetItemsNumModel IDOSyncContactModel IDOSyncContactParamModel IDOTakingMedicineReminderParamModel IDOTemperatureSwitchParamModel IDOUnitParamModel IDOUpdateStatusModel IDOUpHandGestureModel IDOUpHandGestureParamModel IDOV3NoiseParamModel IDOVersionInfoModel IDOVoiceReplyParamModel IDOWalkRemindModel IDOWalkRemindTimesItem IDOWalkRemindTimesParamModel IDOWallpaperDialReplyV3Model IDOWallpaperDialReplyV3ParamModel IDOWatchDialIdModel IDOWatchDialInfoModel IDOWatchDialParamModel IDOWatchDialSortItem IDOWatchDialSortParamModel IDOWatchFaceModel IDOWatchFaceParamModel IDOWatchItem IDOWatchListModel IDOWatchListV2Model IDOWeatherDataFuture IDOWeatherDataParamModel IDOWeatherSunTimeParamModel IDOWeatherV3ParamModel IDOWorldTimeParamModel Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 17:07:23 "},"doc/model/IDOActivitySwitchModel.html":{"url":"doc/model/IDOActivitySwitchModel.html","title":"IDOActivitySwitchModel","keywords":"","body":"IDOActivitySwitchModel Attribute Type Description errCode Int 0 for successnon-zero for error autoIdentifySportWalk Int Auto identify walking switch: 0 for off, 1 for on, -1 for not supported autoIdentifySportRun Int Auto identify running switch: 0 for off, 1 for on, -1 for not supported autoIdentifySportBicycle Int Auto identify cycling switch: 0 for off, 1 for on, -1 for not supported autoPauseOnOff Int Auto pause switch: 0 for off, 1 for on, -1 for not supported autoEndRemindOnOffOnOff Int End reminder switch: 0 for off, 1 for on, -1 for not supported autoIdentifySportElliptical Int Auto identify elliptical switch: 0 for off, 1 for on, -1 for not supported autoIdentifySportRowing Int Auto identify rowing switch: 0 for off, 1 for on, -1 for not supported autoIdentifySportSwim Int Auto identify swimming switch: 0 for off, 1 for on, -1 for not supported autoIdentifySportSmartRope Int Auto identify smart rope switch: 0 for off, 1 for on, -1 for not supported Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOAlarmItem.html":{"url":"doc/model/IDOAlarmItem.html","title":"IDOAlarmItem","keywords":"","body":"IDOAlarmModel Attribute Type Description items List [IDOAlarmItem] IDOAlarmItem list num count IDOAlarmItem count （No assignment is required） version version Protocol version（No assignment is required） IDOAlarmItem Attribute Type Description alarmID Int Alarm ID, starting from 1, 1~maximum supported number of alarms delayMin Int Delay in minutes name String Alarm name, maximum 23 bytes isOpenRepeat Bool Repeatpublic var repeats = Set()Repeat switch repeats HashSetSet() IDOWeek set repeatTimes Int Number of repeated alarmsNumber of times the alarm is repeated, delay switch, set to 0 to turn off, set to a number to repeat that many times status IDOAlarmStatus 0: Hidden (deleted) 1: Displayed -1:Invailed type IDOAlarmType Alarm type IDOWeek Android enum class IDOWeek(val rawValue: Int):Serializable { MONDAY(0), TUESDAY(1), WEDNESDAY(2), THURSDAY(3), FRIDAY(4), SATURDAY(5), SUNDAY(6); } iOS enum IDOWeek: Int { case monday = 0, tuesday, wednesday, thursday, friday, saturday, sunday } IDOAlarmStatus Android enum class IDOAlarmStatus(val rawValue: Int) { INVALID(-1), HIDDEN(0), DISPLAYED(1); } iOS public enum IDOAlarmStatus: Int { case invalid = -1 case hidden = 0 case displayed = 1 } IDOAlarmType Android enum class IDOAlarmType(val rawValue: Int) { WAKEUP(0x00), SLEEP(0x01), EXERCISE(0x02), MEDICATION(0x03), DATE(0x04), GATHERING(0x05), MEETING(0x06), OTHER(0x07); } iOS public enum IDOAlarmType: Int { case wakeUp = 0x00 case sleep = 0x01 case exercise = 0x02 case medication = 0x03 case date = 0x04 case gathering = 0x05 case meeting = 0x06 case other = 0x07 } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOAllHealthSwitchStateModel.html":{"url":"doc/model/IDOAllHealthSwitchStateModel.html","title":"IDOAllHealthSwitchStateModel","keywords":"","body":"IDOAllHealthSwitchStateModel Attribute Type Description heartMode Int Continuous heart rate measurement switch:1:On0:Off-1:Not Support pressureMode Int Automatic blood pressure measurement switch1:On0:Off-1:Not Support spo2Mode Int Automatic blood oxygen measurement switch1:On0:Off-1:Not Support scienceMode Int Scientific sleep switch2:scientific sleep mode1:normal sleep mode-1:Not Support temperatureMode Int Nighttime temperature switch1:On0:Off-1:Not Support noiseMode Int Noise switch1:On0:Off-1:Not Support menstrualMode Int Menstrual cycle switch1:On0:Off-1:Not Support walkMode Int Walking reminder switch1:On0:Off-1:Not Support handwashingMode Int Handwashing reminder switch1:On0:Off-1:Not Support respirRateState Int Respiration rate switch1:On0:Off-1:Not Support bodyPowerState Int Body battery switch1:On0:Off-1:Not Support drinkwaterMode Int Drink water reminder switch1:On0:Off-1:Not Support heartmodeNotifyFlag Int Heart rate notification status:0 for invalid1 for allow notification2 for silent notification3 for disable notification pressureNotifyFlag Int Blood pressure notification status:0 for invalid1 for allow notification2 for silent notification3 for disable notification spo2NotifyFlag Int Blood oxygen notification status:0 for invalid1 for allow notification2 for silent notification3 for disable notification menstrualNotifyFlag Int Menstrual cycle notification status:0 for invalid1 for allow notification2 for silent notification3 for disable notification guidanceNotifyFlag Int Fitness guidance notification status:0 for invalid1 for allow notification2 for silent notification3 for disable notification reminderNotifyFlag Int Reminder notification status:0 for invalid1 for allow notification2 for silent notification3 for disable notification Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOBatteryInfoModel.html":{"url":"doc/model/IDOBatteryInfoModel.html","title":"IDOBatteryInfoModel","keywords":"","body":"IDOBatteryInfoModel Attribute Type Description type Int Battery type: 0: Rechargeable lithium battery, 1: Button battery voltage Int Voltage status Int Battery status0: Normal1: Charging2: Charging complete3: Low battery level Int Level lastChargingYear Int Last charging time, year lastChargingMonth Int Last charging time, month lastChargingDay Int Last charging time, day lastChargingHour Int Last charging time, hour lastChargingMinute Int Last charging time, minute lastChargingSecond Int Last charging time, second mode Int 0: Invalid1: Normal mode (non-power saving mode)2: Power saving mode Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOBleBeepModel.html":{"url":"doc/model/IDOBleBeepModel.html","title":"IDOBleBeepModel","keywords":"","body":"IDOBleBeepModel Attribute Type Description errCode Int Error code, 0 for success, non-zero for failure items List[IDOBleBeepItem] IDOBleBeepItem Attribute Type Description name String name Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOBleVoiceParamModel.html":{"url":"doc/model/IDOBleVoiceParamModel.html","title":"IDOBleVoiceParamModel","keywords":"","body":"IDOBleVoiceParamModel Attribute Type Description totalVolume Int Total volume currentVolume Int Current volume Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOBpAlgVersionModel.html":{"url":"doc/model/IDOBpAlgVersionModel.html","title":"IDOBpAlgVersionModel","keywords":"","body":"IDOBpAlgVersionModel Attribute Type Description bpVersion1 Int Firmware blood pressure algorithm version1 bpVersion2 Int Firmware blood pressure algorithm version2 bpVersion3 Int Firmware blood pressure algorithm version3 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOBpCalControlModel.html":{"url":"doc/model/IDOBpCalControlModel.html","title":"IDOBpCalControlModel","keywords":"","body":"IDOBpCalControlModel Attribute Type Description errorCode Int Error code: 0 for success, non-zero for failure operate Int Operation0: Invalid1: Start blood pressure calibration2: Stop blood pressure calibration3: Get feature vector sbpPpgFeatureNum Int Number of high blood pressure PPG feature vectorsValid when operate=3 dbpPpgFeatureNum Int Number of low blood pressure PPG feature vectorsValid when operate=3 sbpPpgFeatureItems List Hypertension PPG eigenvector set dbpPpgFeatureItems List Hypotensive PPG feature vector set Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOBpCalibrationModel.html":{"url":"doc/model/IDOBpCalibrationModel.html","title":"IDOBpCalibrationModel","keywords":"","body":"IDOBpCalibrationModel Attribute Type Description retCode Int 0: Success1: Successfully entered calibration mode, calibration in progress2: In exercise mode3: Device busy4: Invalid status Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOBpCalibrationParamModel.html":{"url":"doc/model/IDOBpCalibrationParamModel.html","title":"IDOBpCalibrationParamModel","keywords":"","body":"IDOBpCalibrationParamModel Attribute Type Description flag Int 1: Blood pressure calibration settings2: Blood pressure calibration query result diastolic Int Systolic pressure systolic Int Diastolic pressure Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOBpMeasurementModel.html":{"url":"doc/model/IDOBpMeasurementModel.html","title":"IDOBpMeasurementModel","keywords":"","body":"IDOBpMeasurementModel Attribute Type Description status Int 0: Not supported1: Measurement in progress2: Measurement successful3: Measurement failed4: Device in exercise mode systolicBp Int Systolic blood pressure diastolicBp Int Diastolic blood pressure Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOBpMeasurementParamModel.html":{"url":"doc/model/IDOBpMeasurementParamModel.html","title":"IDOBpMeasurementParamModel","keywords":"","body":"IDOBpMeasurementParamModel Attribute Type Description flag Int 1: Start measurement2: End measurement3: Get blood pressure data Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOBtNoticeModel.html":{"url":"doc/model/IDOBtNoticeModel.html","title":"IDOBtNoticeModel","keywords":"","body":"IDOBtNoticeModel Attribute Type Description btConnectStates Int 1: BT connection status on0: BT connection status off-1: Invalid btPairStates Int 1: BT pairing status on0: BT pairing status off-1: Invalid a2dpConnectStates Int 1: A2DP connection status on0: A2DP connection status off-1: Invalid hfpConnectStates Int 1: HFP connection status on0: HFP connection status off-1: Invalid Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOCmdGetResponseModel.html":{"url":"doc/model/IDOCmdGetResponseModel.html","title":"IDOCmdGetResponseModel","keywords":"","body":"IDOCmdGetResponseModel Attribute Type Description onOff Int Switch status1: On0: Off-1:Not Support Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOCmdSetResponseModel.html":{"url":"doc/model/IDOCmdSetResponseModel.html","title":"IDOCmdSetResponseModel","keywords":"","body":"IDOCmdSetResponseModel Attribute Type Description isSuccess Int 0: Failed1: Success Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOContactItem.html":{"url":"doc/model/IDOContactItem.html","title":"IDOContactItem","keywords":"","body":"IDOContactItem Attribute Type Description phone String Contact phone number content, maximum of 14 bytes + '\\0' line break name String Contact name content, maximum of 31 bytes + '\\0' line break Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOContactReviseTimeModel.html":{"url":"doc/model/IDOContactReviseTimeModel.html","title":"IDOContactReviseTimeModel","keywords":"","body":"IDOContactReviseTimeModel Attribute Type Description result Int 0: No need to send contact file1: Need to send contact data Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDODataTranConfigModel.html":{"url":"doc/model/IDODataTranConfigModel.html","title":"IDODataTranConfigModel","keywords":"","body":"IDODataTranConfigModel Attribute Type Description errCode Int Error code0: NormalNon-zero: Error type Int Icon type corresponding to the activity type0: Invalid1: Small icon for activity2: Large icon for activity3: Animated icon for activity4: Medium-sized icons for activity evtType Int Event type0: InvalidFor example, 1: SMS, 2: Email, 3: WeChat, etc. sportType Int Activity type0: InvalidActivity mode type, 1: Walking, 2: Running, etc. iconWidth Int Width required by the firmware icon (determined by type and evt_type/sport_type) iconHeight Int Height required by the firmware icon (determined by type and evt_type/sport_type) format Int Color format blockSize Int Compression block size bigSportsNum Int Number of big sports icons msgNum Int Number of message icons smallSportsAndAnimationNum Int Number of small sports and animation icons mediumNum Int Number of medium-sized icons Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDODateTimeParamModel.html":{"url":"doc/model/IDODateTimeParamModel.html","title":"IDODateTimeParamModel","keywords":"","body":"IDODateTimeParamModel Attribute Type Description year Int year monuth Int monuth day Int day hour Int hour minute Int minute second Int second week Int Week: 0-6 for Monday to Sunday timeZone Int Timezone in a 24-hour format: 0-12 for East ,13-24 for West (Not enabled, assign 0) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDODeviceLogStateModel.html":{"url":"doc/model/IDODeviceLogStateModel.html","title":"IDODeviceLogStateModel","keywords":"","body":"IDODeviceLogStateModel Attribute Type Description type Int 0: No corresponding log1: Firmware restart log2: Firmware exception errCode Int Error code of firmware restart log, 0 is normal Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDODeviceNotificationModel.html":{"url":"doc/model/IDODeviceNotificationModel.html","title":"IDODeviceNotificationModel","keywords":"","body":"IDODeviceNotificationModel Properties Type Description type Int Monitoring device status 0 invalid 1 The bracelet has been unbound 2 Heart rate mode changes 3 Blood oxygen generation data has changed 4 Pressure Data is generated and changed 5 Exits during Alexa recognition process 6 The firmware initiates a factory reset and notifies the app of a pop-up reminder 7 The app needs to enter the camera interface (customized by TIT01) 8 SOS event notification (205 Turkey customized) 9 The alarm clock set by Alexa and the firmware modification need to send the corresponding notification bit to the app. After receiving it, the app will send the alarm clock command to obtain V3 10 The firmware has a deletion schedule reminder , the app (cmd = 0x33, cmd_id = 0x36) queries the list and updates the corresponding list data 11 The firmware side has modified the corresponding table plate style, and notifies the app to obtain it (command_id is 0x33, key is 0x5000 ) 12 Firmware notification ios update notification icon and name 13 Firmware notification app icon has been updated, notify app to obtain the updated icon status 14 Firmware request to reset the weather, app receives it, Send weather data 15 The number of firmware steps increases by 2000 steps each time. The device requests the app to synchronize data, and the app calls the synchronization interface 16 The firmware detects the end of sleep, requests the app to synchronize sleep data, and the app calls the synchronization interface to synchronize. 17 Modify the firmware's three-ring data and notify the app to update the three-ring data 18 Send a reminder when the firmware is fully charged. After the app receives it, the notification bar displays that the device is fully charged 19 After finishing the exercise, measure manually After heart rate, blood oxygen measurement, and pressure measurement, the device automatically requests synchronization.Check the link status first. If the connection is not connected, this synchronization will not be executed. After the next automatic synchronization condition is met, it will be determined again to initiate the synchronization request 20 The firmware modifies the heart rate notification status type, pressure notification status type, blood oxygen notification status type, menstrual cycle notification status type, health guidance notification status type, and reminder notification status type to notify the app to update heart rate, pressure, and blood pressure. Oxygen,Menstrual cycle, health guidance, reminder notification status type 21 The firmware pressure value calculation is completed, and the app is notified to obtain the pressure value 22 The firmware notifies the app that the firmware pressure calibration failed (the firmware exits measurement Interface/detection failure/detection timeout/not worn) 23 When the firmware generates a reminder that the heart rate is too high or too low, it notifies the app to obtain heart rate data 24 The firmware notifies the app that bt Bluetooth is connected 25 Firmware Notify app bt Bluetooth disconnection 26 Firmware Bluetooth call starts 27 Firmware Bluetooth call ends 28 The new version of the firmware sends a notification command every 4 minutes and 30 seconds for repairing ios. It will be displayed Offline problems 29 Notify the app that exercise has started 30 Notify the app that exercise has ended 31 Firmware restart sends notification to app (app receives notification and needs to obtain firmware version information) 32 Device is idle time (aleax is not used), a notification needs to be reported to the app (the time interval is 1 hour) 33 The firmware completes the space arrangement and notifies the app to continue downloading the watch face file 34 The firmware notifies the app to end the search for the bracelet command (corresponding to 6.3 Find the bracelet) 35 Notify the app when the firmware enters the power saving mode 36 Notify the app when the firmware exits the power saving mode 37 The firmware notification requests the app to send and set the GPS hot start parameters 38 The firmware completes the transmission of raw data and notifies the app to obtain the characteristic vector information 39 The firmware notifies the app that the firmware blood pressure calibration failed (firmware exits the measurement interface/detection failed/detection timed out/not worn) 40 The firmware completes the transmission of raw data , there is no feature vector information, notifying the app that data collection is completed 41 v3 health data synchronization single data completion notification (android internal use) 42 Firmware finishing gps data space completion notification app to issue gps files 43 Firmware upgrade EPO.dat file failed, notify the app to deliver the EPO.dat file again (at most once) 44 Firmware upgrade EPO.dat file successful 45 Firmware upgrade GPS failed, notify the app to retransmit /> 46 Firmware upgrade to GPS successful notifyType Int 1 Alarm clock has been modified 2 Firmware overheating abnormality alarm 4 Screen brightness parameters have been modified 8 Wrist raising parameters have been modified16 Do not disturb mode acquisition 32 Mobile phone volume distribution msgId Int Each message corresponds to an ID msgNotice Int 0 Invalid 1 Custom SMS 1 (in a meeting, contact you later) 2 Custom SMS 2 errorIndex Int 01 ACC acceleration 02 PPG heart rate 03 TP touch 04 FLASH05 overheating (PPG) 06 air pressure 07 GPS 08 geomagnetism controlEvt Int 551 Device control app music starts 552 Device control app music pauses 553 Device control app music stops 554 Device control app music previous song 555 Device control The next song of the app music 556 The device controls the app to take a single shot 557 The device controls the app to take continuous shots 558 The device controls the app volume to increase 559 The device controls the app to decrease the volume 560 Device control app opens the camera 561 Device control app closes the camera 562 Device control app answers the call 563 Device control app rejects the call 565 Device control app music volume percentage 570 The device control app starts searching for the mobile phone 571 The device control app searches for the mobile phone ends 572 The device notification app starts anti-lost 574 The device notification app starts a one-click call 575 Equipment Notification sensor data 576 Device notification app operation type 577 Device notification app data update 578 Device request version check 579 Device request ota 580 Device notification app SMS information 581 Device control app camera 591 Device notification firmware speaker volume modification controlJson String Control event return value (only available for some events) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-12-28 09:30:42 "},"doc/model/IDODisplayModeParamModel.html":{"url":"doc/model/IDODisplayModeParamModel.html","title":"IDODisplayModeParamModel","keywords":"","body":"IDODisplayModeParamModel Attribute Type Description mode Int Mode0: Default1: Landscape2: Portrait3: Flipped (180 degrees) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDODownloadLanguageModel.html":{"url":"doc/model/IDODownloadLanguageModel.html","title":"IDODownloadLanguageModel","keywords":"","body":"IDODownloadLanguageModel Attribute Type Description useLang Int Current used language defaultLang Int Default language fixedLang Int Number of fixed stored languages maxStorageLang Int Maximum stored languages langArray List IDODownloadLanguageType set Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDODownloadLanguageType.html":{"url":"doc/model/IDODownloadLanguageType.html","title":"IDODownloadLanguageType","keywords":"","body":"IDODownloadLanguageType Attribute Type Description type Int Invalid: 0, English: 1, English: 2, French: 3, 4, Italian, German: 5, Spanish: 6, 7, the Japanese: polish: 8, Czech: 9, Romania: 10, Lithuanian: 11, Dutch: 12, Slovenia, 13, Hungarian :14, Russian :15, Ukrainian :16, Slovak :17, Danish :18, Croatian :19, Indonesian :20, Korean :21, Hindi :22, Portuguese :23, Turkish :24, Thai :25, Vietnamese :26, Burmese :27, Filipino :28, Traditional Chinese :29, Greek :30, Arabic :31, Swedish :32, Finnish :33, Persian :34, Norwegian :35 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOErrorRecordModel.html":{"url":"doc/model/IDOErrorRecordModel.html","title":"IDOErrorRecordModel","keywords":"","body":"IDOErrorRecordModel Attribute Type Description type Int 0 Query1 Clear Log resetFlag Int 0 Normal1 Hard Faul2 Watchdog service3 Assertion reset4 Power-off service5 Other exceptions hwError Int Hardware error code0 Normal1 Accelerometer error2 Heart rate error3 TP error4 Flash error Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOFitnessGuidanceParamModel.html":{"url":"doc/model/IDOFitnessGuidanceParamModel.html","title":"IDOFitnessGuidanceParamModel","keywords":"","body":"IDOFitnessGuidanceParamModel Attribute Type Description mode Int Fitness guidance mode switch1: On0: Off startHour Int Start hour startMinute Int Start minute endHour Int End hour endMinute Int End minute notifyFlag Int Notification type0: Invalid1: Allow2: Silent3: Disable goMode Int Reminders to move switch1: On0: Off repeats Set Repeat isOpenRepeat Bool Repeat switch targetSteps Int Target steps Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOFlashBinInfoModel.html":{"url":"doc/model/IDOFlashBinInfoModel.html","title":"IDOFlashBinInfoModel","keywords":"","body":"IDOFlashBinInfoModel Attribute Type Description status Int Status: 0 - Normal, 1 - Invalid font, checksum error, 2 - Version mismatch version Int Protocol version （No assignment is required） matchVersion Int Font library versionprivate let version: IntMatching version required by the firmware checkCode Int Font library checksum code Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOFuncSimpleFileOptModel.html":{"url":"doc/model/IDOFuncSimpleFileOptModel.html","title":"IDOFuncSimpleFileOptModel","keywords":"","body":"IDOFuncSimpleFileOptModel Attribute Type Description error Int Error code0 for success, others for errors operate Int Operation type0: Get1: Overwrite2: Delete index Int Index number Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOFuncSimpleFileOptParamModel.html":{"url":"doc/model/IDOFuncSimpleFileOptParamModel.html","title":"IDOFuncSimpleFileOptParamModel","keywords":"","body":"IDOFuncSimpleFileOptParamModel Attribute Type Description operate Int Operation type0: Get1: Overwrite2: Delete3: Copy index Int Index number destIndex Int Destination index, only used for copying, invalid for other cases Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOGpsControlModel.html":{"url":"doc/model/IDOGpsControlModel.html","title":"IDOGpsControlModel","keywords":"","body":"IDOGpsControlModel Attribute Type Description type Int 1: Enable log2: Disable log3: Write AGPS data4: Erase AGPS data5: Write GPS firmware status Int 0: Invalid1: Command in progress2: Completed errorCode Int 0 for success, non-zero for failure Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOGpsControlParamModel.html":{"url":"doc/model/IDOGpsControlParamModel.html","title":"IDOGpsControlParamModel","keywords":"","body":"IDOGpsControlParamModel Attribute Type Description operate Int 1: Control2: Query type Int 1: Enable log2: Disable log3: Write AGPS data4: Erase AGPS data5: Write GPS firmware Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOGpsInfoModel.html":{"url":"doc/model/IDOGpsInfoModel.html","title":"IDOGpsInfoModel","keywords":"","body":"IDOGpsInfoModel Attribute Type Description errCode Int GPS error code0 - Normal, non-zero - Exceptional fwVersion Int GPS firmware version agpsInfo Int Validity period of AGPS (Assisted GPS) agpsErrCode Int AGPS error code utcYear Int UTC year utcMonth Int UTC month utcDay Int UTC day utcHour Int UTC hour utcMinute Int UTC minute startMode Int Start mode1 - Cold start2 - Hot start gns Int Positioning satellite selection1 - GPS2 - GLONASS3 - GPS + GLONASS fixStartBit Int Fix start bitDefault 0, used for debugging Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOGpsInfoModelItem.html":{"url":"doc/model/IDOGpsInfoModelItem.html","title":"IDOGpsInfoModelItem","keywords":"","body":"IDOGpsInfoModelItem Attribute Type Description type Int Training type186: Rest plan187: Outdoor running plan188: Indoor running plan189: Indoor fitness plan num Int Number of actionsNote: The number of actions is zero when resting, and non-zero for other actions items List[IDOItemItem] IDOItemItem set Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOGpsStatusModel.html":{"url":"doc/model/IDOGpsStatusModel.html","title":"IDOGpsStatusModel","keywords":"","body":"IDOGpsStatusModel Attribute Type Description gpsRunStatus Int GPS running status0 - Not running1 - Searching for satellites2 - Tracking agpsIsValid Int Validity of AGPS (Assisted GPS) in hoursNon-zero values indicate validity Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOHandWashingReminderParamModel.html":{"url":"doc/model/IDOHandWashingReminderParamModel.html","title":"IDOHandWashingReminderParamModel","keywords":"","body":"IDOHandWashingReminderParamModel Attribute Type Description onOff Int 0: Off1: OnDefault is off startHour Int Start hour of the reminder startMinute Int Start minute of the reminder endHour Int End hour of the reminder endMinute Int End minute of the reminder repeats HashSetSet() IDOWeek set isOpenRepeat Bool Repeat switch interval Int Reminder interval in minutesDefault is 60 minutes IDOWeek Android enum class IDOWeek(val rawValue: Int):Serializable { MONDAY(0), TUESDAY(1), WEDNESDAY(2), THURSDAY(3), FRIDAY(4), SATURDAY(5), SUNDAY(6); } iOS enum IDOWeek: Int { case monday = 0, tuesday, wednesday, thursday, friday, saturday, sunday } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOHeartModeModel.html":{"url":"doc/model/IDOHeartModeModel.html","title":"IDOHeartModeModel","keywords":"","body":"IDOHeartModeModel Attribute Type Description updateTime Int Update time as a Unix timestamp in seconds. If equal to 0, it means to get the current UTC timestamp. mode Int Mode0: Off1: Auto (5 minutes)2: Continuous monitoring (5 seconds)3: Manual mode (disables auto)4: Default type, firmware automatically sets to default mode after setting5: Set the corresponding measurement interval6: Intelligent Heart Rate Mode (ID206)Note:1. If the function setSetV3HeartInterval is configured, Mode 0, Mode 1, and Mode 2 will be ineffective.2. When configuring with fast settings, setting setSetV3HeartInterval will activate Mode 53. When setting continuous heart rate, if the function setSetV3HeartInterval is configured, the corresponding mode is Mode 5. hasTimeRange Int Whether there is a time range. 0: No, 1: Yes measurementInterval Int Measurement interval in seconds getSECMode Int Currently supported heart rate types by the watchall 0 invalid valuesBit0: 5s modeNote: This is returned as 0 if setSetV3HeartInterval is not enabled in the firmware getMinMode Int Currently supported heart rate types by the watch,all 0:invalid valuesBit0: 1 minutebit1: 3 minutesbit2: 5 minutesbit3: 10 minutesbit4: 30 minutesbit5: 285 mode,bit6: 15 minute modeNote: This is returned as 0 if setSetV3HeartInterval is not enabled in the firmware startHour Int Start time, hour startMinute Int Start time, minute endHour Int End time, hour endMinute Int End time, minute notifyFlag Int Notification type:0: Invalid1: Allow notifications2: Silent notifications3: Close notificationsNote: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom highHeartMode Int 1: Enable smart high heart rate reminder0: OffNote: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom lowHeartMode Int 1: Enable smart low heart rate reminder0: OffNote: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom highHeartValue Int Smart high heart rate reminder thresholdNote: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom lowHeartValue Int Smart low heart rate reminder thresholdNote: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOHeartModeParamModel.html":{"url":"doc/model/IDOHeartModeParamModel.html","title":"IDOHeartModeParamModel","keywords":"","body":"IDOHeartModeParamModel Attribute Type Description updateTime Int Update time as a Unix timestamp in seconds. If equal to 0, it means to get the current UTC timestamp. mode Int Mode0: Off1: Auto (5 minutes)2: Continuous monitoring (5 seconds)3: Manual mode (disables auto)4: Default type, firmware automatically sets to default mode after setting5: Set the corresponding measurement interval6: Intelligent Heart Rate Mode (ID206)Note:1. If the function setSetV3HeartInterval is configured, Mode 0, Mode 1, and Mode 2 will be ineffective.2. When configuring with fast settings, setting setSetV3HeartInterval will activate Mode 53. When setting continuous heart rate, if the function setSetV3HeartInterval is configured, the corresponding mode is Mode 5. hasTimeRange Int Whether there is a time range. 0: No, 1: Yes measurementInterval Int Measurement interval in seconds startHour Int Start time, hour startMinute Int Start time, minute endHour Int End time, hour endMinute Int End time, minute notifyFlag Int Notification type:0: Invalid1: Allow notifications2: Silent notifications3: Close notificationsNote: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom highHeartMode Int 1: Enable smart high heart rate reminder0: OffNote: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom lowHeartMode Int 1: Enable smart low heart rate reminder0: OffNote: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom highHeartValue Int Smart high heart rate reminder thresholdNote: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom lowHeartValue Int Smart low heart rate reminder thresholdNote: This is ineffective if the firmware does not enable v3HeartSetRateModeCustom Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOHeartRateModeModel.html":{"url":"doc/model/IDOHeartRateModeModel.html","title":"IDOHeartRateModeModel","keywords":"","body":"IDOHeartRateModeModel Attribute Type Description mode Int 0: Turned Off1: Manual Mode2: Automatic3: Continous Monitoring-1:Invalid hasTimeRange Int Whether there is a time range 0: No 1: Yes measurementInterval Int Measurement interval (in minutes) startHour Int Start time, hour startMinute Int Start time, minute endHour Int End time, hour endMinute Int End time, minute Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOHeartRateModeParamModel.html":{"url":"doc/model/IDOHeartRateModeParamModel.html","title":"IDOHeartRateModeParamModel","keywords":"","body":"IDOHeartRateModeParamModel Attribute Type Description mode Int 0: Off1: Auto(5min)2: Continuous Monitoring(5sec)3: Manual Mode hasTimeRange Int Time Range0: No1: Yes startHour Int Start Hour (24-hour format, 0-23) startMinute Int Start Minute (0-59) endHour Int End Hour endMinute Int End Minute measurementInterval Int Measurement IntervalUnit: minute Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOHeartRateModeSmartParamModel.html":{"url":"doc/model/IDOHeartRateModeSmartParamModel.html","title":"IDOHeartRateModeSmartParamModel","keywords":"","body":"IDOHeartRateModeSmartParamModel Attribute Type Description mode Int Switch0:Off1:On notifyFlag Int Notification Type0: Invalid1: Allow Notifications2: Silent Notifications3: Disable Notifications highHeartMode Int 1: Enable Smart High Heart Rate Alert0: Disable lowHeartMode Int 1: Enable Smart Low Heart Rate Alert0: Disable highHeartValue Int Smart High Heart Rate Alert Threshold lowHeartValue Int Smart Low Heart Rate Alert Threshold startHour Int Start Time of Heart Rate Monitoring (hour) startMinute Int Start Time of Heart Rate Monitoring (minute) endHour Int End Time of Heart Rate Monitoring (hour) endMinute Int End Time of Heart Rate Monitoring (minute) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOHistoricalMenstruationParamItem.html":{"url":"doc/model/IDOHistoricalMenstruationParamItem.html","title":"IDOHistoricalMenstruationParamItem","keywords":"","body":"IDOHistoricalMenstruationParamItem Attribute Type Description year Int Year in which the menstrual begins mon Int Month in which the menstrual begins day Int Day in which the menstrual begins menstrualDay Int Length of menstrual(days) cycleDay Int Length of menstrual cycle (days) ovulationIntervalDay Int The interval from the start of the next menstrual period to the ovulation day is usually 14 days when the Function ovulationBeforeDay Int The number of days of fertility before the ovulation day is usually 5 when the Function ovulationAfterDay Int The number of days of fertility after the ovulation day is usually 5 when the Function Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOHistoricalMenstruationParamModel.html":{"url":"doc/model/IDOHistoricalMenstruationParamModel.html","title":"IDOHistoricalMenstruationParamModel","keywords":"","body":"IDOHistoricalMenstruationParamModel Attribute Type Description avgMenstrualDay Int Average length of menstrual cycle Uint:day avgCycleDay Int Average length of menstrual cycle Uint:day items List [IDOHistoricalMenstruationParamItem] IDOHistoricalMenstruationParamItem set Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOHotStartParamModel.html":{"url":"doc/model/IDOHotStartParamModel.html","title":"IDOHotStartParamModel","keywords":"","body":"IDOHotStartParamModel Attribute Type Description tcxoOffset Int TCXO offset longitude Int Longitude (multiplied by 10^6) latitude Int Latitude (multiplied by 10^6) altitude Int Altitude (multiplied by 10) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOItemItem.html":{"url":"doc/model/IDOItemItem.html","title":"IDOItemItem","keywords":"","body":"IDOItemItem Attribute Type Description type Int Action type1: Fast walk2: Jog3: Moderate run4: Fast run time Int Target time Unit: seconds heightHeart Int Low heart rate range lowHeart Int High heart rate range Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOLanguageLibraryItem.html":{"url":"doc/model/IDOLanguageLibraryItem.html","title":"IDOLanguageLibraryItem","keywords":"","body":"IDOLanguageLibraryItem Attribute Type Description languageType IDOLanguageType Language type languageVersion Int Language version number Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOLanguageLibraryModel.html":{"url":"doc/model/IDOLanguageLibraryModel.html","title":"IDOLanguageLibraryModel","keywords":"","body":"IDOLanguageLibraryModel Attribute Type Description useLang Int Currently used language defaultLang Int Default language fixedLang Int Number of fixed storage languages maxStorageLang Int Maximum storage languages items List[IDOLanguageLibraryItem] IDOLanguageLibraryIte set itemsUser List[IDOLanguageLibraryItem] IDOLanguageLibraryIte set Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOLiveDataModel.html":{"url":"doc/model/IDOLiveDataModel.html","title":"IDOLiveDataModel","keywords":"","body":"IDOLiveDataModel Attribute Type Description totalStep Int Total steps totalCalories Int Total calories (in kilocalories) totalDistances Int Total distance (in meters) totalActiveTime Int Total active time (in seconds) heartRate Int Heart rate data (in beats per minute) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOLongSitParamModel.html":{"url":"doc/model/IDOLongSitParamModel.html","title":"IDOLongSitParamModel","keywords":"","body":"IDOLongSitParamModel Attribute Type Description startHour Int Start Time of Sedentary Reminder (hour) startMinute Int Start Time of Sedentary Reminder (minute) endHour Int End Time of Sedentary Reminder (hour) endMinute Int End Time of Sedentary Reminder (minute) interval Int Interval (in minutes)Value should be greater than 15 minutes repetitions Int Repetitions and Switchbit0: 0 means off, 1 means onbit1-7: 0 means no repetition, 1 means repetition Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOLostFindParamModel.html":{"url":"doc/model/IDOLostFindParamModel.html","title":"IDOLostFindParamModel","keywords":"","body":"IDOLostFindParamModel Attribute Type Description mode Int Mode0: No anti-lost1: Close-range anti-lost2: Medium-range anti-lost3: Long-range anti-lost Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOMainSportGoalModel.html":{"url":"doc/model/IDOMainSportGoalModel.html","title":"IDOMainSportGoalModel","keywords":"","body":"IDOMainSportGoalModel Attribute Type Description calorie Int Activity calorie goal (in kilocalories)Requires firmware to enable function table setCalorieGoal distance Int Distance goal (in meters) calorieMin Int Minimum activity calorie value calorieMax Int Maximum activity calorie value midHighTimeGoal Int Mid-high sport time goal (in seconds)Requires firmware to enable function table setMidHighTimeGoal walkGoalTime Int Goal time(in hour) timeGoalType Int 0: Invalid1: Daily goal2: Weekly goalRequires firmware to enable function table getSupportSetGetTimeGoalTypeV2 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-20 17:49:59 "},"doc/model/IDOMainUISortItem.html":{"url":"doc/model/IDOMainUISortItem.html","title":"IDOMainUISortItem","keywords":"","body":"IDOMainUISortItem Attribute Type Description locationX Int Coordinate x-axis, starting from 1 locationY Int Coordinate y-axis, starting from 1One y-axis represents a horizontal grid sizeType Int 0: Invalid 1: Large icon 2: Small icon widgetsType Int Types of controls0: Invalid1: Week/Date2: Steps3: Distance4: Calories5: Heart Rate6: Battery supportSizeType Int Editable icon types supported by the firmware0: Invalid1: Large icon2: Small icon3: Large icon + Small icon Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOMainUISortModel.html":{"url":"doc/model/IDOMainUISortModel.html","title":"IDOMainUISortModel","keywords":"","body":"IDOMainUISortModel Attribute Type Description errCode Int 0: Success, Non-zero: Failure operate Int Operation0: Invalid 1: Query 2: Set allNum Int Number of currently displayed list in firmware supportItems List[IDOMainUISortSupportItem] IDOMainUISortSupportItem set items List[IDOMainUISortItem] IDOMainUISortItem set locationX Int locationX Start with 1 locationY Int locationY Start with 1 sizeType Int Icon type 0: invalid 1: large 2: small widgetsType Int Refer to the list of widget types widgets_type List of widget types 枚举值 含义 0 Invalid 1-100 is the small icon 1 The third ring (small icon) 2 Steps 3 Last activity 4 Music 5 Weather 6 Heart rate 7 Pressure 8 Sleep 9 Alexa 10 Body temperature 11 Blood oxygen 12 The timer 13 Alarm clock 14 Event reminder (current schedule reminder) 15 Noise 16 Electricity quantity 17 Telephone number (contact person) 18 Universal time Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOMainUISortParamModel.html":{"url":"doc/model/IDOMainUISortParamModel.html","title":"IDOMainUISortParamModel","keywords":"","body":"IDOMainUISortParamModel Attribute Type Description operate Int Operation0: Invalid 1: Query 2: Set locationX Int Coordinate x-axis, starting from 1 locationY Int Coordinate y-axis, starting from 1One y-axis represents a horizontal grid sizeType Int 0: Invalid 1: Large icon 2: Small icon widgetsType Int Types of controls0: Invalid1: Week/Date2: Steps3: Distance4: Calories5: Heart Rate6: Battery items items: List[int] [int] set Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOMainUISortSupportItem.html":{"url":"doc/model/IDOMainUISortSupportItem.html","title":"IDOMainUISortSupportItem","keywords":"","body":"IDOMainUISortSupportItem Attribute Type Description widgetsType Int Types of controls0: Invalid1: Week/Date2: Steps3: Distance4: Calories5: Heart Rate6: Battery supportSizeType Int Editable icon types supported by the firmware0: Invalid1: Large icon2: Small icon3: Large icon + Small icon Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOMtuInfoModel.html":{"url":"doc/model/IDOMtuInfoModel.html","title":"IDOMtuInfoModel","keywords":"","body":"IDOMtuInfoModel Attribute Type Description status Int 0: Data is valid1: Data is invalid, wait a while and try again. In case of invalid data, MTU is 20. rxMtu Int MTU for app receiving data txMtu Int MTU for app sending data phySpeed Int Physical layer speed0: Invalid1000: 1M2000: 2M512: 512K dleLength Int DLE length0: Not supported Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOMusicControlParamModel.html":{"url":"doc/model/IDOMusicControlParamModel.html","title":"IDOMusicControlParamModel","keywords":"","body":"IDOMusicControlParamModel Attribute Type Description status Int Status: 0: Invalid 1: Play 2: Pause 3: Stop curTimeSecond Int Current play time Unit:second totalTimeSecond Int Total play time Unit:second musicName String Music name (maximum 63 bytes) singerName String Singer name (maximum 63 bytes)This value is not applicable if v3MusicControl02AddSingerName is not enabled on the firmware Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOMusicFolderItem.html":{"url":"doc/model/IDOMusicFolderItem.html","title":"IDOMusicFolderItem","keywords":"","body":"IDOMusicFolderItem Attribute Type Description folderID Int Playlist (folder) id, ranging from 1 to 10 musicNum Int Number of songs in the playlist, maximum of 100 folderName String Playlist (folder) name, maximum of 19 bytes musicIndex List[int] int 集合 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOMusicInfoModel.html":{"url":"doc/model/IDOMusicInfoModel.html","title":"IDOMusicInfoModel","keywords":"","body":"IDOMusicInfoModel Attribute Type Description allMemory Int Firmware SDK card informationTotal spaceUint:Byte usedMemory Int Firmware SDK card informationCurrent used space in bytesUint:Byte usefulMemory Int Firmware SDK card informationAvailable spaceUint:Byte folderItems List[IDOMusicFolderItem] IDOMusicFolderItem set musicItems List[IDOMusicItem] IDOMusicItem set Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOMusicItem.html":{"url":"doc/model/IDOMusicItem.html","title":"IDOMusicItem","keywords":"","body":"IDOMusicItem Attribute Type Description musicID Int Music id, starting from 1 musicMemory Int Space occupied by the music musicName String Music name, maximum of 44 bytes singerName String Singer name, maximum of 29 bytes Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOMusicOnOffParamModel.html":{"url":"doc/model/IDOMusicOnOffParamModel.html","title":"IDOMusicOnOffParamModel","keywords":"","body":"IDOMusicOnOffParamModel Attribute Type Description onOff Int 1: On0: Off showInfoStatus Int Show song information switch1: On0: OffRequires firmware support for menu: supportV2SetShowMusicInfoSwitch Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOMusicOpearteParamModel.html":{"url":"doc/model/IDOMusicOpearteParamModel.html","title":"IDOMusicOpearteParamModel","keywords":"","body":"IDOMusicOpearteParamModel Attribute Type Description musicOperate Int Music operation0: Invalid operation1: Delete music2: Add music folderOperate Int Folder (playlist) operation0: Invalid operation1: Delete folder2: Add folder3: Modify playlist4: Import playlist5: Delete music Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOMusicOperateModel.html":{"url":"doc/model/IDOMusicOperateModel.html","title":"IDOMusicOperateModel","keywords":"","body":"IDOMusicOperateModel Attribute Type Description operateType Int Operation type:0: Invalid operation1: Delete music2: Add music3: Delete folder4: Add folder5: Modify playlist6: Import playlist7: Delete music in playlist version Int Firmware SDK card informationTotal space errCode Int 0: Successful; non-zero: Failed musicId Int Music id returned when adding music successfully folderItems List[IDOMusicFolderItem] IDOMusicFolderItem set Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDONotDisturbStatusModel.html":{"url":"doc/model/IDONotDisturbStatusModel.html","title":"IDONotDisturbStatusModel","keywords":"","body":"IDONotDisturbStatusModel Attribute Type Description switchFlag Int Switch status1: On0: Off-1:Not Support startHour Int Start hour startMinute Int Start minute endHour Int End hour endMinute Int End minute haveTimeRange Int Whether there is a time range0: Invalid1: No time range2: Has time range weekRepeat Int Repeatbit0: Invalid(bit1 - bit7): Monday to Sunday noontimeRestOnOff Int Noon rest switch, headset reminder switch1: On0: Off-1:Not Support noontimeRestStartHour Int Reminder start hour noontimeRestStartMinute Int Reminder start minute noontimeRestEndHour Int Reminder end hour noontimeRestEndMinute Int Reminder end minute allDayOnOff Int All day Do Not Disturb switch1: On0: Off-1:Not Support intelligentOnOff Int Intelligent Do Not Disturb switch1: On0: Off-1:Not Support Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDONoticeMesaageParamItem.html":{"url":"doc/model/IDONoticeMesaageParamItem.html","title":"IDONoticeMesaageParamItem","keywords":"","body":"IDONoticeMesaageParamItem Attribute Type Description language Int Language type name String App name corresponding to the country (maximum 49 bytes) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDONoticeMesaageParamModel.html":{"url":"doc/model/IDONoticeMesaageParamModel.html","title":"IDONoticeMesaageParamModel","keywords":"","body":"IDONoticeMesaageParamModel Attribute Type Description verison Int Protocol library version number osPlatform Int System 0: Invalid, 1: Android, 2: iOS evtType Int Current mode 0: Invalid, 1: Message reminder notifyType Int Enumeration type of message Max value: 20000 msgID Int Message ID Valid only if evt_type is message reminder and msg_ID is not 0 appItemsLen Int Number of country and language details contact String Contact name (maximum 63 bytes) phoneNumber String Phone number (maximum 31 bytes) msgData String Message content (maximum 249 bytes) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDONoticeMessageParamModel.html":{"url":"doc/model/IDONoticeMessageParamModel.html","title":"IDONoticeMessageParamModel","keywords":"","body":"IDONoticeMessageParamModel Attribute Type Description verison Int Protocol library version numberDefault version=1Version=2 is the sent format with msg_id evtType Int Message application type msgID Int Message IDIf evt_type is message reminder, mesg_ID is valid supportAnswering Bool Support answering: 1Do not support answering: 0 supportMute Bool Support mute: 1Do not support mute: 0 supportHangUp Bool Support hang up: 1Do not support hang up: 0 contact String Contact name (maximum 63 bytes) phoneNumber String Phone number (maximum 31 bytes) dataText String Message content (maximum 249 bytes) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDONoticeMessageStateItemItem.html":{"url":"doc/model/IDONoticeMessageStateItemItem.html","title":"IDONoticeMessageStateItemItem","keywords":"","body":"IDONoticeMessageStateItemItem Attribute Type Description evtType Int Event type notifyState Int Notification status1: Allow notifications2: Silent notifications3: Close notifications picFlag Int Applies when replying, set this parameter to 00: Invalid1: Download corresponding image2: No corresponding image Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDONoticeMessageStateModel.html":{"url":"doc/model/IDONoticeMessageStateModel.html","title":"IDONoticeMessageStateModel","keywords":"","body":"IDONoticeMessageStateModel Attribute Type Description errCode Int Error code: 0 for success, non-zero for failure operat Int Operation1: Add2: Modify3: Get and Query allOnOff Int Valid for queryingReply with overall notification switch status1: Enable all notifications,0: Disable all notifications-1:Invalid items List[IDONoticeMessageStateItemItem] IDONoticeMessageStateItemItem set musicItems List[IDOMusicItem] IDOMusicItem set Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDONoticeMessageStateParamModel.html":{"url":"doc/model/IDONoticeMessageStateParamModel.html","title":"IDONoticeMessageStateParamModel","keywords":"","body":"IDONoticeMessageStateParamModel Attribute Type Description operat Int Operation 1: Add 2: Modify 3: Get and Query allOnOff Int Add and modify onlyOverall notification switch1: Enable all notifications0: Disable all notifications allSendNum Int Total number of packets sentFor sending more than 100 packets in multiple partsall_send_num = now_send_index for completion of sending nowSendIndex Int Current sequence of sending version Int Version itemsNum Int items number items List[IDONoticeMessageStateItemItem] IDONoticeMessageStateItemItem set Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDONotificationCenterModel.html":{"url":"doc/model/IDONotificationCenterModel.html","title":"IDONotificationCenterModel","keywords":"","body":"IDONotificationCenterModel Attribute Type Description notifySwitch Int Notification reminder switch statusCode Int Status0: Unknown timeout1: Success2: Failed (canceled)3: Firmware pairing timeout errCode Int 0: SuccessNon-zero: Failure Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDONotificationStatusParamModel.html":{"url":"doc/model/IDONotificationStatusParamModel.html","title":"IDONotificationStatusParamModel","keywords":"","body":"IDONotificationStatusParamModel Attribute Type Description notifyFlag Int Notification type:1: Allow notification2: Silent notification3: Disable notification Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDORunPlanParamModel.html":{"url":"doc/model/IDORunPlanParamModel.html","title":"IDORunPlanParamModel","keywords":"","body":"IDORunPlanParamModel Attribute Type Description verison Int Protocol library version number operate Int Operation1: Start plan2: Plan data sent3: End plan4: Query running plan type Int Plan type1: 3km running plan2: 5km running plan3: 10km running plan4: Half marathon training (Phase 2)5: Marathon training (Phase 2) dayNum Int Number of plan daysApplicable when operate is 2 year Int run plan start time month Int run plan start time day Int run plan start time hour Int run plan start time min Int run plan start time sec Int run plan start time items List [IDOGpsInfoModelItem] IDOGpsInfoModelItem set Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-09 10:37:41 "},"doc/model/IDOSchedulerReminderItem.html":{"url":"doc/model/IDOSchedulerReminderItem.html","title":"IDOSchedulerReminderItem","keywords":"","body":"IDOSchedulerReminderItem Attribute Type Description id Int Reminder event ID. Incremental value sent by the app, starting from 0 repeatType Int Repeat timeSet bit1-bit7 for week-based repeat if enabled withgetSupportSetRepeatWeekTypeOnScheduleReminderV3 (Monday to Sunday, with bit 0 as the general switch)Set repeat type (0: Invalid, 1: Once, 2: Daily, 3: Weekly, 4: Monthly, 5: Yearly) if enabled withgetSupportSetRepeatTypeOnScheduleReminderV3 remindOnOff Int Daily reminder switch0: Off, 1: On state Int State code0: Invalid, 1: Deleted, 2: Enabled title String Title content. Maximum 74 bytes note String Reminder content. Maximum 149 bytes Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSchedulerReminderModel.html":{"url":"doc/model/IDOSchedulerReminderModel.html","title":"IDOSchedulerReminderModel","keywords":"","body":"IDOSchedulerReminderModel Attribute Type Description operate Int Operation type0: Invalid1: Add2: Delete3: Query4: Modify errCode Int Error code. 0 if successful, non-zero if error Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 16:12:55 "},"doc/model/IDOScientificSleepSwitchParamModel.html":{"url":"doc/model/IDOScientificSleepSwitchParamModel.html","title":"IDOScientificSleepSwitchParamModel","keywords":"","body":"IDOScientificSleepSwitchParamModel Attribute Type Description mode Int Mode2: Scientific sleep1: Normal sleep startHour Int Start time - hour startMinute Int Start time - minute endHour Int End time - hour endMinute Int End time - minute Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOScreenBrightnessModel.html":{"url":"doc/model/IDOScreenBrightnessModel.html","title":"IDOScreenBrightnessModel","keywords":"","body":"IDOScreenBrightnessModel Attribute Type Description level Int Brightness level(0-100) opera Int 0 Auto1 ManualIf it is automatic synchronization configuration, please send 00; if it is user adjustment, please send 01 mode Int 0 Specify level1 Use ambient light sensor2 level does not matter autoAdjustNight Int Night auto brightness adjustment0 Invalid, defined by firmware1 Off2 Night auto brightness adjustment3 Night brightness reduction uses the set time startHour Int Start time hour startMinute Int Start time minute endHour Int End time hour endMinute Int End time minute nightLevel Int Night brightness showInterval Int Display interval Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSendRunPlanModel.html":{"url":"doc/model/IDOSendRunPlanModel.html","title":"IDOSendRunPlanModel","keywords":"","body":"IDOSendRunPlanModel Attribute Type Description errCode Int 00: Success, 01: Failed, 02: Another running plan is already enabled version Int Protocol library version number operate Int Operation:1: Start plan2: Plan data sent3: End plan4: Query running plan type Int Plan type:1: 3km running plan2: 5km running plan3: 10km running plan4: Half marathon training (Phase 2)5: Marathon training (Phase 2) year Int Plan implementation start time year month Int Plan implementation start time month day Int Plan implementation start time day hour Int Plan implementation start time hour min Int Plan implementation start time minute sec Int Plan implementation start time second Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSetNoticeStatusModel.html":{"url":"doc/model/IDOSetNoticeStatusModel.html","title":"IDOSetNoticeStatusModel","keywords":"","body":"IDOSetNoticeStatusModel Attribute Type Description notifySwitch IDONoticeNotifySwitchState Notification reminder switch callSwitch IDONoticeCallSwitchState Incoming call reminder switch msgAllSwitch IDONoticeMsgAllSwitchState Message app total switch callDelay Int 来电延迟 Call delay isOnSms Bool 短信提醒 SMS reminder isOnEmail Bool 邮件提醒 Email alert isOnWeChat Bool 微信提醒 WeChat reminder isOnQq Bool qq提醒 qq reminder isOnWeibo Bool 微博提醒 Weibo reminder isOnFaceBook Bool FaceBook 提醒 FaceBook Reminder isOnTwitter Bool Twitter 提醒 Twitter Reminder isOnWhatsapp Bool Whatsapp 提醒 Whatsapp Reminder isOnMessenger Bool Messenger 提醒 Messenger reminder isOnInstagram Bool Instagram 提醒 Instagram reminder isOnLinkedIn Bool LinkedIn 提醒 LinkedIn Reminder isOnCalendar Bool Calendar 提醒 Calendar Reminder isOnSkype Bool Skype 提醒 Skype reminder isOnAlarm Bool Alarm 提醒 Alarm Reminder isOnPokeman Bool Pokeman (其他)提醒 Pokemon Reminder(other) isOnVkontakte Bool Vkontakte 提醒 Vkontakte Reminder isOnLine Bool Line 提醒 Line reminder isOnViber Bool Viber 提醒 Viber reminder isOnKakaoTalk Bool KakaoTalk 提醒 KakaoTalk Reminder isOnGmail Bool Gmail 提醒 Gmail reminder isOnOutlook Bool Outlook 提醒 Outlook reminder isOnSnapchat Bool Snapchat 提醒 Snapchat Reminder isOnTelegram Bool Telegram 提醒 Telegram Reminder isOnChatwork Bool Chatwork 提醒 Chatwork isOnSlack Bool Slack 提醒 Slack isOnYahooMail Bool Yahoo Mail 提醒 Yahoo Mail isOnTumblr Bool Tumblr 提醒 Tumblr isOnYoutube Bool Youtube 提醒 Youtube isOnYahooPinterest Bool Yahoo Pinterest 提醒 Yahoo Pinterest isOnKeep Bool Keep 提醒 keep isOnTikTok Bool TikTok 提醒 tiktok isOnRedbus Bool Redbus 提醒 redbus isOnDailyhunt Bool Dailyhunt 提醒 dailyhunt isOnHotstar Bool Hotstar 提醒 hotstar isOnInshorts Bool Inshorts 提醒 inshorts isOnPaytm Bool Paytm 提醒 paytm isOnAmazon Bool Amazon 提醒 amazon isOnFlipkart Bool Flipkart 提醒 flipkart isOnPrime Bool Prime 提醒 prime isOnNetflix Bool Netflix 提醒 netflix isOnGpay Bool Gpay 提醒 gpay isOnPhonpe Bool Phonpe 提醒 phonpe isOnSwiggy Bool Swiggy 提醒 swiggy isOnZomato Bool Zomato 提醒 zomato isOnMakeMyTrip Bool MakeMyTrip 提醒 make my trip isOnJioTv Bool JioTv 提醒 jio tv isOnMicrosoft Bool Microsoft 提醒 Microsoft isOnWhatsAppBusiness Bool WhatsApp Business 提醒 WhatsApp Business isOnNioseFit Bool nioseFit 提醒 noiseFit isOnDidNotCall Bool did no call 提醒 did no call isOnMattersRemind Bool 事项 提醒 matters remind isOnUber Bool uber 提醒 uber isOnOla Bool ola 提醒 ola isOnYtMusic Bool yt music 提醒 yt music isOnGoogleMeet Bool google meet 提醒 isOnMormaiiSmartwatch Bool mormaii smartwatch 提醒 isOnTechnosConnect Bool technos connect 提醒 isOnEnioei Bool enioei 提醒 isOnAliexpress Bool aliexpress 提醒 isOnShopee Bool shopee 提醒 isOnTeams Bool teams 提醒 isOn99Taxi Bool 99 taxi 提醒 isOnUberEats Bool uber eats 提醒 isOnLfood Bool l food 提醒 isOnRappi Bool rappi 提醒 isOnMercadoLivre Bool mercado Livre 提醒 isOnMagalu Bool Magalu 提醒 isOnAmericanas Bool Americanas 提醒 isOnYahoo Bool Yahoo 提醒 isOnInstantemail Bool Instantemail 提醒 支持Instantemail的功能表 isOnNhnemail Bool nhnemail 提醒 支持NAVER邮件的功能表 isOnZohoemail Bool zohoemail 提醒 支持ZoHo邮箱的功能表 isOnExchangeemail Bool Exchangeemail 提醒 支持Exchange+ Mail Client 交换邮件的功能表 isOn189email Bool 189email 提醒 支持189邮件的功能表 isOnGoogleGmail Bool googleGmail 提醒 支持谷歌邮箱的功能表 isOnVeryfit Bool Veryfit 提醒 的功能表 0x4F isOnGeneral Bool general 提醒 通知支持通用的功能表 0x50 isOnAlibabaemail Bool 189email 提醒 通知支持阿里巴巴邮箱的功能表 type:0x51 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOShortcutParamModel.html":{"url":"doc/model/IDOShortcutParamModel.html","title":"IDOShortcutParamModel","keywords":"","body":"IDOShortcutParamModel Attribute Type Description mode Int Function of Shortcut 10: Invalid1: Quick access to camera control2: Quick access to motion mode3: Quick access to do not disturb Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSleepPeriodParamModel.html":{"url":"doc/model/IDOSleepPeriodParamModel.html","title":"IDOSleepPeriodParamModel","keywords":"","body":"IDOSleepPeriodParamModel Attribute Type Description onOff Int Switch1 On0 Off startHour Int Start time (hour) startMinute Int Start time (minute) endHour Int End time (hour) endMinute Int End time (minute) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSpo2SwitchParamModel.html":{"url":"doc/model/IDOSpo2SwitchParamModel.html","title":"IDOSpo2SwitchParamModel","keywords":"","body":"IDOSpo2SwitchParamModel Attribute Type Description onOff Int SpO2 all-day switch1 On0 Off startHour Int Start time (hour) startMinute Int Start time (minute) endHour Int End time (hour) endMinute Int End time (minute) lowSpo2OnOff Int Low SpO2 switch1 On0 OffRequires support from the menu setSpo2AllDayOnOff lowSpo2Value Int Low SpO2 thresholdRequires support from the menu v3SupportSetSpo2LowValueRemind notifyFlag Int Notification type0: Invalid1: Allow notifications2: Silent notifications3: Disable notificationsRequires support from the menu getSpo2NotifyFlag Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSport100SortItem.html":{"url":"doc/model/IDOSport100SortItem.html","title":"IDOSport100SortItem","keywords":"","body":"IDOSport100SortItem Attribute Type Description type IDOSportType Type of sport flag Int 0: None downloaded for allBit0: Small icon downloadedBit1: Big icon downloadedBit2: Medium icon downloadedBit3: Smallest icon downloaded Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSport100SortModel.html":{"url":"doc/model/IDOSport100SortModel.html","title":"IDOSport100SortModel","keywords":"","body":"IDOSport100SortModel Attribute Type Description errCode Int 0: Success, Non-zero: Failure operate Int Operation0: Invalid 1: Query 2: Set minShowNum Int Minimum number of items to be displayed, at least 1 maxShowNum Int Maximum number of items to be displayed, maximum 20 nowUserLocation Int Current position of displayed added sports, app displays based on this position, with the devices added before corresponding to those positions, and those added later to the positions after this position. Only valid for queries Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSport100SortParamModel.html":{"url":"doc/model/IDOSport100SortParamModel.html","title":"IDOSport100SortParamModel","keywords":"","body":"IDOSport100SortParamModel Attribute Type Description operate Int Operation0: Invalid 1: Query 2: Set nowUserLocation Int Current position of displayed added sports items [Int] Sports sorting list Maximum value 150 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 16:56:12 "},"doc/model/IDOSportGoalParamModel.html":{"url":"doc/model/IDOSportGoalParamModel.html","title":"IDOSportGoalParamModel","keywords":"","body":"IDOSportGoalParamModel Attribute Type Description sportStep Int Number of steps for the exercise goal walkGoalSteps Int Walk goal steps per hour setting targetType Int Target type setting0: Invalid1: Daily Goal2: Weekly GoalRequires support from the menu getStepDataTypeV2 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSportModeSelectParamModel.html":{"url":"doc/model/IDOSportModeSelectParamModel.html","title":"IDOSportModeSelectParamModel","keywords":"","body":"IDOSportModeSelectParamModel Attribute Type Description flag Int 0: Invalid1: Set quick sport type - sport_type1 & sport_type2 & sport_type3 & sport_type42: Set specific sport type sportType1 Int Quick sport type 1flag: 1 is valid sportType2 Int Quick sport type 2flag: 1 is valid sportType3 Int Quick sport type 3flag: 1 is valid sportType4 Int Quick sport type 4flag: 1 is valid sportType0Walk Bool Type: Walking, 0 not supported, 1 supportedflag: 2 is valid sportType0Run Bool Type: Running, 0 not supported, 1 supportedflag: 2 is valid sportType0ByBike Bool Type: Cycling, 0 not supported, 1 supportedflag: 2 is valid sportType0OnFoot Bool Type: Walking (on foot), 0 not supported, 1 supportedflag: 2 is valid sportType0Swim Bool Type: Swimming, 0 not supported, 1 supportedflag: 2 is valid sportType0MountainClimbing Bool Type: Mountain climbing, 0 not supported, 1 supportedflag: 2 is valid sportType0Badminton Bool Type: Badminton, 0 not supported, 1 supportedflag: 2 is valid sportType0Other Bool Type: Other, 0 not supported, 1 supportedflag: 2 is valid sportType1Fitness Bool Type: Fitness, 0 not supported, 1 supportedflag: 2 is valid sportType1Spinning Bool Type: Spinning, 0 not supported, 1 supportedflag: 2 is valid sportType1Ellipsoid Bool Type: Ellipsoid, 0 not supported, 1 supportedflag: 2 is valid sportType1Treadmill Bool Type: Treadmill, 0 not supported, 1 supportedflag: 2 is valid sportType1SitUp Bool Type: Sit-ups, 0 not supported, 1 supportedflag: 2 is valid sportType1PushUp Bool Type: Push-ups, 0 not supported, 1 supportedflag: 2 is valid sportType1Dumbbell Bool Type: Dumbbell, 0 not supported, 1 supportedflag: 2 is valid sportType1Weightlifting Bool Type: Weightlifting, 0 not supported, 1 supportedflag: 2 is valid sportType2BodybuildingExercise Bool Type: Bodybuilding exercise, 0 not supported, 1 supportedflag: 2 is valid sportType2Yoga Bool Type: Yoga, 0 not supported, 1 supportedflag: 2 is valid sportType2RopeSkipping Bool Type: Rope skipping, 0 not supported, 1 supportedflag: 2 is valid sportType2TableTennis Bool Type: Table tennis, 0 not supported, 1 supportedflag: 2 is valid sportType2Basketball Bool Type: Basketball, 0 not supported, 1 supportedflag: 2 is valid sportType2Football Bool Type: Football, 0 not supported, 1 supportedflag: 2 is valid sportType2Volleyball Bool Type: Volleyball, 0 not supported, 1 supportedflag: 2 is valid sportType2Tennis Bool Type: Tennis, 0 not supported, 1 supportedflag: 2 is valid sportType3Golf Bool Type: Golf, 0 not supported, 1 supportedflag: 2 is valid sportType3Baseball Bool Type: Baseball, 0 not supported, 1 supportedflag: 2 is valid sportType3Skiing Bool Type: Skiing, 0 not supported, 1 supportedflag: 2 is valid sportType3RollerSkating Bool Type: Roller skating, 0 not supported, 1 supportedflag: 2 is valid sportType3Dance Bool Type: Dance, 0 not supported, 1 supportedflag: 2 is valid sportType3StrengthTraining Bool Type: Strength training, 0 not supported, 1 supportedflag: 2 is valid sportType3CoreTraining Bool Type: Core training, 0 not supported, 1 supportedflag: 2 is valid sportType3TidyUpRelax Bool Type: Tidy up and relax, 0 not supported, 1 supportedflag: 2 is valid Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSportModeSortParamModel.html":{"url":"doc/model/IDOSportModeSortParamModel.html","title":"IDOSportModeSortParamModel","keywords":"","body":"IDOSportModeSortParamModel Attribute Type Description index Int Sorting index (starting from 1, 0 is invalid) type IDOSportType Sport type Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 16:59:47 "},"doc/model/IDOSportSortModel.html":{"url":"doc/model/IDOSportSortModel.html","title":"IDOSportSortModel","keywords":"","body":"IDOSportSortModel Attribute Type Description errCode Int 0: Success, Non-zero: Failure operate Int Operation0: Invalid 1: Query 2: Set sportType IDOSportType Type of sport nowUserLocation Int Current position of displayed added sports, app displays based on this position, with the devices added before corresponding to those positions, and those added later to the positions after this position. Only valid for queries items [Int] Setting list Maximum value 50 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 17:08:42 "},"doc/model/IDOSportSortParamModel.html":{"url":"doc/model/IDOSportSortParamModel.html","title":"IDOSportSortParamModel","keywords":"","body":"IDOSportSortParamModel Attribute Type Description operate Int Operation0: Invalid 1: Query 2: Set sportType IDOSportType Type of sport nowUserLocation Int Current position of displayed added sports items [Int] Sports sorting list Maximum value 150 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 17:10:44 "},"doc/model/IDOStepGoalModel.html":{"url":"doc/model/IDOStepGoalModel.html","title":"IDOStepGoalModel","keywords":"","body":"IDOStepGoalModel Attribute Type Description step Int Daily step goal stepWeek Int Weekly step goalValid when v2_support_set_step_data_type_03_03 is enabled Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOStressCalibrationModel.html":{"url":"doc/model/IDOStressCalibrationModel.html","title":"IDOStressCalibrationModel","keywords":"","body":"IDOStressCalibrationModel Attribute Type Description retCode Int 0: Success1: Failed - Calibration in progress2: Failed - Charging3: Failed - Not wearing4: Failed - In a sports scene Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOStressCalibrationParamModel.html":{"url":"doc/model/IDOStressCalibrationParamModel.html","title":"IDOStressCalibrationParamModel","keywords":"","body":"IDOStressCalibrationParamModel Attribute Type Description stressScore Int Stress score, ranging from 1 to 10 status Int 0: Start calibration setting1: Cancel calibration setting Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOStressValModel.html":{"url":"doc/model/IDOStressValModel.html","title":"IDOStressValModel","keywords":"","body":"IDOStressValModel Attribute Type Description stressVal Int Stress value threshold Int Threshold Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSupportMaxSetItemsNumModel.html":{"url":"doc/model/IDOSupportMaxSetItemsNumModel.html","title":"IDOSupportMaxSetItemsNumModel","keywords":"","body":"IDOSupportMaxSetItemsNumModel Attribute Type Description contactMaxSetNum Int Maximum number of frequently contacted persons that firmware supports for app to set (default is 10) reminderMaxSetNum Int Maximum number of schedule reminders that firmware supports for app to set(default is 30) msgMaxBuffSize Int Maximum sending buffer size of message reminders (default is 250 bytes) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSyncContactModel.html":{"url":"doc/model/IDOSyncContactModel.html","title":"IDOSyncContactModel","keywords":"","body":"IDOSyncContactModel Attribute Type Description errCode Int Error code, 0 for success, non-zero for error code operat Int Operation0: invalid1: set2: query3: set emergency contacts (requires support for getSupportSetGetEmergencyContactV3 in the menu)4: query emergency contacts (requires support for getSupportSetGetEmergencyContactV3 in the menu) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOSyncContactParamModel.html":{"url":"doc/model/IDOSyncContactParamModel.html","title":"IDOSyncContactParamModel","keywords":"","body":"IDOSyncContactParamModel Attribute Type Description operat Int Operation0: invalid1: set contacts2: query contacts3: set emergency contacts (requires support for getSupportSetGetEmergencyContactV3 in the menu)4: query emergency contacts (requires support for getSupportSetGetEmergencyContactV3 in the menu) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOTakingMedicineReminderParamModel.html":{"url":"doc/model/IDOTakingMedicineReminderParamModel.html","title":"IDOTakingMedicineReminderParamModel","keywords":"","body":"IDOTakingMedicineReminderParamModel Attribute Type Description takingMedicineId Int ID ranging from 1 to 5 onOff Int 0 for off1 for on startHour Int Starting hour of the reminder startMinute Int Starting minute of the reminder endHour Int Ending hour of the reminder endMinute Int Ending minute of the reminder repeats Set Repeat isOpenRepeat Bool Repeat switch interval Int Reminder interval in minutesDefault is 60 minutes doNotDisturbOnOff Int Do not disturb time period switch0 for off1 for onDefault is off doNotDisturbStartHour Int Do not disturb start hour doNotDisturbStartMinute Int Do not disturb start minute doNotDisturbEndHour Int Do not disturb end hour doNotDisturbEndMinute Int Do not disturb end minute IDOWeek Android enum class IDOWeek(val rawValue: Int):Serializable { MONDAY(0), TUESDAY(1), WEDNESDAY(2), THURSDAY(3), FRIDAY(4), SATURDAY(5), SUNDAY(6); } iOS enum IDOWeek: Int { case monday = 0, tuesday, wednesday, thursday, friday, saturday, sunday } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 17:16:48 "},"doc/model/IDOTemperatureSwitchParamModel.html":{"url":"doc/model/IDOTemperatureSwitchParamModel.html","title":"IDOTemperatureSwitchParamModel","keywords":"","body":"IDOTemperatureSwitchParamModel Attribute Type Description mode Int Mode:1: On0: Off startHour Int Start time, hour startMinute Int Start time, minute endHour Int End time, hour endMinute Int End time, minute unit Int Temperature unit setting:1 :Celsius2 :Fahrenheit Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOUnitParamModel.html":{"url":"doc/model/IDOUnitParamModel.html","title":"IDOUnitParamModel","keywords":"","body":"IDOUnitParamModel Attribute Type Description distUnit Int Distance Unit:0: Invalid1: km (metric)2: mi (imperial) weightUnit Int Weight Unit:0: Invalid1: kg2: lb temp Int Temperature Unit:0: Invalid1: ℃2: ℉ stride Int Walking Stride:0: Invalid0: cm language Int Language is12HourFormat Int Time Format:0: Invalid1: 24-hour format2: 12-hour format strideRun Int Running Stride:0: Invalid1: cmDefault value for males: 90cm strideGpsCal Int Stride Calibration via GPS on/off:0: Invalid1: On2: Off weekStartDate Int Start day of the week:0: Monday1: Sunday3: Saturday calorieUnit Int Calorie unit setting:0: Invalid1: Default kCal2: Cal3: kJ swimPoolUnit Int Swim pool unit setting:0: Invalid1: Default meters2: yards cyclingUnit Int Cycling unit:0: Invalid1: km2: miles walkingRunningUnit Int Unit for walking or running (km/miles) setting:0: Invalid1: km2: milesRequires support from the device firmware setSupportWalkRunUnit Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOUpdateStatusModel.html":{"url":"doc/model/IDOUpdateStatusModel.html","title":"IDOUpdateStatusModel","keywords":"","body":"IDOUpdateStatusModel Attribute Type Description devVesion Int Firmware version number state Int 0 for normal state1 for upgrade state Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOUpHandGestureModel.html":{"url":"doc/model/IDOUpHandGestureModel.html","title":"IDOUpHandGestureModel","keywords":"","body":"IDOUpHandGestureModel Attribute Type Description endHour Int End time, hour endMinute Int End time, minute hasTimeRange Int Whether time range is available 1: Yes 0: No onOff Int Switch 1: On 0: Off -1:Not Support showSecond Int Screen on duration in seconds startHour Int Start time, hour startMinute Int Start time, minute Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOUpHandGestureParamModel.html":{"url":"doc/model/IDOUpHandGestureParamModel.html","title":"IDOUpHandGestureParamModel","keywords":"","body":"IDOUpHandGestureParamModel Attribute Type Description onOff Int Switch1: On0: Off showSecond Int Duration for the screen to stay on, in seconds hasTimeRange Int Whether there is a time range1: Yes0: No startHour Int Starting hour of the time range startMinute Int Starting minute of the time range endHour Int Ending hour of the time range endMinute Int Ending minute of the time range Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOV3NoiseParamModel.html":{"url":"doc/model/IDOV3NoiseParamModel.html","title":"IDOV3NoiseParamModel","keywords":"","body":"IDOV3NoiseParamModel Attribute Type Description mode Int All-day environmental noise volume switch1: On0: Off startHour Int Start time (hour) startMinute Int Start time (minute) endHour Int End time (hour) endMinute Int End time (minute) highNoiseOnOff Int Threshold switch1: On0: Off highNoiseValue Int Threshold value Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOVersionInfoModel.html":{"url":"doc/model/IDOVersionInfoModel.html","title":"IDOVersionInfoModel","keywords":"","body":"IDOVersionInfoModel Attribute Type Description sdkVersion Int SDK version hrAlgorithmVersion Int Heart rate algorithm version sleepAlgorithmVersion Int Sleep algorithm version stepAlgorithmVersion Int Step counter algorithm version gestureRecognitionVersion Int Gesture recognition algorithm version pcbVersion Int PCB version (multiplied by 10, e.g., 11 for version 1.1) spo2Version Int Wearable version wearVersion Int SpO2 algorithm version stressVersion Int Stress level algorithm version kcalVersion Int Calorie algorithm version disVersion Int Distance algorithm version axle3SwimVersion Int 3-axis sensor swimming algorithm version axle6SwimVersion Int 6-axis sensor swimming algorithm version actModeTypeVersion Int Activity mode recognition algorithm version allDayHrVersion Int All-day heart rate algorithm version gpsVersion Int GPS algorithm version peripheralsVersion Int Peripheral version for 206 customized projects Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOVoiceReplyParamModel.html":{"url":"doc/model/IDOVoiceReplyParamModel.html","title":"IDOVoiceReplyParamModel","keywords":"","body":"IDOVoiceReplyParamModel Attribute Type Description flagIsContinue Int Flag for continuing recording0: Stop recording, 1: Continue recording title String Title data, maximum 31 bytes textContent String Content data, maximum 511 bytes Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWalkRemindModel.html":{"url":"doc/model/IDOWalkRemindModel.html","title":"IDOWalkRemindModel","keywords":"","body":"IDOWalkRemindModel Attribute Type Description onOff Int 0 Off，1 On goalStep Int Goal step (deprecated) startHour Int Start time (hour) startMinute Int Start time (minute) endHour Int End time (hour) endMinute Int End time (minute) repeats Set Repeat isOpenRepeat Bool Repeat switch goalTime Int Goal time (deprecated) notifyFlag Int Notification type0: Invalid1: Allow notification2: Silent notification3: Close notificationRequires firmware to enable setWalkReminderAddNotify doNotDisturbOnOff Int Do not disturb switch0 Off1 OnRequires firmware to enable getSupportSetGetNoReminderOnWalkReminderV2 noDisturbStartHour Int Do not disturb start time (hour)Requires firmware to enable getSupportSetGetNoReminderOnWalkReminderV2 noDisturbStartMinute Int Do not disturb start time (minute)Requires firmware to enable getSupportSetGetNoReminderOnWalkReminderV2 noDisturbEndHour Int Do not disturb end time (hour)Requires firmware to enable getSupportSetGetNoReminderOnWalkReminderV2 noDisturbEndMinute Int Do not disturb end time (minute)Requires firmware to enable getSupportSetGetNoReminderOnWalkReminderV2 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWalkRemindTimesItem.html":{"url":"doc/model/IDOWalkRemindTimesItem.html","title":"IDOWalkRemindTimesItem","keywords":"","body":"IDOWalkRemindTimesItem Attribute Type Description hour Int Walk reminder time: Hour min Int Walk reminder time: Minute Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWalkRemindTimesParamModel.html":{"url":"doc/model/IDOWalkRemindTimesParamModel.html","title":"IDOWalkRemindTimesParamModel","keywords":"","body":"IDOWalkRemindTimesParamModel Attribute Type Description onOff Int Switch: 1:On 0:Off items [IDOWalkRemindTimesItem] Walking reminder details Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 10:58:51 "},"doc/model/IDOWallpaperDialReplyV3Model.html":{"url":"doc/model/IDOWallpaperDialReplyV3Model.html","title":"IDOWallpaperDialReplyV3Model","keywords":"","body":"IDOWallpaperDialReplyV3Model Attribute Type Description errCode Int 0 for success, non-zero for failure operate Int Operation: 0 for query, 1 for setting, 2 for deleting the wallpaper dial location Int Set location information hideType Int Hide type timeColor Int Color of time control widgetType Int Control type widgetIconColor Int Color of widget icons (1 byte reserved + R (1 byte) + G (1 byte) + B (1 byte)) widgetNumColor Int Color of widget numbers (1 byte reserved + R (1 byte) + G (1 byte) + B (1 byte)) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWallpaperDialReplyV3ParamModel.html":{"url":"doc/model/IDOWallpaperDialReplyV3ParamModel.html","title":"IDOWallpaperDialReplyV3ParamModel","keywords":"","body":"IDOWallpaperDialReplyV3ParamModel Attribute Type Description operate Int Operation: 0 for query, 1 for setting, 2 for deleting the wallpaper dial location Int Set location information, reference to the 9-grid layout hideType Int Hide type: 0 for showing all, 1 for hiding sub-controls (icons and numbers) timeColor Int Color of time control (1 byte reserved + R (1 byte) + G (1 byte) + B (1 byte)) widgetType Int Control type: 1 for week/date, 2 for steps, 3 for distance, 4 for calories, 5 for heart rate, 6 for battery widgetIconColor Int Color of widget icons (1 byte reserved + R (1 byte) + G (1 byte) + B (1 byte)) widgetNumColor Int Color of widget numbers (1 byte reserved + R (1 byte) + G (1 byte) + B (1 byte)) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWatchDialIdModel.html":{"url":"doc/model/IDOWatchDialIdModel.html","title":"IDOWatchDialIdModel","keywords":"","body":"IDOWatchDialIdModel Attribute Type Description watchId Int Watch ID Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWatchDialInfoModel.html":{"url":"doc/model/IDOWatchDialInfoModel.html","title":"IDOWatchDialInfoModel","keywords":"","body":"IDOWatchDialInfoModel Attribute Type Description blockSize Int Compression block size familyName String Family name (maximum 10 bytes) format Int Color format height Int Screen height (pixel size) sizex100 Int Size in 100x increments width Int Screen width (pixel size) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWatchDialParamModel.html":{"url":"doc/model/IDOWatchDialParamModel.html","title":"IDOWatchDialParamModel","keywords":"","body":"IDOWatchDialParamModel Attribute Type Description dialId Int ID of the watch face to be setDial id0 invalid,currently supports1~4 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWatchDialSortItem.html":{"url":"doc/model/IDOWatchDialSortItem.html","title":"IDOWatchDialSortItem","keywords":"","body":"IDOWatchDialSortItem Attribute Type Description type Int Watch dial type 1: Normal Dial, 2: Wallpaper Dial, 3: Cloud Dial sortNumber Int Serial number, starting from 0, not exceeding the total number of supported watch dials name String Watch dial ID, maximum 29 bytes Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWatchDialSortParamModel.html":{"url":"doc/model/IDOWatchDialSortParamModel.html","title":"IDOWatchDialSortParamModel","keywords":"","body":"IDOWatchDialSortParamModel Attribute Type Description sortItemNumb Int Number of items in the watch dial sort list pSortItem [IDOWatchDialSortItem] Watch face sort list content Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 11:05:52 "},"doc/model/IDOWatchFaceModel.html":{"url":"doc/model/IDOWatchFaceModel.html","title":"IDOWatchFaceModel","keywords":"","body":"IDOWatchFaceModel Attribute Type Description errCode Int Error code, 0 for success, non-zero for error operate Int Operation:0 - Query the currently used watch face1 - Set watch face2 - Delete watch face3 - Dynamic request space to set the corresponding space size fileName String Watch face name, maximum 29 bytes fileCount Int Number of filesRequires the firmware to enable the function table v3WatchDailSetAddSizeIf operate!=3, this data is the same as before, which is 1 and is saved as beforeIf operate=3: dynamic request space to set the corresponding space size, this corresponds to a deleted file name columnIf v3WatchDailSetAddSize is not enabled, this field defaults to 1 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWatchFaceParamModel.html":{"url":"doc/model/IDOWatchFaceParamModel.html","title":"IDOWatchFaceParamModel","keywords":"","body":"IDOWatchFaceParamModel Attribute Type Description operate Int Operation:0 - Query the currently used watch face1 - Set watch face2 - Delete watch face3 - Dynamic request space to set the corresponding space size fileName String Watch face name, maximum 29 bytes watchFileSize Int Uncompressed file lengthAfter the firmware opens the function table v3WatchDailSetAddSize, the app needs to send this fieldBefore the watch face is transmitted, the firmware needs to allocate corresponding space to save it, and the uncompressed file length needs to be transmitted Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWatchItem.html":{"url":"doc/model/IDOWatchItem.html","title":"IDOWatchItem","keywords":"","body":"IDOWatchItem Attribute Type Description type Int Watch face type1: Normal watch face2: Wallpaper watch face3: Cloud watch face watchVersion Int Current version number of the watch face (applies to cloud watch faces) sortNumber Int Watch face order numberStart at 0 name String Watch face name size Int Size of the watch face, in bytesApplies only if the firmware enables v3SupportGetWatchSize, otherwise the field is invalid Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWatchListModel.html":{"url":"doc/model/IDOWatchListModel.html","title":"IDOWatchListModel","keywords":"","body":"IDOWatchListModel Attribute Type Description localWatchNum Int Total number of local watch faces cloudWatchNum Int Total number of cloud watch faces wallpaperWatchNum Int Total number of wallpaper watch faces userCloudWatchNum Int Number of cloud watch faces used userWallpaperWatchNum Int Number of wallpaper watch faces used nowShowWatchName String ID of the currently displayed watch face, maximum 30 bytes watchFrameMainVersion Int Framework version number, starting from 1 fileMaxSize Int Maximum size of a single file, in kilobytes(reserve) watchCapacitySize Int Total capacity of watch facesUint:ByteSet to 0 if the firmware enables setWatchCapacitySizeDisplay userWatchCapacitySize Int Used capacity of watch facesUint:ByteSet to 0 if the firmware enables setWatchCapacitySizeDisplay usableMaxDownloadSpaceSize Int Maximum continuous space available for downloading watch facesUint:ByteSet to 0 if the firmware enables setWatchCapacitySizeDisplay items [IDOWatchItem] Watch face list details Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 11:10:05 "},"doc/model/IDOWatchListV2Model.html":{"url":"doc/model/IDOWatchListV2Model.html","title":"IDOWatchListV2Model","keywords":"","body":"IDOWatchListV2Model Attribute Type Description availableCount Int Number of remaining available files fileMaxSize Int Maximum size of a single file (in KB) items [IDOWatchListV2Item] Watch face list details Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 11:16:16 "},"doc/model/IDOWeatherDataFuture.html":{"url":"doc/model/IDOWeatherDataFuture.html","title":"IDOWeatherDataFuture","keywords":"","body":"IDOWeatherDataFuture Attribute Type Description type Int Weather type0x00 Other0x01 Sunny0x02 Cloudy0x03 Overcast0x04 Rain0x05 Heavy Rain0x06 Thunderstorm0x07 Snow0x08 Sleet0x09 Typhoon0x0A Sandstorm0x0B Clear Night0x0C Cloudy Night0x0D Hot0x0E Cold0x0F Gentle Breeze0x10 Strong Wind0x11 Haze0x12 Shower0x13 Cloudy to Sunny0x30 Thunder0x31 Hail0x32 Dust0x33 Tornado minTemp Int future minimum temperature maxTemp Int future maximum temperature Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 12:25:37 "},"doc/model/IDOWeatherDataParamModel.html":{"url":"doc/model/IDOWeatherDataParamModel.html","title":"IDOWeatherDataParamModel","keywords":"","body":"IDOWeatherDataParamModel Attribute Type Description type Int Weather type0x00 Other0x01 Sunny0x02 Cloudy0x03 Overcast0x04 Rain0x05 Heavy Rain0x06 Thunderstorm0x07 Snow0x08 Sleet0x09 Typhoon0x0A Sandstorm0x0B Clear Night0x0C Cloudy Night0x0D Hot0x0E Cold0x0F Gentle Breeze0x10 Strong Wind0x11 Haze0x12 Shower0x13 Cloudy to Sunny0x30 Thunder0x31 Hail0x32 Dust0x33 Tornado temp Int Current temperature maxTemp Int Maximum temperature of the day minTemp Int Minimum temperature of the day humidity Int Current humidity uvIntensity Int Current UV intensity aqi Int Current air quality index (AQI) future [IDOWeatherDataFuture] Weather conditions for the next three days Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-16 12:17:05 "},"doc/model/IDOWeatherSunTimeParamModel.html":{"url":"doc/model/IDOWeatherSunTimeParamModel.html","title":"IDOWeatherSunTimeParamModel","keywords":"","body":"IDOWeatherSunTimeParamModel Attribute Type Description sunriseHour Int Hour of sunrise sunriseMin Int Minute of sunrise sunsetHour Int Hour of sunset sunsetMin Int Minute of sunset Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWeatherV3ParamModel.html":{"url":"doc/model/IDOWeatherV3ParamModel.html","title":"IDOWeatherV3ParamModel","keywords":"","body":"IDOWeatherV3ParamModel Attribute Type Description week Int The day of the weekbit0: Mondaybit1: Tuesday and so on up to Sunday weatherType Int Weather type0: Other1: Sunny2: Cloudy3: Overcast4: Rain5: Heavy rain6: Thunderstorm7: Snow8: Sleet9: Typhoon10: Sandstorm11: Night clear12: Night cloudy13: Hot14: Cold15: Gentle breeze16: Strong wind17: Haze18: Shower19: Cloudy to sunny48: Thunder49: Hail50: Blowing sand51: Tornado (realme custom weather type idw02) todayTmp Int Current temperature in CelsiusFor negative temperatures, add 100 to the temperature and transmit todayMaxTemp Int Maximum temperature in CelsiusFor negative temperatures, add 100 to the temperature and transmit todayMinTemp Int Minimum temperature in CelsiusFor negative temperatures, add 100 to the temperature and transmit cityName String City nameMaximum of 74 bytes airQuality Int Air qualityMultiply by 10 for transmission precipitationProbability Int Precipitation probability0-100 percentage todayUvIntensity Int UV intensityMultiply by 10 for transmission sunriseItemNum Int Number of sunrise and sunset time detailsCurrently, the maximum number of days is set to 7Invalid for version 1 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOWorldTimeParamModel.html":{"url":"doc/model/IDOWorldTimeParamModel.html","title":"IDOWorldTimeParamModel","keywords":"","body":"IDOWorldTimeParamModel Attribute Type Description id Int Detail ID,Uniqueness minOffset Int Minute offset from current time to UTC 0 cityName String City name, up to 59 bytes longitudeFlag Int 1: East longitude 2: West longitude longitude Int Longitude, multiplied by 100, with 2 decimal places latitudeFlag Int 1: North latitude 2: South latitude latitude Int Latitude, multiplied by 100, with 2 decimal places Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/model/IDOUserInfoPramModel.html":{"url":"doc/model/IDOUserInfoPramModel.html","title":"IDOUserInfoPramModel","keywords":"","body":"IDOUserInfoPramModel Properties Type Description year int date of birth year month int date of birth month day int date of birth day height int height in centimeters weight int Weight in kilograms Value needs x100 gender int Gender 1: Female 0: Male Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:24:58 "},"doc/model/IDOMenstruationModel.html":{"url":"doc/model/IDOMenstruationModel.html","title":"IDOMenstruationModel","keywords":"","body":"IDOMenstruationModel Properties Type Description onOff int Menstrual period switch 1 on 0 off menstrualLength int Menstrual length menstrualCycle int menstrual cycle lastMenstrualYear int Last menstrual period start time year lastMenstrualMonth int Last menstrual period start time month lastMenstrualDay int Last menstrual period start time day ovulationIntervalDay int The interval from the beginning of the next menstrual period to the day of ovulation, usually 14 days ovulationBeforeDay int The number of fertile days before ovulation day, usually 5 ovulationAfterDay int The number of fertile days after ovulation day, usually 5 notifyFlag int Notification type 0: Invalid 1: Allow notification 2: Silent notification 3: Close notification Firmware is required to enable menu support getMenstrualAddNotifyFlagV3 menstrualReminderOnOff int Menstrual reminder switch 1: on 0: off Firmware is required to enable menu support getSupportSetMenstrualReminderOnOff. When the switch is invalid, the default reminder is when the function is enabled. Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:21:50 "},"doc/model/IDOHeartRateIntervalModel.html":{"url":"doc/model/IDOHeartRateIntervalModel.html","title":"IDOHeartRateIntervalModel","keywords":"","body":"IDOHeartRateIntervalModel Properties Type Description burnFatThreshold int Fat training heart rate zoneCalculation rule: 50%-69% of maximum heart rateUnit: times/minute aerobicThreshold int Cardiopulmonary training heart rate zoneCalculation rule: 70%-84% of maximum heart rateUnit: times/minute limitThreshold int Peak training heart rate zoneCalculation rule: 85%-100% of maximum heart rateUnit: times/minute userMaxHr int Heart rate upper limit, maximum heart rate reminderUnit: times/minute range1 int Warm-up exercise heart rate zoneCalculation rule: (200-age) * 50Unit: times/minute range2 int Fat burning heart rate zoneCalculation rule: (200-age) * 60Unit: times/minute range3 int Aerobic exercise heart rate zoneCalculation rule: (200-age) * 70Unit: times/minute range4 int Anaerobic exercise heart rate zoneCalculation rule: (200-age) * 80Unit: times/minute range5 int Extreme exercise heart rate zoneCalculation rule: (200-age) * 90Unit: times/minute minHr int Minimum heart rateUnit: beats/minute maxHrRemind int Maximum heart rate reminder0 off, 1 on minHrRemind int Minimum heart rate reminder0 off, 1 on remindStartHour int When the reminder starts remindStartMinute int reminder start minutes remindStopHour int When the reminder ends remindStopMinute int reminder end minutes Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:22:33 "},"doc/model/IDOCmdOTAResponseModel.html":{"url":"doc/model/IDOCmdOTAResponseModel.html","title":"IDOCmdOTAResponseModel","keywords":"","body":"IDOCmdOTAResponseModel Properties Type Description errFlag int 0: Enter OTA successfully 1: Failure: The battery is too low 2: Failure: The device does not support it 3: Failure: The parameters are incorrect Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-15 15:23:13 "},"doc/model/IDODefaultSportTypeModel.html":{"url":"doc/model/IDODefaultSportTypeModel.html","title":"IDODefaultSportTypeModel","keywords":"","body":"IDODefaultSportTypeModel Properties Type Description defaultShowNum Int The number displayed by default minShowNum Int Minimum supported number maxShowNum Int Maximum supported number isSupportsSort Int Whether to support default sorting 0 not supported, 1 supported sportTypes [IDOSportTypeItem] Sports type list collection type collection IDOSportTypeItem Properties Type Description type IDOSportType Default displayed quantity Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:44:03 "},"doc/model/IDODeviceInfo.html":{"url":"doc/model/IDODeviceInfo.html","title":"IDODeviceInfo","keywords":"","body":"Device Information Device information model description *IDODeviceInterface Properties Type Description deviceMode Bool Device mode 0: sports mode, 1: sleep mode battStatus Bool Battery status 0: normal, 1: charging, 2: full, 3: low battery battLevel Bool Battery level 0～100 rebootFlag Bool Whether to reboot 0: No reboot 1: Reboot bindState Bool Binding status 0: Unbound 1: Bound bindType Bool 5: Screen click Vertical confirmation and cancellation, confirmation is at the top 6: Screen click Vertical confirmation and cancellation, confirmation is at the bottom 7: Click (a button on the right) bindTimeout Bool Binding timeout, up to 15 seconds, 0 means no timeout platform Bool 60: Tailingwei+5340+no nand flash, 70: Goodix+Furuikun, 80:5340 deviceShapeType Bool Device shape type 0: invalid; 1: circular; 2: square; 3: ellipse deviceType Bool Device type 0: invalid; 1: bracelet; 2: watch dialMainVersion Bool Custom dial main version starts from 1 0: The corresponding custom dial function is not supported showBindChoiceUi Bool Display hook ui interface when firmware is bound 0: Not required 1: Required deviceId Bool device id firmwareVersion Bool Device firmware major version number macAddress Bool Current device mac address - no colon macAddressFull Bool Current device mac address - with colon deviceName Bool To get the latest value, you can use the Cmds.getDeviceName().send(..) method otaMode Bool OTA mode uuid Bool UUID ios-specific macAddressBt Bool BT macAddress - with colon fwVersion1 Bool Firmware version version1 fwVersion2 Bool Firmware version version2 fwVersion3 Bool Firmware version version3 fwBtFlag Bool BT version effective flag 0: Invalid 1: Indicates that the firmware has corresponding BT firmware fwBtVersion1 Bool BT version version1 fwBtVersion2 Bool BT version version2 fwBtVersion3 Bool BT version version3 fwBtMatchVersion1 Bool The version of BT that needs to be matched version1 fwBtMatchVersion2 Bool The version of BT that needs to be matched version2 fwBtMatchVersion3 Bool The version of BT that needs to be matched version3 Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:44:44 "},"doc/model/IDODrinkWaterRemindModel.html":{"url":"doc/model/IDODrinkWaterRemindModel.html","title":"IDODrinkWaterRemindModel","keywords":"","body":"IDODrinkWaterRemindModel Attribute Type Description onOff int switch0 off1 on startHour int start time hours startMinute int start time minutes endHour int end time hours endMinute int end time minutes repeats set Week: Monday to Sunday isOpenRepeat Set RepeatIDOWeek interval int Reminder intervalunit minutes notifyFlag int Notification type0: Invalid1: Allow notification2: Silent notification3: Close notificationRequires firmware to enable menu support setDrinkWaterAddNotifyFlag doNotDisturbOnOff int Reminder-free switch 00 off 01 onRequires firmware to enable menu support setNoReminderOnDrinkReminder noDisturbStartHour int Reminder-free start timeRequires firmware to enable menu support setNoReminderOnDrinkReminder noDisturbStartMinute int Reminder-free start time minutesRequires firmware to enable menu support setNoReminderOnDrinkReminder noDisturbEndHour int Reminder-free end timeRequires firmware to enable menu support setNoReminderOnDrinkReminder noDisturbEndMinute int Reminder-free end time minutesRequires firmware to enable menu support setNoReminderOnDrinkReminder IDOWeek Android enum class IDOWeek(val rawValue: Int):Serializable { MONDAY(0), TUESDAY(1), WEDNESDAY(2), THURSDAY(3), FRIDAY(4), SATURDAY(5), SUNDAY(6); } iOS enum IDOWeek: Int { case Monday = 0, tuesday, Wednesday, Thursday, friday, saturday, sunday } Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:45:17 "},"doc/model/IDOMenstruationRemindParamModel.html":{"url":"doc/model/IDOMenstruationRemindParamModel.html","title":"IDOMenstruationRemindParamModel","keywords":"","body":"IDOMenstrationRemindParamModel Properties Type Description startDay int Start day reminder number of days in advance ovulationDay int Ovulation day reminder number of days in advance hour int reminder time hour minute int reminder time minutes pregnancyDayBeforeRemind int How many days in advance to remind when the fertile period starts pregnancyDayEndRemind int How many days in advance to remind when the fertile period ends menstrualDayEndRemind int How many days in advance to remind the end of menstrual period Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:47:50 "},"doc/model/IDOMenuListParamModel.html":{"url":"doc/model/IDOMenuListParamModel.html","title":"IDOMenuListParamModel","keywords":"","body":"IDOMenuListParamModel Properties Type Description items [int] Menu list with built-in sortingIf there is no sorting, it will be displayed if there is a value, but it will be unrealistic if there is no valueIf there is sorting, it needs to start from 0 according to the array0 Invalid1 Step Count2 Heart Rate3 Sleep4 Photo5 Alarm Clock6 Music7 Stopwatch8 Timing Device9 Sports mode10 Weather11 Breathing exercise12 Find mobile phone13 Stress14 Data three rings15 Time interface16 Last activity17 Health data18 Blood oxygen19 Menu settings20 (20) Alexa voice display in sequence21 X screen (gt01pro- X Newly added)22 Calories (Newly added by Doro Watch)23 Distance (Newly added by Doro Watch)24 One-click measurement (Newly added by IDW05) 25 renpho health (run Feng Jian Jian)(IDW12 new) 26 Compass (mp01 new)27 Barometric altimeter (mp01 new) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:50:31 "},"doc/model/IDONotDisturbParamModel.html":{"url":"doc/model/IDONotDisturbParamModel.html","title":"IDONotDisturbParamModel","keywords":"","body":"IDONotDisturbParamModel Attribute Type Description switchFlag int switch1 on0 off startHour int start timehour startMinute int start timeminutes endHour int end timehour endMinute int end timeminutes haveTimeRange int Whether there is a time range 0 invalid1 means no time range2 means there is a time rangeThe function table getSupportDisturbHaveRangRepeat is enabled and valid noontimeRESTOnOff int Do not disturb switch during the day 1 On0 Off noontimeRESTStartHour int start timehour noontimeRESTStartMinute int Start timeminutes noontimeRESTEndHour int end timehour noontimeRESTEndMinute int end timeminutes allDayOnOff int Do Not Disturb All Day 1 On0 OffThe menu setOnlyNoDisturbAllDayOnOff is enabled and valid intelligentOnOff int Intelligent Do Not Disturb switch 1 On0 OffMenu setOnlyNoDisturbSmartOnOff is enabled when enabled Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:50:46 "},"doc/model/IDOSportParamModel.html":{"url":"doc/model/IDOSportParamModel.html","title":"IDOSportParamModel","keywords":"","body":"IDOSportParamModel Attribute Type Description items [IDOSportModeSortParamModel] Sports type sorting details (maximum 30) IDOSportModeSortParamModel Attribute Type Description index Int Sorting number, 0 is invalid, starts from 1 type IDOSportType Sports type Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:51:06 "},"doc/model/IDOStressSwitchParamModel.html":{"url":"doc/model/IDOStressSwitchParamModel.html","title":"IDOStressSwitchParamModel","keywords":"","body":"IDOStressSwitchParamModel Attribute Type Description onOff int Master switch 1 on 0 off startHour int start time hours startMinute int start time minutes endHour int end time hours endMinute int end time minutes remindOnOff int Pressure reminder switch 1 on 0 offon_off is off, the reminder will not work interval int Reminder interval, unit minute, default 60 minutes highThreshold int High pressure threshold stressThreshold int Pressure calibration threshold, default is 80 Requires firmware to enable menu support setSendCalibrationThreshold notifyFlag int Notification type 0: Invalid 1: Allow notifications2: Silent notifications3: Close notifications Requires firmware to enable menu support getPressureNotifyFlagMode Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:51:16 "},"doc/model/IDOUnerasableMeunListModel.html":{"url":"doc/model/IDOUnerasableMeunListModel.html","title":"IDOUnerasableMeunListModel","keywords":"","body":"IDOUnerasableMeunListModel Attribute Type Description itemList [int] Number of items in the list, maximum is 10private let num: IntList of applications that cannot be deleted0 invalid1 step2 Heart rate3 Sleep4 Take Pictures5 Alarm Clock6 Music7 stopwatch8 Timer9 Exercise mode10 Weather11 Breathing Exercises12 Finding your Phone13 pressure14 Data three rings15 time interface16 Last activity 17 Health Data18 blood oxygen19 Menu Settings20 (20)aleax Voices are displayed in sequence21 X screen (New on gt01pro-X)22 calories (added by Doro Watch)23 distance (added by Doro Watch)24 One-touch measurement (Added in IDW05)25 renpho health (Added in IDW12)26 Compass (new on mp01)27 Barometric altimeter (new on mp01) Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:51:28 "},"doc/model/IDOActivitySwitchParamModel.html":{"url":"doc/model/IDOActivitySwitchParamModel.html","title":"IDOActivitySwitchParamModel","keywords":"","body":"IDOActivitySwitchParamModel Properties Type Description autoIdentifySportWalk Int Automatically identify walking switch 0 off1 onFunction table: getAutoActivitySetGetUseNewStructExchange autoIdentifySportRun Int Automatically identify running switch 0 off1 onFunction table: getAutoActivitySetGetUseNewStructExchange autoIdentifySportBicycle Int Automatically identify bicycle switch 0 off1 onFunction table: getAutoActivitySetGetUseNewStructExchange autoPauseOnOff Int Motion auto-pause 0 off1 onFunction table: getAutoActivitySetGetUseNewStructExchange autoEndRemindOnOffOnOff Int End reminder 0 off1 onFunction table: getAutoActivitySetGetUseNewStructExchange autoIdentifySportElliptical Int Automatically identify the elliptical machine switch 0 off1 onFunction table: getAutoActivitySetGetUseNewStructExchange autoIdentifySportRowing Int Automatically identify rowing machine switch 0 off1 onFunction table: getAutoActivitySetGetUseNewStructExchange autoIdentifySportSwim Int Automatically identify swimming switch 0 off1 onFunction table: getAutoActivitySetGetUseNewStructExchange autoIdentifySportSmartRope Int Automatically identify smart rope skipping switch 0 off1 onFunction table: getAutoActivitySetGetUseNewStructExchange Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:42:47 "},"doc/enum/IDOEnumIndex.html":{"url":"doc/enum/IDOEnumIndex.html","title":"Enum","keywords":"","body":"枚举 IDO Evt Type IDO Sport Type IDO Trans Type Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 17:19:17 "},"doc/enum/IDOEvtType.html":{"url":"doc/enum/IDOEvtType.html","title":"Evt Type","keywords":"","body":"Event type evtType Type Description 0x01 SMS 0x02 Email 0x03 WeChat 0x04 QQ 0x05 Sina Weibo 0x06 facebook 0x07 twitter 0x08 WhatsApp 0x09 Messenger 0x0A Instagram 0x0B Linked in 0x0C Calendar 0x0D skype; 0x0E Alarm clock 0x0F pokeman 0x10 VKontakte 0x11 Line 0x12 Viber 0x13 KakaoTalk 0x14 Gmail 0x15 Outlook, 0x16 Snapchat 0x17 TELEGRAM 0x18 other 0x20 chatwork 0x21 slack 0x22 Yahoo Mail 0x23 Tumblr, 0x24 Youtube 0x25 Yahoo Pinterest 0x26 TikTok 0x27 Redbus 0x28 Dailyhunt 0x29 Hotstar 0x2A Inshorts 0x2B Paytm 0x2C Amazon 0x2D Flipkart 0x2E Prime 0x2F Netflix 0x30 Gpay 0x31 Phonpe 0x32 Swiggy 0x33 Zomato 0x34 Make My trip 0x35 Jio Tv 0x36 keep 0x37 Microsoft 0x38 WhatsApp Business 0x39 niosefit 0x3A missed_callsMissed calls 0x3B Gpap 0x3C YTmusic 0x3D Uber 0x3E Ola 0x3F Reminder 0x40 Google meet Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "},"doc/enum/IDOSportType.html":{"url":"doc/enum/IDOSportType.html","title":"Sport Type","keywords":"","body":"Sport type sportType Function Table：getSportsTypeV3 = false Previous sport types: Type Description 0 None 1 walking 2 Running 3 Cycling 4 Hiking 5 Swimming 6 Mountain Climbing 7 Badminton 8 Others 9 Fitness 10 Spinning bike 11 Elliptical machine 12 Treadmill 13 Sit-ups 14 Push-ups 15 Dumbbells 16 Weightlifting 17 Aerobics 18 Yoga 19 Skipping Rope 20 Table Tennis 21 Basketball 22 Football 23 Volleyball 24 Tennis 25 Golf 26 Baseball 27 Skiing 28 Roller skating 29 Dancing 31 indoor rowing/roller machine 32 Pilates/pilates 33 cross training/cross train 34 Aerobics/cardio 35 Zumba/Zumba 36 square dance/square dance 37 Plank 38 gym/gym Function Table：getSportsTypeV3 = true New equipment sport types Type Description 48 Outdoor running 49 Indoor running, 50 Outdoor Cycling 51 Indoor Cycling 52 Walking outdoors 53 Indoor walking 54 Pool Swimming 55 Open Water Swimming 56 Elliptical machine 57 Rowing Machine 58 High intensity interval training 75 Cricket Basic exercise: Type Description 101 Functional Strength Training 102 Core Training 103 Stepper 104 Organize and relax Basic fitness (25 types): Type Description 110 Traditional Strength Training 112 Pull-ups 114 Jumping Jacks 115 Squats 116 Lift your legs high 117 Boxing 118 Barbell 119 Martial Arts 120 Tai Chi 121 Taekwondo 122 Karate 123 Free Fighting 124 Fencing 125 Archery 126 Gymnastics 127 Horizontal Bar 128 Parallel bars 129 Walking machine 130 Climbing machine Ball games: Type Description 131 Bowling 132 Billiards 133 Hockey 134 Rugby 135 Squash 136 Softball 137 Handball 138 Shuttlecock 139 Beach Soccer 140 Sepak Takraw 141 Dodgeball Leisure sport: Type Description 152 Street dance 153 Ballet 154 Social Dance 155 Frisbee 156 Darts 157 Horse riding 158 Climbing stairs 159 Kite flying 160 Fishing Ice and snow sports: Type Description 161 Sled 162 Snowmobile 163 Snowboarding 164 Snow Sports 165 Alpine Skiing 166 Cross-country skiing 167 Curling 168 Ice Hockey 169 Biathlon Extreme sports (5 types): Type Description 180 Skateboard 181 Rock Climbing 182 Bungee Jumping 183 Parkour 184 BMX kr01 customized project: Type Description 193 Outdoor Fun (outdoor play) 194 Other Activity Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-01-24 15:49:37 "},"doc/enum/IDOTransType.html":{"url":"doc/enum/IDOTransType.html","title":"Trans Type","keywords":"","body":"Transfer file type IDOTransType Type Description fw Firmware upgrade fzbin Image resource upgrade bin font upgrade lang Language pack upgrade bt BT upgrade iwfLz Dial wallpaperZ wallpaper dial ml Address book file onlineUbx agps online offlineUbx agps offline epo epo upgrade gps gps ton prompt tone watch Sifli wallpaper dial Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2024-02-02 10:37:10 "},"doc/IDOErrorCode.html":{"url":"doc/IDOErrorCode.html","title":"IDO Error Code","keywords":"","body":"Error Code Description Overview errorCode is the basis for determining the status of global command callbacks. When errorCode is equal to 0, it indicates success, while other values indicate failure. Corresponding Error Code Table Error Code Description 0 Successful command 1 SVC handler is missing 2 SoftDevice has not been enabled 3 Internal Error 4 No Memory for operation 5 Not found 6 Not supported 7 Invalid Parameter 8 Invalid state, operation disallowed in this state 9 Invalid Length 10 Invalid Flags 11 Invalid Data 12 Invalid Data size 13 Operation timed out 14 Null Pointer 15 Forbidden Operation 16 Bad Memory Address 17 Busy 18 Maximum connection count exceeded. 19 Not enough resources for operation 20 Bluetooth upgrade error 21 Not enough space for operation 22 Low Battery 23 Invalid File Name/Format 24 Sufficient space, but defragmentation required 25 Defragmentation in progress -1 Canceled -2 Failed -3 Command already in queue -4 Device disconnected -5 OTA mode -6 Device not connected -99 JSON parsing failed Copyright © 2023-2024 IDO. All rights reserved. all right reserved，powered by GitbookModify Date: 2023-11-28 09:50:25 "}}